namespace = magic_ev2
#some magic event initialisation
magic_ev2.1 = {
	hidden = yes
	#type = empty
	scope = none
	immediate = {
		random_list = {
			#100 = {
			#	#fake magic sword
			#	trigger = {
			#		any_ruler = {
			#			is_ai = no
			#			exists = dynasty
			#			dynasty={
			#				NOT={
			#					has_variable=fake_artif
			#				}
			#			}
			#			#is_ruler = yes
			#			
			#			#any_pool_character = {
			#			#	province = prev.capital_province
			#			#}
			#			any_courtier_or_guest = {
			#				is_foreign_court_or_pool_guest = yes
			#			}
			#		}
			#	}
			#	random_ruler = {
			#		limit = {
			#				exists = dynasty
			#				dynasty={
			#					NOT={
			#						has_variable=fake_artif
			#					}
			#				}
			#				#is_ruler = yes
			#				is_ai = no
			#				any_courtier_or_guest = {
			#					is_foreign_court_or_pool_guest = yes
			#				}
			#		}
			#		trigger_event = {
			#			id = magic_ev2.2
			#			days = { 1 360 }
			#		}
			#		#trigger_event = magic_ev.100
			#	}
			#}
			50 = {
				#rumors about mages
				trigger = {
					any_ruler = {
						exists = dynasty
						dynasty={
							NOT={
								has_variable=rumors_mages
							}
						}
						is_ai = no
						NOR = {
							any_character_artifact = { has_variable = magic1 }
							has_trait = source
							has_trait = source2
						}
					}
					any_ruler = {
						OR = {
							has_trait = archmage
							has_focus = arcane_focus
						}
						any_character_artifact = { has_variable = magic1 }
						is_ai = yes
					}
				}
				random_ruler = {
					limit = {
						exists = dynasty
						dynasty={
							NOT={
								has_variable=rumors_mages
							}
						}
						is_ai = no
						NOR = {
							any_character_artifact = { has_variable = magic1 }
							has_trait = source
							has_trait = source2
						}
					}
					trigger_event = {
						id = magic_ev2.25
						days = { 1 360 }
					}
					#trigger_event = magic_ev.100
				}
			}
			40 = {
				#ring of life paranoia
				trigger = {
					any_ruler = {
						any_character_artifact = { has_variable = magic_ring }
						NOT = {	has_character_flag = ring_of_life_paranoia	}
						is_ai = no
					}
				}
				random_ruler = {
					limit = {
						any_character_artifact = { has_variable = magic_ring }
						NOT = {	has_character_flag = ring_of_life_paranoia	}
						is_ai = no
					}
					trigger_event = {
						id = magic_ev4.51
						days = { 1 360 }
					}
					#trigger_event = magic_ev.100
				}
			}
			#50 = {
			#	#rumors about magic artifact
			#	trigger = {
			#		any_ruler = {
			#			NOT = {
			#				has_character_flag = rumor_magic_item
			#			}
			#			is_landed = yes
			#			has_trait = true_witch
			#			exists = house
			#			exists = dynasty
			#			house = {
			#				has_house_modifier = witch_coven
			#				NOT = {
			#					any_house_member = {
			#						any_character_artifact = { has_variable = magic1 }
			#					}
			#				}
			#			}
			#			OR = {
			#				is_house_head = yes
			#				is_dynast = yes
			#			}
			#		}
			#	}
			#	random_ruler = {
			#		limit = {
			#			NOT = {
			#				has_character_flag = rumor_magic_item
			#			}
			#			is_landed = yes
			#			has_trait = true_witch
			#			exists = house
			#			exists = dynasty
			#			house = {
			#				has_house_modifier = witch_coven
			#				NOT = {
			#					any_house_member = {
			#						any_character_artifact = { has_variable = magic1 }
			#					}
			#				}
			#			}
			#			OR = {
			#				is_house_head = yes
			#				is_dynast = yes
			#			}
			#		}
			#		trigger_event = {
			#			id = magic_ev2.55
			#			days = { 1 360 }
			#		}
			#		#trigger_event = magic_ev.100
			#	}
			#}
			80 = {
				#new enemy
				trigger = {
					any_ruler = {
						is_landed = yes
						OR = {
							has_trait = archmage
							has_focus = arcane_focus
							AND = {
								has_trait = witch_hunter
								is_ai = no
							}
							NOT = {	has_character_flag = special_magic_character	}
							NOT = {	has_trait = incapable	}
						}
						NOR = {
							any_relation = {
								type = rival
								OR = {
									has_trait = archmage
									has_focus = arcane_focus
								}
							}
							any_relation = {
								type = nemesis
								OR = {
									has_trait = archmage
									has_focus = arcane_focus
								}
							}
							any_relation = {
								type = friend
								OR = {
									has_trait = archmage
									has_focus = arcane_focus
								}
							}
							any_relation = {
								type = best_friend
								OR = {
									has_trait = archmage
									has_focus = arcane_focus
								}
							}
							any_relation = {
								type = lover
								OR = {
									has_trait = archmage
									has_focus = arcane_focus
								}
							}
							any_relation = {
								type = soulmate
								OR = {
									has_trait = archmage
									has_focus = arcane_focus
								}
							}
						}
						count > 1
					}
				}
				random_ruler = {
					limit = {
						NOT = {	has_character_flag = special_magic_character	}
						NOT = {	has_trait = incapable	}
						OR = {
							has_trait = archmage
							has_focus = arcane_focus
						}
						NOR = {
							any_relation = {
								type = rival
								OR = {
									has_trait = archmage
									has_focus = arcane_focus
								}
							}
							any_relation = {
								type = nemesis
								OR = {
									has_trait = archmage
									has_focus = arcane_focus
								}
							}
							any_relation = {
								type = friend
								OR = {
									has_trait = archmage
									has_focus = arcane_focus
								}
							}
							any_relation = {
								type = best_friend
								OR = {
									has_trait = archmage
									has_focus = arcane_focus
								}
							}
							any_relation = {
								type = lover
								OR = {
									has_trait = archmage
									has_focus = arcane_focus
								}
							}
							any_relation = {
								type = soulmate
								OR = {
									has_trait = archmage
									has_focus = arcane_focus
								}
							}
						}
						is_landed = yes
						#is_ai = no
					}
					trigger_event = {
						id = magic_ev2.301
						days = { 1 360 }
					}
				}
			}
			80 = {
				#preemptive strike
				trigger = {
					any_ruler = {
						NOR = {
							has_character_flag = special_magic_character
						}
						OR = {
							has_trait = archmage
							has_focus = arcane_focus
							has_trait = demon
						}
						OR = {
							any_relation = {
								type = rival
								OR = {
									has_trait = archmage
									has_focus = arcane_focus
								}
							}
							any_relation = {
								type = nemesis
								OR = {
									has_trait = archmage
									has_focus = arcane_focus
								}
							}
						}
					}
				}
				random_ruler = {
					limit = {
						NOT = {	has_character_flag = special_magic_character	}
						OR = {
							has_trait = archmage
							has_focus = arcane_focus
							has_trait = demon
						}
						OR = {
							any_relation = {
								type = rival
								OR = {
									has_trait = archmage
									has_focus = arcane_focus
								}
							}
							any_relation = {
								type = nemesis
								OR = {
									has_trait = archmage
									has_focus = arcane_focus
								}
							}
						}
						is_landed = yes
					}
					trigger_event = {
						id = magic_ev2.5
						days = { 1 360 }
					}
				}
			}
			#20 = {
			#	#magical experiments
			#	trigger = {
			#		any_ruler = {
			#			has_trait = true_witch
			#			OR = {
			#				has_trait = lifestyle_mystic
			#				has_trait = lifestyle_mystic
			#				has_trait = lifestyle_mystic
			#				has_trait = possessed_1
			#				has_trait = possessed_genetic
			#			}
			#			NOR = {
			#				has_perk = magical_experiments_p1_perk
			#				has_trait = source
			#				dynasty = {
			#					has_variable = mexperiments
			#				}
			#				any_character_artifact = { has_variable = magic1 }
			#			}
			#		}
			#		any_ruler = {
			#			OR = {
			#				has_trait = archmage
			#				has_focus = arcane_focus
			#			}
			#			count < 5
			#		}
			#	}
			#	random_ruler = {
			#		limit = {
			#				has_trait = true_witch
			#				OR = {
			#					has_trait = lifestyle_mystic
			#					has_trait = lifestyle_mystic
			#					has_trait = lifestyle_mystic
			#					has_trait = possessed_1
			#					has_trait = possessed_genetic
			#				}
			#				NOR = {
			#					has_perk = magical_experiments_p1_perk
			#					has_trait = source
			#					dynasty = {
			#						has_variable = mexperiments
			#					}
			#					any_character_artifact = { has_variable = magic1 }
			#				}
			#				is_landed = yes
			#		}
			#		trigger_event = {
			#			id = magic_ev2.7
			#			days = { 1 360 }
			#		}
			#	}
			#}
			#25 = {
			#	#mind reader
			#	trigger = {
			#		any_ruler = {
			#			has_trait = true_witch
			#			has_trait = archmage
			#			NOT = { has_character_modifier = mind_reader_modifier }
			#		}
			#	}
			#	random_ruler = {
			#		limit = {
			#			has_trait = true_witch
			#			has_trait = archmage
			#			NOT = { has_character_modifier = mind_reader_modifier }
			#			is_landed = yes
			#		}
			#		trigger_event = {
			#			id = magic_ev2.8
			#			days = { 1 360 }
			#		}
			#	}
			#}
			40 = {
				#stole magic artifact 4 ai
				trigger = {
					any_living_character = {
						OR = {
							has_trait = true_witch
							has_focus = witch_focus
							has_focus = arcane_focus
							has_trait = archmage
						}
						intrigue > 12
						NOR = {
							has_trait = source
							has_trait = source2
							
							has_character_flag = special_magic_character
						}
						NOT = {
							any_character_artifact = { has_variable = magic1 }
						}
						is_ai=yes
					}
				}
				random_living_character = {
					limit = {
						OR = {
							has_trait = true_witch
							has_focus = witch_focus
							has_focus = arcane_focus
							has_trait = archmage
						}
						
						intrigue > 12
						NOR = {
							has_trait = source
							has_trait = source2
							has_character_flag = special_magic_character
						}
						NOT = {
							any_character_artifact = { has_variable = magic1 }
						}
						is_ai=yes
					}
					trigger_event = {
						id = magic_ev2.10
						days = { 1 360 }
					}
				}
			}
			#10 = {
			#	#stole magic artifact 4 all
			#	trigger = {
			#		any_ruler = {
			#			OR = {
			#				has_trait = true_witch
			#				has_trait = witch
			#				any_secret = { secret_type = secret_witch }
			#			}
			#			intrigue > 12
			#			NOT = {
			#				has_trait = source
			#				has_focus = arcane_focus
			#			}
			#			NOT = {
			#				any_character_artifact = { has_variable = magic1 }
			#			}
			#		}
			#	}
			#	random_ruler = {
			#		limit = {
			#			OR = {
			#				has_trait = true_witch
			#				has_trait = witch
			#				any_secret = { secret_type = secret_witch }
			#			}
			#			
			#			intrigue > 12
			#			NOT = {
			#				has_trait = source
			#				has_focus = arcane_focus
			#			}
			#			NOT = {
			#				any_character_artifact = { has_variable = magic1 }
			#			}
			#		}
			#		trigger_event = {
			#			id = magic_ev2.10
			#			days = { 1 360 }
			#		}
			#	}
			#}
			#50 = {
			#	#claim for demon
			#	trigger = {
			#		any_living_character = {
			#			has_trait = demon
			#			is_ruler = no
			#			is_claimant = no
			#		}
			#		any_ruler = {
			#			NOT = { has_trait = demon }
			#			OR = {
			#				has_trait = archmage
			#				has_focus = arcane_focus
			#			}
			#			any_held_title = {
			#				tier = tier_county
			#			}
			#		}
			#	}
			#	random_ruler = {
			#		limit = {
			#			NOT = { has_trait = demon }
			#			OR = {
			#				has_trait = archmage
			#				has_focus = arcane_focus
			#			}
			#			is_landed = yes
			#		}
			#		save_scope_as = target_ruler
			#	}
			#	scope:target_ruler = {
			#		random_held_title = {
			#			limit = {
			#				tier = tier_county
			#			}
			#			save_scope_as = tcounty
			#		}
			#	}
			#	random_living_character = {
			#		limit = {
			#			has_trait = demon
			#			is_ruler = no
			#			is_claimant = no
			#		}
			#		add_pressed_claim = scope:tcounty
			#	}
			#}
			80 = {
				#rival for demon
				trigger = {
					any_living_character = {
						NOT = {	has_character_flag = special_magic_character	}
						has_trait = demon
						NOT = { has_character_flag = lilith }
						NOT = {	has_trait = incapable	}
						NOT = {
							any_relation = {
								type = rival
							}
						}
						NOT = {
							any_relation = {
								type = nemesis
							}
						}
						is_ai = yes
					}
					any_ruler = {
						NOT = { has_trait = demon }
						OR = {
							has_trait = archmage
							has_focus = arcane_focus
						}
					}
				}
				random_living_character = {
					limit = {
						NOT = {	has_character_flag = special_magic_character	}
						has_trait = demon
						NOT = { has_character_flag = lilith }
						NOT = {
							any_relation = {
								type = rival
							}
						}
						NOT = {
							any_relation = {
								type = nemesis
							}
						}
						is_ai = yes
					}
					trigger_event = {
						id = magic_ev2.14
						days = { 1 360 }
					}
				}
			}
			70 = {
				#magic catalyst/darkblade/singularity turn ai into witch
				trigger = {
					any_living_character = {
						NOR = {
							has_trait = witch
							any_secret = { secret_type = secret_witch }
							has_character_flag = used_catalyst
						}
						OR = {
							any_character_artifact = { has_variable = catalyst }
							any_character_artifact = { has_variable = singularity }
							any_character_artifact = { has_variable = dark_blade }
						}
						
						is_ai = yes
						is_adult = yes
					}
				}
				random_living_character = {
					limit = {
						NOR = {
							has_trait = witch
							any_secret = { secret_type = secret_witch }
							has_character_flag = used_catalyst
						}
						OR = {
							any_character_artifact = { has_variable = catalyst }
							any_character_artifact = { has_variable = singularity }
							any_character_artifact = { has_variable = dark_blade }
						}
						is_ai = yes
						is_adult = yes
					}
					trigger_event = magic_ev2.23
				}
			}
			#50 = {
			#	#new true witch
			#	trigger = {
			#		NOT = {
			#			any_ruler = {
			#				NOT = {
			#					any_character_artifact = { has_variable = magic }
			#				}
			#				OR = {
			#					has_focus = witch_focus
			#					has_trait = true_witch
			#				}
			#				is_ai = yes
			#			}
			#		}
			#	}
			#	random_ruler = {
			#		limit = {
			#			NOR = {
			#				any_character_artifact = { has_variable = magic }
			#				has_trait = zealous
			#				has_trait = source
			#				has_trait = compassionate
			#			}
			#			is_male = no
			#			is_landed = yes
			#			is_ai = yes
			#			is_adult = yes
			#			capital_province = {
			#				OR = {
			#					geographical_region = world_asia_minor
			#					geographical_region = world_europe
			#				}	
			#			}
			#			is_imprisoned = no
			#		}
			#		add_secret = {
			#			type = secret_witch
			#			target = THIS
			#		}
			#		add_perk = protective_runes_perk
			#		add_perk = witch_familiar_perk
			#		add_perk = oneiromancy_perk
			#		add_perk = wisdom_of_nature_perk
			#		add_perk = love_potions_perk
			#		add_perk = mistical_insight_perk
			#		add_perk = evil_eye_perk
			#		add_perk = magical_senses_perk
			#		add_perk = lifestealer_perk
			#		add_perk = true_witch_perk
			#	}
			#}
			#50 = {
			#	#perks4ai
			#	trigger = {
			#		any_living_character = {
			#			OR = {
			#				has_focus = witch_focus
			#				has_focus = arcane_focus
			#			}
			#			is_ai = yes
			#		}
			#	}
			#	random_living_character = {
			#		limit = {
			#			OR = {
			#				has_focus = witch_focus
			#				has_focus = arcane_focus
			#			}
			#			is_ai = yes
			#		}
			#		add_magic_lifestyle_perk_points=1
			#	}
			#}
			#100 = {
			#	#perks4witch
			#	trigger = {
			#		any_living_character = {
			#			has_focus = witch_focus
			#			NOT = { has_character_flag = oneiromancy }
			#			NOT = { has_trait = true_witch }
			#		}
			#	}
			#	random_living_character = {
			#		limit = {
			#			has_focus = witch_focus
			#			NOT = { has_character_flag = oneiromancy }
			#			NOT = { has_trait = true_witch }
			#		}
			#		trigger_event = {
			#			id = magic_ev2.46
			#			days = { 1 360 }
			#		}
			#
			#	}
			#}
			100 = {
				#perks4sorcerer
				trigger = {
					any_living_character = {
						has_focus = arcane_focus
						is_ai = yes
						NOT = { has_character_flag = magicperk }
						can_be_power_saturated_trigger = yes
						NOR = {
							has_trait = source
							has_trait = source2
							has_trait = source3
							has_trait = archmage
						}
					}
				}
				every_living_character = {
					limit = {
						has_focus = arcane_focus
						is_ai = yes
						NOT = { has_character_flag = magicperk }
						can_be_power_saturated_trigger = yes
						NOR = {
							has_trait = source
							has_trait = source2
							has_trait = source3
							has_trait = archmage
						}
					}
					trigger_event = {
						id = magic_ev2.47
						days = { 1 36 }
					}

				}
			}
			50 = {
				#Legion
				trigger = {
					NOT = {
						has_game_rule = never_magic_bael
					}
					#has_game_rule = normal_magic_bael
					any_ruler = {
						has_trait = archmage
						has_trait = true_witch
						is_ai = no
						highest_held_title_tier = tier_empire
						dynasty={
							NOT={
								has_variable=legion
							}
						}
						any_character_artifact = { has_variable = magic1 }
					}

				}
				random_ruler = {
					limit = {
						has_trait = archmage
						#has_trait = true_witch
						is_ai = no
						is_landed = yes
						highest_held_title_tier = tier_empire
						dynasty={
							NOT={
								has_variable=legion
							}
						}
						any_character_artifact = { has_variable = magic1 }
					}
					trigger_event = {
						id = magic_ev2.48
						days = { 1 360 }
					}
				}
			}
			80 = {
				#if yaga lost her house then her family take actions against current owner...
				#...or empty event otherwise
				random_ruler = {
					limit = {
						has_witch_house_trigger = yes
					}
					trigger_event = {
						id = magic_ev4.90
						days = { 1 360 }
					}
				}

				#and remove incapable from Yaga
				if = {
					limit = {
						any_living_character = {
							OR = {
								has_character_flag = yaga_flag
								has_character_flag = merlin_dude
							}
							is_ai = yes
							has_trait = incapable
						}
					}
					random_living_character = {
						limit = {
							OR = {
								has_character_flag = yaga_flag
								has_character_flag = merlin_dude
							}
							is_ai = yes
							has_trait = incapable
						}
						remove_trait = incapable
					}
				}
				#and hook for yaga's liege
				if = {
					limit = {
						any_living_character = {
							has_character_flag = yaga_flag
							is_ai = yes
							exists = this.liege
							NOR = {
								has_hook = this.liege
								this.liege = {
									is_ai = no
								}
								this.liege = this
							}
						}
					}
					random_living_character = {
						limit = {
							has_character_flag = yaga_flag
							is_ai = yes
						}
						add_hook = {
							type = loyalty_hook
							target = this.liege
						}
					}
				}
				#and remove incapable from demons
				if = {
					limit = {
						any_living_character = {
							has_trait = demon
							is_ai = yes
							has_trait = incapable
						}
					}
					random_living_character = {
						limit = {
							has_trait = demon
							is_ai = yes
							has_trait = incapable
						}
						remove_trait = incapable
					}
				}
				#and Abraxas...
				if = {
					limit = {
						any_ruler = {
							is_ai = no
							has_trait = archmage
							age > 70
							any_held_title = {
								tier = tier_kingdom
							}
							any_character_artifact = {
								has_variable = magic1
								count > 1
							}
							house = {
								NOT = {
									has_variable = abraxax_was_here
								}
							}
						}
						NOT = {
							any_living_character = {
								has_character_flag = abraxas
							}
						}
					}
					random_ruler = {
						limit = {
							is_ai = no
							has_trait = archmage
							age > 70
							any_held_title = {
								tier = tier_kingdom
							}
							any_character_artifact = {
								has_variable = magic1
								count > 1
							}
							house = {
								NOT = {
									has_variable = abraxax_was_here
								}
							}
						}
						trigger_event = magic_ev5.59
					}
				}
			}
			100 = {
				#court mage event or empty
				random_living_character = {
					limit = {
						has_court_position = mage_court_position
						NOT = { has_character_flag = court_mage_event }
					}
					save_scope_as = ccmage
				}
				if = {
					limit = {
						exists = scope:ccmage
						#scope:ccmage = {
						#	NOT = { has_character_flag = court_mage_event }
						#}
					}
					scope:ccmage = {
						trigger_event = {
							id = magic_ev3.72
							days = { 1 360 }
						}
					}
				}
			}
		}
	}
}

#false magic artifact
magic_ev2.2 = {
	title = ev2.2.title
	type = character_event
	desc = ev2.2.desc
	theme =  realm
	left_portrait = root
	right_portrait = scope:vend
	trigger = {
		#any_pool_character = {
		#	province = root.capital_province
		#}
		is_imprisoned = no
		any_courtier_or_guest = {
			is_foreign_court_or_pool_guest = yes
			is_adult = yes
		}
	}
	immediate = {
		#random_courtier_or_guest = {
		#	limit = {
		#		NOR = {
		#			is_close_or_extended_family_of = root
		#			is_spouse_of = root
		#		}
		#	}
		#	save_scope_as = vend
		#}
		#random_pool_character = {
		#	province = prev.capital_province
		#	save_scope_as = vend
		#}
		random_courtier_or_guest = {
			limit = {
				is_foreign_court_or_pool_guest = yes
				is_adult = yes
			}
			save_scope_as = vend
		}
	}

	option = {
		name = ev2.2.a
		trigger = {
			gold >= 100
		}
		hidden_effect = {
			create_fake_magic_artifact_effect = {
				OWNER = root
				GIVER = scope:vend
			}
			dynasty={
				set_variable=fake_artif
			}
			#scope:vend = {
			#	move_to_pool = yes
			#}
		}
		custom_tooltip = ev2.2.a_ct
		pay_short_term_gold = {
			target = scope:vend
			gold = 100
		}
		ai_chance = {
			base = 10
		}
	}
	option = {
		name = ev2.2.b
		trigger = {
			has_trait = true_witch
		}
		trait = true_witch
		hidden_effect = {
			dynasty={
				set_variable=fake_artif
			}
			
		}
		add_prestige = 200
		ai_chance = {
			base = 100
		}
	}
	option = {
		name = ev2.2.c
		if = {
			limit = {
				trait_is_criminal_in_faith_trigger = { TRAIT = witch FAITH = root.faith GENDER_CHARACTER = root }
			}
			add_piety = minor_piety_gain
		}
		else = {
			add_prestige = -50
		}
		
		hidden_effect = {
			dynasty={
				set_variable=fake_artif
			}
			
		}
		ai_chance = {
			base = 100
		}
	}
	option = {
		name = ev2.2.d
		ai_chance = {
			base = 100
		}		
	}
}
#the enemy - preparing
magic_ev2.301 = {
	hidden = yes
	type = character_event
	trigger = {
		is_alive = yes
		any_ruler = {
			NOT = {	has_character_flag = special_magic_character	}
			NOT = {	has_trait = incapable	}
			OR = {
				has_trait = archmage
				has_focus = arcane_focus
				AND = {
					has_trait = witch_hunter
					is_ai = no
				}
			}
			any_relation = {
				type = rival
				OR = {
					has_trait = archmage
					has_focus = arcane_focus
				}
				count <= 1
			}
			any_relation = {
				type = nemesis
				OR = {
					has_trait = archmage
					has_focus = arcane_focus
				}
				count <= 1
			}
			NOR = {
				has_strong_hook = root
				root = {
					has_strong_hook = prev
				}
			}
			NOT = { this = root }
			is_landed = yes
		}
	}

	immediate = {
		random_ruler = {
			limit = {
				NOT = {	has_character_flag = special_magic_character	}
				NOT = {	has_trait = incapable	}
				OR = {
					has_trait = archmage
					has_focus = arcane_focus
					AND = {
						has_trait = witch_hunter
						is_ai = no
					}
				}
				any_relation = {
					type = rival
					OR = {
						has_trait = archmage
						has_focus = arcane_focus
					}
					count <= 1
				}
				any_relation = {
					type = nemesis
					OR = {
						has_trait = archmage
						has_focus = arcane_focus
					}
					count <= 1
				}
				NOT = { this = root }
				is_landed = yes
			}
			save_scope_as = enemy
		}
		if = {
			limit = {
				scope:enemy = {
					opinion = {
						target = root
						value < 41
					}
				}
			}
			trigger_event = magic_ev2.3
		}
		
	}
}
#the enemy
magic_ev2.3 = {
	title = ev2.3.title
	type = character_event
	desc = ev2.3.desc
	theme =  realm
	left_portrait = root
	right_portrait = scope:enemy
	trigger = {
		#NOT = { root = scope:enemy }
		NOT = {	has_character_flag = special_magic_character	}
		OR = {
			has_trait = archmage
			has_focus = arcane_focus
			AND = {
				has_trait = witch_hunter
				is_ai = no
			}
		}
		NOR = {
			any_relation = {
				type = rival
				OR = {
					has_trait = archmage
					has_focus = arcane_focus
				}
			}
			any_relation = {
				type = nemesis
				OR = {
					has_trait = archmage
					has_focus = arcane_focus
				}
			}
			any_relation = {
				type = friend
				OR = {
					has_trait = archmage
					has_focus = arcane_focus
				}
			}
			any_relation = {
				type = best_friend
				OR = {
					has_trait = archmage
					has_focus = arcane_focus
				}
			}
			any_relation = {
				type = lover
				OR = {
					has_trait = archmage
					has_focus = arcane_focus
				}
			}
			any_relation = {
				type = soulmate
				OR = {
					has_trait = archmage
					has_focus = arcane_focus
				}
			}
		}
		is_landed = yes	
	}
	immediate = {
		save_scope_as = this0
		
	}

	option = {
		name = ev2.3.a
		trigger = {
			NOT = { has_relation_friend = scope:enemy }
			NOT = { has_relation_best_friend = scope:enemy }
			NOT = { has_relation_lover = scope:enemy }
			NOT = { has_relation_soulmate = scope:enemy }
		}
		if = {
			limit = {
				has_relation_nemesis = scope:enemy
			}
			start_scheme = {
				type = murder
				target = scope:enemy
			}
		}
		else_if = {
			limit = {
				has_relation_rival = scope:enemy
			}
			set_relation_nemesis = scope:enemy
			scope:enemy = {
				trigger_event = magic_ev2.4
			}
		}
		else = {
			set_relation_rival = scope:enemy
			#set_random_rivalry_reason = { TARGET = scope:enemy }
			scope:enemy = {
				trigger_event = magic_ev2.4
			}
		}
		if = {
			limit = {
				is_ai = yes
			}
			random_list = {
				1 = {
					if = {
						limit = {
							exists = scope:enemy.primary_title
							NOT = {
								has_claim_on = scope:enemy.primary_title
							}
						}
						add_unpressed_claim = scope:enemy.primary_title
					}
				}
				1 = {
					if = {
						limit = {
							scope:enemy = {
								any_character_artifact = {
									has_variable = magic1
								}
							}
						}
						scope:enemy = {
							random_character_artifact = {
								limit = {
									has_variable = magic1
								}
								save_scope_as = eart
							}
						}
						if = {
							limit = {
								NOT = {
									has_personal_artifact_claim = scope:eart
								}
							}
							add_personal_artifact_claim = scope:eart
						}
					}
				}
				1 = {
					if = {
						limit = {
							scope:enemy = {
								is_landed = yes
							}
						}
						scope:enemy = {
							random_courtier = {
								limit = {
									NOT = {
										this = scope:enemy.player_heir
									}
								}
								save_scope_as = ecour
							}
						}
						add_hook = {
							type = loyalty_hook
							target = scope:ecour
						}
					}
				}
			}
		}
		hidden_effect = {
			add_opinion = {
				target = scope:enemy
				modifier = rival_magic_modifier
				years = 30
			}
			scope:enemy = {
				add_opinion = {
					target = root
					modifier = rival_magic_modifier
					years = 30
				}
			}
		}
		ai_chance = {
			base = 50
		}
	}
	option = {
		name = ev2.3.b
		trigger = {
			OR = {
				has_relation_friend = scope:enemy
				has_relation_best_friend = scope:enemy
				has_relation_lover = scope:enemy
				has_relation_soulmate = scope:enemy
			}
		}
		clear_saved_scope = this0
		ai_chance = {
			base = 10
		}
	}
	option = {
		name = ev2.3.c
		trigger = {
			has_trait = arrogant
		}
		trait = arrogant
		clear_saved_scope = this0
		ai_chance = {
			base = 10
		}
	}
	option = {
		name = ev2.3.d
		trigger = {
			has_trait = trusting
			OR = {
				has_relation_friend = scope:enemy
				has_relation_best_friend = scope:enemy
				has_relation_lover = scope:enemy
				has_relation_soulmate = scope:enemy
			}
		}
		trait = trusting
		clear_saved_scope = this0
		ai_chance = {
			base = 100
		}
	}
	after = {
		if = {
			limit = {
				is_ai = yes
				NOT = { has_perk = protective_runes_perk }
			}
			add_perk = protective_runes_perk
		}
	}
}

#enemy continue
magic_ev2.4 = {
	title = ev2.4.title
	type = character_event
	desc = ev2.4.desc
	theme =  realm
	left_portrait = root
	right_portrait = scope:this0
	
	immediate = {
		if = {
			limit = {
				has_relation_nemesis = scope:this0
			}
			show_as_tooltip = {
				set_relation_nemesis = scope:this0
			}
		}
		else_if = {
			limit = {
				has_relation_rival = scope:this0
			}
			show_as_tooltip = {
				set_relation_rival = scope:this0
				#set_random_rivalry_reason = { TARGET = scope:this0 }
			}
		}
		
	}

	option = {
		name = ev2.4.a
		clear_saved_scope = this0
	}
	after = {
		if = {
			limit = {
				is_ai = yes
				NOT = { has_perk = protective_runes_perk }
			}
			add_perk = protective_runes_perk
		}
	}
}

#preemptive strike
magic_ev2.5 = {
	title = ev2.5.title
	type = character_event
	desc = ev2.5.desc
	theme =  realm
	left_portrait = root
	right_portrait = scope:enemy
	trigger = {
		#NOT = { root = scope:enemy }
		NOT = {	has_character_flag = special_magic_character	}
		OR = {
			any_relation = {
				type = rival
				is_landed = yes
				OR = {
					has_trait = archmage
					has_focus = arcane_focus
				}
			}
			any_relation = {
				type = nemesis
				is_landed = yes
				OR = {
					has_trait = archmage
					has_focus = arcane_focus
				}
			}
		}
		NOT = {
			has_character_flag = strikes_in_rival
		}
		#exists = scope:enemy
	}
	immediate = {
		save_scope_as = this0
		random_ruler = {
			limit = {
				OR = {
					has_trait = archmage
					has_focus = arcane_focus
				}
				OR = {
					has_relation_rival = root
					has_relation_nemesis = root
				}
				#NOT = { this = root }
				is_landed = yes
			}
			save_scope_as = enemy
		}
		if = {
			limit = {
				any_living_character = {
					has_relation_mmaster = root
					NOT = { is_scheming_against = { target = scope:enemy } }
					is_imprisoned = no
				}
			}
			random_living_character = {
				limit = {
					has_relation_mmaster = root
					NOT = { is_scheming_against = { target = scope:enemy } }
					is_imprisoned = no
				}
				save_scope_as = minion
			}
		}
	}

	option = {
		#bad rumors
		trigger = {
			scope:enemy = {
				NOT = { has_character_modifier = harmful_rumors_modifier }
			}
		}
		name = ev2.5.a
		scope:enemy = {
			add_character_modifier = {
				modifier = harmful_rumors_modifier
				years = 5
			}
		}
		clear_saved_scope = this0
		ai_chance = {
			base = 20
		}
	}
	option = {
		#preparation
		trigger = {
			NOT = { has_character_modifier = preparation_for_strike_modifier }
		}
		name = ev2.5.b
		add_character_modifier = {
			modifier = preparation_for_strike_modifier
			years = 5
		}
		clear_saved_scope = this0
		ai_chance = {
			base = 10
		}
	}
	option = {
		#minion
		trigger = {
			any_living_character = {
				has_relation_mmaster = root
				in_diplomatic_range = scope:enemy
				NOT = { is_scheming_against = { target = scope:enemy } }
			}
		}
		name = ev2.5.c
		hidden_effect = {
			scope:minion = {
				trigger_event = magic_ev2.9
			}
		}

		custom_tooltip = minion_starts_scheme_ct

		clear_saved_scope = this0
		ai_chance = {
			base = 30
		}
	}
	option = {
		#duel
		name = ev2.5.d
		trait = vengeful
		trigger = {
			has_trait = vengeful
			NOR = {
				has_trait = brave
				has_trait = wrathful
			}
		}
		custom_tooltip = strike_duel_mages_ct
		scope:enemy = {
			trigger_event = magic_ev2.6
		}
		ai_chance = {
			base = 5
			modifier = {
				add = 3
				prowess > 20
			}
			modifier = {
				add = 6
				prowess > 25
			}
			modifier = {
				add = 9
				prowess > 30
			}
			modifier = {
				add = 12
				prowess > 35
			}
		}
	}
	option = {
		#duel
		name = ev2.5.d
		trait = brave
		trigger = {
			has_trait = brave
			NOR = {
				has_trait = vengeful
				has_trait = wrathful
			}
		}
		custom_tooltip = strike_duel_mages_ct
		scope:enemy = {
			trigger_event = magic_ev2.6
		}
		ai_chance = {
			base = 5
			modifier = {
				add = 5
				prowess > 20
			}
			modifier = {
				add = 10
				prowess > 25
			}
			modifier = {
				add = 10
				prowess > 30
			}
			modifier = {
				add = 15
				prowess > 35
			}
		}
	}
	option = {
		#duel
		name = ev2.5.d
		trait = wrathful
		trigger = {
			has_trait = wrathful
		}
		custom_tooltip = strike_duel_mages_ct
		scope:enemy = {
			trigger_event = magic_ev2.6
		}
		ai_chance = {
			base = 5
			modifier = {
				add = 5
				prowess > 20
			}
			modifier = {
				add = 10
				prowess > 25
			}
			modifier = {
				add = 10
				prowess > 30
			}
			modifier = {
				add = 15
				prowess > 35
			}
		}
	}
	option = {
		#curse his lands
		name = ev2.5.f
		trigger = {
			can_spend_standard_ps_trigger = yes
			has_trait = archmage
			scope:enemy.capital_county = {
				NOT = { has_county_modifier = cursed_land_modifier }
			}
		}
		trait = archmage
		scope:enemy = {
			capital_county = {
				add_county_modifier = {
					modifier = cursed_land_modifier
					years = 5
				}
			}
		}
		spend_standard_ps_effect = yes
		clear_saved_scope = this0
		ai_chance = {
			base = 20
		}
	}
	option = {
		#nothing
		name = ev2.5.e
		clear_saved_scope = this0
		ai_chance = {
			base = 5
		}
	}
	after = {
		add_character_flag = {
			flag = strikes_in_rival
			years = 3
		}
	}
}

#duel
magic_ev2.6 = {
	title = ev2.6.title
	type = character_event
	desc = ev2.6.desc
	theme =  realm
	left_portrait = root
	right_portrait = scope:this0


	option = {
		name = ev2.6.b
		custom_tooltip = start_duel_ct
		save_scope_as = actor
		configure_start_single_combat_effect = {
			SC_INITIATOR = root
			SC_ATTACKER = root
			SC_DEFENDER = scope:this0
			FATALITY = always
			FIXED = no
			LOCALE = throne_room
			OUTPUT_EVENT = fp1_tbc.0011
			INVALIDATION_EVENT = fp1_tbc.0021
		}
	}
	option = {
		name = ev2.6.c
		trigger = {
			can_spend_standard_ps_trigger = yes
			has_trait = archmage
		}
		trait = archmage
		custom_tooltip = start_duel_ct
		configure_start_mage_duel_effect = {
			MD_ATTACKER = root
			MD_DEFENDER = scope:this0
		}
	}
}

#magical experimentation
magic_ev2.7 = {
	title = ev2.7.title
	type = character_event
	desc = ev2.7.desc
	theme =  witchcraft
	left_portrait = root
	trigger = {
		OR = {
			has_focus = witch_focus
			has_trait = true_witch
		}
		has_trait=lifestyle_mystic
		NOR = {
			has_perk = magical_experiments_p1_perk
			has_trait = source
			has_trait = source2
			has_trait = source3
			house = {
				has_variable = mexperiments
			}
			any_character_artifact = { has_variable = magic1 }
		}	
		any_ruler = {
			OR = {
				has_trait = archmage
				has_focus = arcane_focus
			}
			count < 8
		}
	}
	option = {
		name = ev2.7.a
		add_perk = magical_experiments_p1_perk
		custom_tooltip = ev2.7.a_ct
		show_as_tooltip = {
			gain_standard_ps_effect = yes
			random_list = {
				80 = {
					add_learning_skill = 1
				}
				5 = {
					trigger = {
						NOT = {
							has_trait = disfigured
						}
					}
					add_trait = disfigured
				}
				5 = {
					trigger = {
						NOR = {
							has_trait = wounded_1
							has_trait = wounded_2
							has_trait = wounded_3
						}
					}
					add_trait = wounded_1
				}
				5 = {
					trigger = {
						NOT = {
							has_trait = one_eyed
						}
					}
					add_trait = one_eyed
				}
				5 = {
					trigger = {
						NOT = {
							has_trait = one_legged
						}
					}
					add_trait = one_legged
				}
			}
		}
		
		if = {
			limit = {
				is_ai = yes
			}
			set_focus = arcane_focus
		}
		house = {
			set_variable = {
				name = mexperiments
				years = 80
			}
		}
	}
	option = {
		name = ev2.7.b
		
	}
}

#gains mind reading
magic_ev2.8 = {
	title = ev2.8.title
	type = character_event
	desc = ev2.8.desc
	theme =  witchcraft
	left_portrait = root
	trigger = {
		has_trait = true_witch
		has_trait = archmage
		NOT = { has_character_modifier = mind_reader_modifier }
		is_landed = yes
	}
	option = {
		name = ev2.8.a
		add_character_modifier = {
			modifier = mind_reader_modifier
		}
	}
}

#minion's scheme
magic_ev2.9 = {
	title = ev2.9.title
	type = character_event
	desc = ev2.9.desc
	theme =  witchcraft
	left_portrait = root
	right_portrait = scope:this0

	option = {
		name = ev2.9.a
		add_character_modifier = {
			modifier = masters_orders_modifier
			years = 5
		}
		start_scheme = {
			type = murder
			target = scope:enemy
		}
	}
}

#witch stealing artifact
magic_ev2.10 = {
	title = ev2.10.title
	type = character_event
	desc = ev2.10.desc
	theme =  witchcraft
	left_portrait = root
	right_portrait = scope:target
	trigger = {
		is_alive = yes
		is_imprisoned = no
		NOT = {
			any_scheme = {
				scheme_type = steal_back_artifact
			}
		}
		NOT = {
			any_character_artifact = { has_variable = magic1 }
		}
	}

	immediate = {
		random_living_character = {
			limit = {
				any_character_artifact = { has_variable = magic1 }
				NOT = { root = this }
			}
			save_scope_as = target
		}
		scope:target = {
			random_character_artifact = {
				limit = {
					has_variable = magic1
				}
				save_scope_as = artif
			}
		}
		add_intrigue_skill = 3
	}

	option = {
		name = ev2.10.a
		if = {
			limit = {
				NOT = {
					has_personal_artifact_claim = scope:artif
				}
			}
			add_personal_artifact_claim = scope:artif
		}
		
		if = {
			limit = {
				is_ai = yes
			}
			random = {
				chance = 50
				add_character_modifier = {
					modifier = preparation_for_stealing_modifier
					years = 4
				}
			}
			if = {
				limit = {
					NOT = {
						has_perk = a_job_done_right_perk
					}
				}
				random = {
					chance = 40
					add_perk = a_job_done_right_perk
				}
			}
		}
		else = {
			hidden_effect = {
				set_relation_rival = scope:target
				#set_random_rivalry_reason = { TARGET = scope:target }
			}
		}

		if = {
			limit = {
				in_diplomatic_range = scope:target
			}
			start_scheme = {
				type = steal_back_artifact
				target = scope:target
				artifact = scope:artif
			}
		}
		

		
		
		ai_chance = {
			base = 50
			modifier = {
				add = -35
				scope:target = {
					dread > 60
				}
			}
			modifier = {
				add = -15
				scope:target = {
					dread > 90
				}
			}
			modifier = {
				add = 30
				scope:target = {
					OR = {
						has_relation_rival = root
						has_relation_nemesis = root
					}
				}
			}
		}
	}
	option = {
		name = ev2.10.b
		add_stress = medium_stress_loss
		ai_chance = {
			base = 20
			#modifier = {
			#	add = 5
			#	scope:target = {
			#		dread > 25
			#	}
			#}
			#modifier = {
			#	add = 5
			#	scope:target = {
			#		dread > 50
			#	}
			#}
		}
	}
}

#pay by your soul
magic_ev2.11 = {
	title = ev2.11.title
	type = character_event
	desc = ev2.11.desc
	theme =  witchcraft
	left_portrait = root
	right_portrait = scope:demon

	trigger = {
		is_alive = yes
	}

	immediate = {
		hidden_effect = {
			create_character = {
				employer = scope:this0
				gender = male
				template = generic_demon_character
				save_scope_as = demon
			}
			scope:demon = {
				set_sexuality = bisexual
				#add_secret = {
				#	type = secret_witch
				#	target = scope:demon
				#}
				give_witch_secret_or_trait_effect = yes
			}
		}
	}

	option = {
		name = ev2.11.a
		death = natural
		hidden_effect = {
			scope:demon = {
				death = natural
			}
		}
		clear_saved_scope = demon
	}
	option = {
		name = ev2.11.b
		trigger = {
			NOT = {
				has_character_modifier = fucked_by_demon_modifier
			}
		}
		trigger_event = magic_ev2.12
	}
	option = {
		#name = ev2.11.c
		name = ev2.11.e
		custom_tooltip = start_duel_ct
		save_scope_as = actor
		configure_start_single_combat_effect = {
			SC_INITIATOR = root
			SC_ATTACKER = root
			SC_DEFENDER = scope:demon
			FATALITY = always
			FIXED = no
			LOCALE = throne_room
			OUTPUT_EVENT = fp1_tbc.0011
			INVALIDATION_EVENT = fp1_tbc.0021
		}
		scope:demon = {
			trigger_event = {
				id = magic_ev2.13
				days = 30
			}
		}
	}
	option = {
		#name = ev2.11.c
		name = ev2.11.f
		trigger = {
			has_trait = archmage
			can_spend_standard_ps_trigger = yes
		}
		trait = archmage
		custom_tooltip = mage_duel_duel_ct
		configure_start_mage_duel_effect = {
			MD_ATTACKER = root
			MD_DEFENDER = scope:demon
		}
		scope:demon = {
			trigger_event = {
				id = magic_ev2.13
				days = 30
			}
		}
	}
	option = {
		name = ev2.11.d
		trigger = {
			has_trait = archmage
			any_character_artifact = { has_variable = blackgrimoire }
			scope:demon = {
				has_full_magic_prot_trigger = no
			}
		}
		trait = archmage
		custom_tooltip = banish_demon_ct
		hidden_effect = {
			scope:demon = {
				death = natural
			}
		}
		clear_saved_scope = demon
	}
}

#there is other way...
magic_ev2.12 = {
	title = ev2.11.title
	type = character_event
	desc = ev2.12.desc
	theme =  witchcraft
	left_portrait = root
	right_portrait = scope:demon

	option = {
		name = ev2.12.a
		death = natural
		hidden_effect = {
			scope:demon = {
				death = natural
			}
		}
		clear_saved_scope = demon
	}
	option = {
		name = ev2.12.b
		had_sex_with_effect = {
			CHARACTER = scope:demon
			PREGNANCY_CHANCE = seduce_pregnancy_chance
		}
		add_character_modifier = fucked_by_demon_modifier
		random_list = {
			10 = {
				trigger = {
					NOT = { has_trait = lunatic_1 }
				}
				add_trait = lunatic_1
			}
			10 = {
				trigger = {
					NOR = {
						has_trait = wounded_1
						has_trait = wounded_2
						has_trait = wounded_3
					}
				}
				add_trait = wounded_2
			}
			10 = {
				trigger = {
					NOT = { has_trait = depressed_1 }
				}
				add_trait = depressed_1
			}
			10 = {
				trigger = {
					NOT = { has_trait = possessed_1 }
				}
				add_trait = possessed_1
			}
		}
		
		trigger_event = {
			id = magic_ev2.11
			years = { 8 10 }
		}
		hidden_effect = {
			scope:demon = {
				death = natural
			}
		}
		clear_saved_scope = demon
	}
	option = {
		#name = ev2.11.c
		name = ev2.11.e
		custom_tooltip = start_duel_ct
		save_scope_as = actor
		configure_start_single_combat_effect = {
			SC_INITIATOR = root
			SC_ATTACKER = root
			SC_DEFENDER = scope:demon
			FATALITY = always
			FIXED = no
			LOCALE = throne_room
			OUTPUT_EVENT = fp1_tbc.0011
			INVALIDATION_EVENT = fp1_tbc.0021
		}
		scope:demon = {
			trigger_event = {
				id = magic_ev2.13
				days = 30
			}
		}
	}
	option = {
		#name = ev2.11.c
		name = ev2.11.f
		trigger = {
			has_trait = archmage
			can_spend_standard_ps_trigger = yes
		}
		trait = archmage
		custom_tooltip = mage_duel_duel_ct
		configure_start_mage_duel_effect = {
			MD_ATTACKER = root
			MD_DEFENDER = scope:demon
		}
		scope:demon = {
			trigger_event = {
				id = magic_ev2.13
				days = 30
			}
		}
	}
	option = {
		name = ev2.11.d
		trigger = {
			has_trait = archmage
			any_character_artifact = { has_variable = blackgrimoire }
			scope:demon = {
				has_full_magic_prot_trigger = no
			}
		}
		trait = archmage
		custom_tooltip = banish_demon_ct
		hidden_effect = {
			scope:demon = {
				death = natural
			}
		}
		clear_saved_scope = demon
		
	}
}

#death demon after take soul
magic_ev2.13 = {
	title = ev2.13.title
	type = character_event
	desc = ev2.13.desc
	theme =  witchcraft
	left_portrait = scope:demon
	trigger = {
		is_alive = yes
	}

	option = {
		name = ev2.13.a
		death = natural
		clear_saved_scope = demon
	}
}

#rival 4 demon
magic_ev2.14 = {
	title = ev2.14.title
	type = character_event
	desc = ev2.14.desc
	theme =  witchcraft
	left_portrait = root
	trigger = {
		is_alive = yes
		NOT = {	has_character_flag = special_magic_character	}
		NOT = {	has_trait = incapable	}
	}
	immediate = {
		save_scope_as = this0
		random_ruler = {
			limit = {
				NOT = {	has_character_flag = special_magic_character	}
				NOT = { has_trait = demon }
				OR = {
					has_trait = archmage
					has_focus = arcane_focus
					AND = {
						has_trait = witch_hunter
						is_ai = no
					}
				}
				NOR = {
					has_relation_best_friend = root
					has_relation_friend = root
					has_relation_lover = root
					has_relation_soulmate = root
					has_relation_mminion = root
					has_relation_mmaster = root
				}
				is_landed = yes
			}
			save_scope_as = rruler
		}
		scope:rruler = {
			random_held_title = {
				limit = {
					tier = tier_county
				}
				save_scope_as = tcounty
			}
		}
	}
	option = {
		name = ev2.14.a
		set_relation_rival = scope:rruler
		#set_random_rivalry_reason = { TARGET = scope:rruler }
		if = {
			limit = {
				is_claimant = no
			}
			add_pressed_claim = scope:tcounty
		}
		scope:rruler = {
			trigger_event = magic_ev2.4
		}
	}
	after = {
		clear_saved_scope = tcounty
	}
}

#witch hunter management
magic_ev2.15 = {
	hidden = yes
	#type = empty
	scope = none
	trigger = {
		#has_game_rule = normal_whunters
		NOT = {
			has_game_rule = low_whunters
		}
		any_living_character = {
			OR = {
				#has_focus = witch_focus
				has_focus = arcane_focus
				has_trait = true_witch
				has_trait = archmage
			}
			is_ai = no
		}
	}
	immediate = {
		random = {
			chance = 10
			modifier = {
				add = 20
				any_living_character = {
					has_focus = arcane_focus
					is_ai = no
				}
			}
			modifier = {
				add = 90
				any_living_character = {
					has_trait = archmage
					is_ai = no
				}
			}
			random_list = {
				500 = {
					#new main witch hunter
					trigger = {
						NOT = {
							any_living_character = {
								has_character_modifier = inq_modifier
							}
						}
					}
					random_ruler = {
						limit = {
							is_ai = no
						}
						save_scope_as = hplayer0
					}
					random_ruler = {
						limit = {
							is_alive = yes
							is_imprisoned = no
							is_adult = yes
							is_landed = yes
							trait_is_criminal_in_faith_trigger = { TRAIT = witch FAITH = this.faith GENDER_CHARACTER = this }
							#primary_title = { is_mercenary_company = no }
							highest_held_title_tier > tier_county
							in_diplomatic_range = scope:hplayer0
							#capital_province = {
							#	OR = {
							#		geographical_region = world_asia_minor
							#		geographical_region = world_europe
							#	}	
							#}
							#has_council_position = councillor_court_chaplain
							#liege = {
							#	is_independent_ruler = yes
							#}
							#OR = {
							#	is_independent_ruler = yes
							#	liege = {
							#		is_independent_ruler = yes
							#	}
							#}
							has_trait = zealous
							NOR = {
								has_trait = witch
								has_trait = true_witch
								has_trait = archmage
								has_focus = witch_focus
								has_focus = arcane_focus
							}
						}
						trigger_event = {
							id = magic_ev2.16
							days = { 1 360 }
						}
					}
				}
				500 = {
					#remove main witch hunter
					trigger = {
						any_living_character = {
							has_character_modifier = inq_modifier
							is_landed = no
						}
					}
					random_living_character = {
						limit = {
							has_character_modifier = inq_modifier
						}
						remove_character_modifier = inq_modifier
					}
				}
				100 = {
					#main witch hunter strikes
					trigger = {
						any_living_character = {
							has_character_modifier = inq_modifier
							is_imprisoned = no
							is_landed = yes
							#NOT = {
							#	any_scheme = {
							#		scheme_type = murder
							#	}
							#}
							#NOT = {
							#	any_scheme = {
							#		scheme_type = abduct
							#	}
							#}	
						}
						any_living_character = {
							NOT = {	has_character_flag = special_magic_character	}
							OR = {
								has_focus = arcane_focus
								has_trait = true_witch
								has_trait = archmage
							}
							is_imprisoned = no
							is_ai = no
							NOT = { has_character_flag = clean4charges }
							NOT = { has_character_flag = hunted4magic }
						}
					}
					random_ruler = {
						limit = {
							NOT = {	has_character_flag = special_magic_character	}
							is_alive = yes
							has_character_modifier = inq_modifier
							#is_imprisoned = no
							#NOT = {
							#	any_scheme = {
							#		scheme_type = murder
							#	}
							#}
							#NOT = {
							#	any_scheme = {
							#		scheme_type = abduct
							#	}
							#}
							#is_landed = yes
						}
						trigger_event = {
							id = magic_ev2.17
							days = { 1 360 }
						}
					}
				}
				20 = {
					#remove hunted
					trigger = {
						any_living_character = {
							has_character_flag = hunted4magic
						}
					}
					random_living_character = {
						limit = {
							has_character_flag = hunted4magic
						}
						remove_character_flag = hunted4magic
					}
					
				}
				#100 = {
				#	#new perk4ai
				#	
				#	random_living_character = {
				#		limit = {
				#			is_ai = yes
				#			OR = {
				#				has_focus = witch_focus
				#				has_focus = arcane_focus
				#			}
				#		}
				#		trigger_event = {
				#			id = magic_ev2.21
				#			days = { 1 360 }
				#		}
				#	}
				#	
				#}
				100 = {

				}
			}
		}
	}
}


#main witch hunter
magic_ev2.16 = {
	title = ev2.16.title
	type = character_event
	desc = ev2.16.desc
	theme =  witchcraft
	left_portrait = root
	trigger = {
		is_alive = yes
		is_imprisoned = no
		is_incapable = no
	}
	immediate = {
		add_trait = witch_hunter
		add_perk = protective_runes_perk
		add_perk = magical_senses_perk
		
		random_list = {
			30 = {
				add_trait_xp = {
					trait = supernatural_hunter
					track = witch_hunting
					value = 90
				}
			}
			70 = {
				add_trait_xp = {
					trait = supernatural_hunter
					track = witch_hunting
					value = 100
				}
			}
		}
		if = {
			limit = {
				NOT = {
					has_perk = a_job_done_right_perk
				}
			}
			random = {
				chance = 50
				add_perk = a_job_done_right_perk
			}
		}
		
		add_character_modifier = inq_modifier
		hidden_effect = {
			random_list = {
				10 = { add_intrigue_skill = 1 }
				10 = { add_intrigue_skill = 2 }
				10 = { add_intrigue_skill = 4 }
				8 = { add_intrigue_skill = 6 }
				6 = { add_intrigue_skill = 8 }
				4 = { add_intrigue_skill = 10 }
			}
			add_prowess_skill = 6
		}
	}
	option = {
		name = ev2.16.a
		
	}
}

#main witch hunter strikes
magic_ev2.17 = {
	title = ev2.17.title
	type = character_event
	desc = ev2.17.desc
	theme =  witchcraft
	left_portrait = root
	right_portrait = scope:witch
	trigger = {
		is_alive = yes
		is_imprisoned = no
		is_incapable = no
		NOR = {
			any_relation = {
				type = mminion
			}
			any_relation = {
				type = mmaster
			}
		}
	}
	immediate = {
		random_living_character = {
			limit = {
				NOT = {	has_character_flag = special_magic_character	}
				OR = {
					has_focus = arcane_focus
					has_trait = true_witch
					has_trait = archmage
				}
				is_ai = no
				is_imprisoned = no
				NOT = { has_character_flag = clean4charges }
				NOT = { has_character_flag = hunted4magic }
				NOT = {	has_strong_hook = root	}
				NOR = {
					has_relation_mminion = root
					has_relation_mmaster = root
				}
			}
			save_scope_as = witch
		}
		if = {
			limit = {
				NOT = { exists = scope:witch }
			}
			random_living_character = {
				limit = {
					NOT = {	has_character_flag = special_magic_character	}
					OR = {
						has_focus = arcane_focus
						has_trait = true_witch
						has_trait = archmage
					}
					#is_ai = no
					is_imprisoned = no
					NOT = { has_character_flag = clean4charges }
					NOT = { has_character_flag = hunted4magic }
					NOT = {	has_strong_hook = root	}
					NOR = {
						has_relation_mminion = root
						has_relation_mmaster = root
					}
				}
				save_scope_as = witch
			}
		}
	}
	option = {
		name = ev2.17.a
		trigger = {
			in_diplomatic_range = scope:witch
		}
		start_scheme = {
			type = abduct
			target = scope:witch
		}
		random = {
			chance = 50
			scope:witch = {
				if = {
					limit = {
						trait_is_criminal_in_faith_trigger = { TRAIT = witch FAITH = this.faith GENDER_CHARACTER = this }
						NOT = {
							has_character_modifier = tracked_by_witch_hunter_modifier
						}
					}
					add_character_modifier = {
						modifier = tracked_by_witch_hunter_modifier
						years = 2
					}
				}
			}
		}
		ai_chance = {
			base = 200
			modifier = {
				add = -200
				any_scheme = {
					scheme_type = abduct
				}
			}
		}
	}
	option = {
		name = stop_the_witch
		trigger = {
			in_diplomatic_range = scope:witch
		}
		save_scope_as = actor
		scope:witch = {
			save_scope_as = recipient
		}
		trigger_event = magic_ev4.10
		ai_chance = {
			base = 150
			modifier = {
				add = -150
				any_scheme = {
					scheme_type = abduct
				}
			}
		}
	}
	option = {
		name = ev2.17.c
		custom_tooltip = ev2.17.c_ct
		scope:witch = {
			random_vassal = {
				save_scope_as = rvas
			}
			add_character_flag = hunted4magic
			if = {
				limit = {
					trait_is_criminal_in_faith_trigger = { TRAIT = witch FAITH = this.faith GENDER_CHARACTER = this }
					NOT = {
						has_character_modifier = tracked_by_witch_hunter_modifier
					}
				}
				add_character_modifier = {
					modifier = tracked_by_witch_hunter_modifier
					years = 2
				}
			}
		}
		hidden_effect = {
			create_character = {
				employer = scope:rvas
				template = witch_hunter_character
				save_scope_as = whunter
			}
			scope:whunter = {
				add_perk = protective_runes_perk
				add_perk = magical_senses_perk
				#add_character_flag = whunter
				random_list = {
					10 = { add_character_modifier = witchhunter_weapons_modifier }
					10 = { add_intrigue_skill = 2 }
					10 = {  }
				}
				start_scheme = {
					type = murder
					target = scope:witch
				}
			}
			add_hook = {
				type = loyalty_hook
				target = scope:whunter
			}
		}
		ai_chance = {
			base = 60
		}
	}
	option = {
		name = ev2.17.b
		if = {
			limit = {
				NOT = {
					has_character_modifier = preparation_for_strike_modifier
				}
			}
			add_character_modifier = {
				modifier = preparation_for_strike_modifier
				years = 5
			}
		}
		

		ai_chance = {
			base = 40
			modifier = {
				add = 20
				any_scheme = {
					scheme_type = abduct
					scheme_target = scope:witch
				}
			}
			modifier = {
				add = -30
				has_character_modifier = preparation_for_strike_modifier
			}
			modifier = {
				add = 200
				has_trait = craven
				scope:witch = {
					dread > 1
				}
			}
			modifier = {
				add = 300
				scope:witch = {
					dread > 80
				}
			}
			modifier = {
				add = 120
				has_trait = lazy
			}
		}
	}
	after = {
		clear_saved_scope = witch
	}
}

#witch trial 1
magic_ev2.18 = {
	title = ev2.18.title
	type = character_event
	
	desc = {
		first_valid = {
			triggered_desc = {
				trigger = {
					NOT = { has_character_modifier = recently_tortured }
				}
				desc = ev2.18.desc
			}
			desc = ev2.18b.desc
		}
		
	}
	theme = prison
	left_portrait = scope:prisoner
	right_portrait = scope:imprisoner
	trigger = {
		OR = {
			has_trait = true_witch
			has_trait = witch
			has_trait = archmage
			has_focus = witch_focus
			has_focus = arcane_focus
		}
		scope:imprisoner = {
			has_trait = witch_hunter
			is_ai = yes
		}
		is_imprisoned = yes
		is_alive = yes
	}
	immediate = {
		save_scope_as = prisoner
		hidden_effect = {
			if = {
				limit = {
					NOR = {
						has_relation_rival = scope:imprisoner
						has_relation_nemesis = scope:imprisoner
					}
				}
				set_relation_rival = scope:imprisoner
			}
			
			#set_random_rivalry_reason = { TARGET = scope:imprisoner }
			house = {
				save_scope_as = hhouse
			}
			every_character_artifact = {
				limit = {
					has_variable = magic1
				}
				#save_scope_as = stealed_arts
				set_owner = {
					target = scope:imprisoner
					history = {
						type = stolen
						actor = root
						recipient = scope:imprisoner
						location = root.location
					}
				}
				scope:hhouse = {
					add_house_artifact_claim = PREV
				}
			}
			#add_personal_artifact_claim = scope:stealed_arts
			#house = {
			#	add_house_artifact_claim = scope:stealed_arts
			#}

			#add_personal_artifact_claim = scope:stealed_arts
		}
		
	}
	option = {
		name = ev2.18.d
		trigger = {
			diplomacy > 24
		}
		skill = diplomacy
		add_character_flag = diplomatic_response
		scope:imprisoner = {
			trigger_event = magic_ev2.19
		}
		custom_tooltip = ev2.18.d_ct
		ai_chance = {
			base = 1000
		}
	}
	option = {
		name = ev2.18.a
		scope:imprisoner = {
			trigger_event = magic_ev2.19
		}
		custom_tooltip = ev2.18.a_ct
		ai_chance = {
			base = 100
		}
	}
	option = {
		name = ev2.18.b
		trigger = {
			NOT = { has_trait = wrathful }
		}
		custom_tooltip = ev2.18.b_ct
		scope:imprisoner = {
			trigger_event = magic_ev2.20
		}
		ai_chance = {
			base = 1
		}
	}
	option = {
		name = ev2.18.c
		trigger = {
			has_trait = wrathful
		}
		trait = wrathful
		custom_tooltip = ev2.18.b_ct
		scope:imprisoner = {
			trigger_event = magic_ev2.20
		}
		ai_chance = {
			base = 1
		}
	}
}

#witch trial tortures?
magic_ev2.19 = {
	title = ev2.18.title
	type = character_event
	desc = ev2.19.desc
	theme = prison
	left_portrait = scope:prisoner
	right_portrait = scope:imprisoner
	
	option = {
		name = ev2.19.a
		scope:prisoner = {
			add_character_modifier = {
				modifier = recently_tortured
				days = 50
			}
			
			random_list = {
				25 = {
					trigger = {
						NOR = {
							has_trait = wounded_1
							has_trait = wounded_2
							has_trait = wounded_3
						}
					}
					send_interface_toast = {
						title = you_were_torture
						add_trait = wounded_1
						add_stress = medium_stress_gain
					}
					
				}
				20 = {
					trigger = {
						NOR = {
							has_trait = wounded_2
							has_trait = wounded_3
						}
						has_trait = wounded_1
					}
					hidden_effect = {
						remove_trait = wounded_1
					}
					
					send_interface_toast = {
						title = you_were_torture
						add_trait = wounded_2
						add_stress = medium_stress_gain
					}
					
				}
				15 = {
					trigger = {
						NOR = {
							has_trait = wounded_3
							has_trait = wounded_1
						}
						has_trait = wounded_2
					}
					hidden_effect = {
						remove_trait = wounded_2
					}
					
					send_interface_toast = {
						title = you_were_torture
						add_trait = wounded_3
						add_stress = major_stress_gain
					}
					
				}
				10 = {
					trigger = {
						NOT = { has_trait = maimed }
					}
					send_interface_toast = {
						title = you_were_torture
						add_trait = maimed
						add_stress = medium_stress_gain
					}
				}
				5 = {
					trigger = {
						NOT = { has_trait = lunatic_1 }
					}
					send_interface_toast = {
						title = you_were_torture
						add_trait = lunatic_1
						add_stress = major_stress_gain
					}
				}
				10 = {
					trigger = {
						NOT = { has_trait = one_eyed }
					}
					send_interface_toast = {
						title = you_were_torture
						add_trait = one_eyed
						add_stress = major_stress_gain
					}
				}
				10 = {
					trigger = {
						NOT = { has_trait = one_legged }
					}
					send_interface_toast = {
						title = you_were_torture
						add_trait = one_legged
						add_stress = major_stress_gain
					}
				}
				5 = {
					trigger = {
						NOT = { has_trait = disfigured }
					}
					send_interface_toast = {
						title = you_were_torture
						add_trait = disfigured
						add_stress = major_stress_gain
					}
				}
				5 = {
					trigger = {
						is_male = yes
						NOT = { has_trait = eunuch }
					}
					send_interface_toast = {
						title = you_were_torture
						add_trait = eunuch
						add_stress = medium_stress_gain
					}
				}
				4 = {
					trigger = {
						NOT = { has_trait = infirm }
					}
					send_interface_toast = {
						title = you_were_torture
						add_trait = infirm
						add_stress = medium_stress_gain
					}
				}
				4 = {
					trigger = {
						NOT = { has_trait = incapable }
						has_trait = infirm
						
					}
					hidden_effect = {
						remove_trait = infirm
					}
					send_interface_toast = {
						title = you_were_torture
						add_trait_force_tooltip = incapable
						add_stress = major_stress_gain
					}
				}
				1 = {
					send_interface_toast = {
						title = you_were_torture
						add_stress = major_stress_gain
					}
				}
			}
			trigger_event = {
				id = magic_ev2.18
				days = { 25 35 }
			}
		}
		ai_chance = {
			base = 100
			modifier = {
				add = 10
				has_trait = patient
			}
			modifier = {
				add = 20
				has_trait = wrathful
			}
			modifier = {
				add = 30
				has_trait = sadistic
			}
			modifier = {
				add = 20
				has_trait = torturer
			}
		}
	}
	option = {
		name = ev2.19.b
		scope:prisoner = {
			send_interface_toast = {
				title = released_prison_toast
				release_from_prison = yes
			}
			add_character_flag = clean4charges
		}
		
		scope:prisoner = {
			remove_relation_rival = root
		}
		ai_chance = {
			base = 1
			modifier = {
				add = 19
				has_trait = compassionate
			}
			modifier = {
				add = 20
				has_trait = forgiving
			}
			modifier = {
				add = -3
				scope:prisoner = {
					has_character_flag = no_soul
				}
			}
			modifier = {
				add = -5
				has_character_flag = sing_end
			}
			modifier = {
				add = -3
				scope:prisoner = {
					has_trait = source
				}
			}
			modifier = {
				add = -3
				scope:prisoner = {
					has_trait = archmage
				}
			}
			modifier = {
				add = -20
				scope:prisoner = {
					has_trait = necromancer
				}
			}
			modifier = {
				add = 5
				scope:prisoner = {
					has_character_modifier = recently_tortured
				}
			}
			modifier = {
				add = 5
				scope:prisoner = {
					has_trait = wounded_2
				}
			}
			modifier = {
				add = 10
				scope:prisoner = {
					has_trait = wounded_3
				}
			}
			modifier = {
				add = 10
				scope:prisoner = {
					has_trait = one_legged
				}
			}
			modifier = {
				add = 10
				scope:prisoner = {
					has_trait = one_eyed
				}
			}
			modifier = {
				add = 10
				scope:prisoner = {
					has_trait = disfigured
				}
			}
			modifier = {
				add = 15
				scope:prisoner = {
					has_trait = maimed
				}
			}
			modifier = {
				add = 40
				scope:prisoner = {
					has_trait = incapable
				}
			}
			modifier = {
				add = 5
				scope:prisoner = {
					has_trait = lunatic_1
				}
			}
			modifier = {
				add = 25
				scope:prisoner = {
					OR = {
						has_trait = infirm
						has_trait = maimed
						has_trait = incapable
					}
					
				}
			}
			modifier = {
				add = 400
				scope:prisoner = {
					has_character_flag = diplomatic_response
				}
			}
		}
	}
}

#witch trial execution
magic_ev2.20 = {
	title = ev2.18.title
	type = character_event
	desc = ev2.20.desc
	theme = prison
	left_portrait = scope:prisoner
	right_portrait = scope:imprisoner
	
	option = {
		name = ev2.20.a
		scope:prisoner = {
			death = {
				killer = scope:imprisoner
				death_reason = death_burned_witch
			}
		}
		add_prestige = 500
		add_piety = 500
		ai_chance = {
			base = 100
			modifier = {
				add = 50
				has_trait = wrathful
			}
			modifier = {
				add = 50
				has_trait = zealous
			}
			modifier = {
				add = 50
				has_trait = sadistic
			}
		}
	}
	option = {
		name = ev2.20.b
		scope:prisoner = {
			if = {
				limit = {
					is_in_prison_type = house_arrest
				}
				change_prison_type = dungeon
			}
		}
		
		ai_chance = {
			base = 1
			modifier = {
				add = 49
				has_trait = compassionate
			}
			modifier = {
				add = 50
				has_trait = forgiving
			}
		}
	}
}

#witchhunter remover
magic_ev2.22 = {
	title = ev2.22.title
	type = character_event
	desc = ev2.22.desc
	theme = witchcraft
	left_portrait = root
	trigger = {
		is_alive = yes
	}
	option = {
		name = ev2.22.a
		death = natural
	}
}

#magic catayst sometimes gives witch secret (only 4 ai)
magic_ev2.23 = {
	title = ev2.23.title
	type = character_event
	desc = ev2.23.desc
	theme = witchcraft
	left_portrait = root
	trigger = {
		is_alive = yes
	}
	option = {
		name = ev2.23.a
		give_witch_secret_or_trait_effect = yes
		if = {
			limit = {
				is_ai = yes
			}
			set_focus = witch_focus
			hidden_effect = {
				add_magic_lifestyle_perk_points=5
			}
		}
		ai_chance = {
			base = 100
		}
	}

	option = {
		name = ev2.23.b
		ai_chance = {
			base = 1
			modifier = {
				add = 999
				has_trait = zealous
			}
		}
	}
	after = {
		add_character_flag = used_catalyst
	}
}

#knight challenging mage
magic_ev2.24 = {
	title = ev2.24.title
	type = character_event
	desc = ev2.24.desc
	theme = witchcraft
	left_portrait = root
	right_portrait = {
		character = scope:whunter
		outfit_tags = { military_outfit }
	}
	trigger = {
		any_living_character = {
			has_character_modifier = inq_modifier
			is_imprisoned = no
		}
		is_imprisoned = no
		is_landed = yes
		NOT = { has_character_flag = clean4charges }
	}
	immediate = {
		hidden_effect = {
			create_character = {
				employer = root
				gender = male
				template = witch_hunter_knight_character
				save_scope_as = whunter
			}
			scope:whunter = {
				add_perk = protective_runes_perk
				add_perk = magical_senses_perk
				add_trait_xp = {
					trait = supernatural_hunter
					track = witch_hunting
					value = 70
				}
			}
			random_living_character = {
				limit = {
					has_character_modifier = inq_modifier
				}
				save_scope_as = inqu
			}
			random_relation = {
				type = rival
				add_to_list = potential_targets2
			}
			random_relation = {
				type = nemesis
				add_to_list = potential_targets2
			}
			random_in_list = {
				list = potential_targets2
				save_scope_as = potential_target2
			}
		}
	}

	option = {
		name = ev2.24.a
		custom_tooltip = start_duel_ct
		save_scope_as = actor
		hidden_effect = {
			configure_start_single_combat_effect = {
				SC_INITIATOR = root
				SC_ATTACKER = root
				SC_DEFENDER = scope:whunter
				FATALITY = always
				FIXED = no
				LOCALE = market
				OUTPUT_EVENT = fp1_tbc.0011
				INVALIDATION_EVENT = fp1_tbc.0021
			}
		}
		scope:whunter = {
			trigger_event = {
				id = magic_ev2.22
				days = 30
			}
		}
	}

	option = {
		name = ev2.24.b
		custom_tooltip = imprison_and_trial_ct
		hidden_effect = {
			scope:inqu = {
				imprison = {
					target = root
					type = house_arrest
				}
			}
		}
		scope:whunter = {
			trigger_event = {
				id = magic_ev2.22
				days = 30
			}
		}
	}

	option = {
		trigger = {
			has_trait = archmage
			can_spend_standard_ps_trigger = yes
		}
		name = ev2.24.c
		trait = archmage
		spend_standard_ps_effect = yes
		scope:whunter = {
			death = {
				death_reason = death_burned
				killer = root
			}
		}
		if = {
			limit = {
				trait_is_criminal_in_faith_trigger = { TRAIT = witch FAITH = root.faith GENDER_CHARACTER = root }
			}
			custom_tooltip = use_magic_openly_ct
		}
		else = {
			add_prestige = medium_prestige_gain
		}
		hidden_effect = {
			if = {
				limit = {
					trait_is_criminal_in_faith_trigger = { TRAIT = witch FAITH = root.faith GENDER_CHARACTER = root }
				}
				every_ruler = {
					limit = {
						faith = root.faith
						NOR = {
							this = root
							has_trait = witch
							has_trait = cynical
							has_trait = true_witch
							has_trait = archmage
							has_trait = demon
							has_trait = forgiving
							any_secret = { secret_type = secret_witch }
						}
					}
					if = {
						limit = {
							NOR = {
								has_trait = zealous
								has_trait = theologian
							}
						}
						add_opinion = {
							modifier = use_magic_opinion
							target = root
							opinion = -30
						}
					}
					else = {
						add_opinion = {
							modifier = use_magic_opinion
							target = root
							opinion = -50
						}
					}
				}
				every_courtier_or_guest = {
					limit = {
						faith = root.faith
						NOR = {
							this = root
							has_trait = witch
							has_trait = cynical
							has_trait = true_witch
							has_trait = archmage
							has_trait = demon
							has_trait = forgiving
							any_secret = { secret_type = secret_witch }
						}
					}
					add_opinion = {
						modifier = use_magic_opinion
						target = root
						opinion = -30
					}
				}
			}
		}
	}

	option = {
		trigger = {
			intrigue > 24
			exists = scope:potential_target2
		}
		name = ev2.24.d
		skill = intrigue
		custom_tooltip = sent_wh_2_rival_ct
		scope:potential_target2 = {
			trigger_event = magic_ev2.24
		}
		hidden_effect = {
			scope:whunter = {
				death = natural
			}
		}	
	}

	option = {
		trigger = {
			has_trait = intellect_good_3
			intrigue < 25
			exists = scope:potential_target2
		}
		name = ev2.24.d
		trait = intellect_good_3
		custom_tooltip = sent_wh_2_rival_ct
		scope:potential_target2 = {
			trigger_event = magic_ev2.24
		}
		hidden_effect = {
			scope:whunter = {
				death = natural
			}
		}	
	}

	after = {
		#add_character_flag = challenging_by_knight
		clear_saved_scope = whunter
		clear_saved_scope = inqu
	}
}


#rumors about mage
magic_ev2.25 = {
	title = ev2.25.title
	type = character_event
	desc = ev2.25.desc
	theme = realm
	left_portrait = root
	right_portrait = scope:mmage
	trigger = {
		is_alive = yes
		any_ruler = {
			OR = {
				has_trait = archmage
				has_focus = arcane_focus
			}
			any_character_artifact = { has_variable = magic1 }
			is_ai = yes
		}
	}
	immediate = {
		random_ruler = {
			limit = {
				#is_landed = yes
				OR = {
					has_trait = archmage
					has_focus = arcane_focus
				}
				any_character_artifact = { has_variable = magic1 }
				is_ai = yes
			}
			save_scope_as = mmage
		}
	}
	option = {
		name = ev2.25.a
		trigger = {
			NOT = { has_trait = true_witch }
			NOT = { has_trait = witch }
		}
	}
	option = {
		name = ev2.25.b
		trigger = {
			has_trait = true_witch
		}
		trait = true_witch
	}
	option = {
		name = ev2.25.b
		trigger = {
			has_trait = witch
			NOT = { has_trait = true_witch }
		}
		trait = witch
	}
	after = {
		dynasty = {
			set_variable = {
				name = rumors_mages
				years = 60
			}
		}
		clear_saved_scope = mmage
	}
}

#child demon
magic_ev2.26 = {
	title = ev2.26.title
	type = character_event
	desc = ev2.26.desc
	theme = realm
	left_portrait = root
	right_portrait = scope:demon_child

	option = {
		name = ev2.26.a
		if = {
			limit = {
				is_male = yes
			}
			scope:demon_child = {
				set_father = root
				add_character_flag = isheir
			}
		}
		else = {
			scope:demon_child = {
				set_mother = root
				add_character_flag = isheir
			}
		}
		trigger_event = magic_ev2.27
	}
	option = {
		name = ev2.26.b
		custom_tooltip = ev2.26.b_ct
		trigger_event = magic_ev2.27
	}
	option = {
		name = ev2.26.c
		custom_tooltip = ev2.26.c_ct
		trigger_event = magic_ev2.18
		hidden_effect = {
			scope:demon_child = {
				death = natural
			}
		}
	}
}
#pick name and start the chain...
magic_ev2.27 = {
	title = ev2.27.title
	type = character_event
	desc = ev2.27.desc
	theme = realm
	left_portrait = root
	right_portrait = scope:demon_child

	widgets = {
		widget = {
			gui = "event_window_widget_name_child"
			container = "dynamic_birth_name"
			controller = name_character
			setup_scope = { scope:demon_child = { save_scope_as = name_character_target } }
		}
	}
	option = {
		name = ev2.27.a
		save_scope_as = mplayer
		scope:demon_child = {
			trigger_event = {
				id = magic_ev2.28
				months = 37
			}
			trigger_event = {
				id = magic_ev2.37
				years = 12
			}
			trigger_event = {
				id = magic_ev2.44
				years = 14
			}
			trigger_event = {
				id = magic_ev2.38
				years = 25
			}
		}
	}
}

magic_ev2.28 = { #Kills New Created Character Nanny
	title = ev2.28.title
	type = character_event
	desc = ev2.28.desc
	theme = mental_health
	left_portrait = root
	right_portrait = scope:nanny
	immediate = {
		save_scope_as = demon_child
		hidden_effect = {
			random_court_position_holder = {
				type = wet_nurse_court_position
				save_scope_as = nanny
			}
			if = {
				limit = {
					NOT = {
						exists = scope:nanny
					}
				}
				create_character = {
					gender = female
					employer = scope:this0
					age = 28
					save_scope_as = nanny
				}
			}
		}
	}

	option = {
		name = ev2.28.a
		add_trait = sadistic
		scope:nanny = {
			death = natural
		}
		liege = {
			trigger_event = magic_ev2.29
		}
		trigger_event = {
			id = magic_ev2.30
			years = 5
		}
	}
	after = {
		hidden_effect = {
			random_list = {
				10 = {
					trigger = { NOT = { has_trait = intellect_good_3 } }
					add_trait = intellect_good_3
				}
				10 = {
					trigger = { NOT = { has_trait = beauty_good_3 } }
					add_trait = beauty_good_3
				}
				10 = {
					trigger = { NOT = { has_trait = physique_good_3 } }
					add_trait = physique_good_3
				}
			}
		}
	}
}

magic_ev2.29 = {
	title = ev2.29.title
	type = character_event
	desc = ev2.29.desc
	theme = realm
	left_portrait = root
	right_portrait = scope:nanny
	lower_right_portrait = scope:demon_child
	trigger = {
		NOT = { root = scope:demon_child }
	}
	immediate = {
		show_as_tooltip = {
			scope:nanny = {
				death = natural
			}
		}
	}

	option = {
		name = ev2.29.a
	}
}

magic_ev2.30 = { #Demon Child Kills/Hurts Random Relation (Bully, Crush or Guardian) or Member of Roots Court Where Root is Summoner
	title = ev2.30.title
	type = character_event
	desc = ev2.30.desc
	theme = mental_health
	left_portrait = root
	right_portrait = scope:potential_vict
	trigger = {
		is_alive = yes
	}

	immediate = {
		save_scope_as = demon_child
		random_relation ={
			limit = { is_ai = yes NOT = { has_trait = demon } }
			type = guardian
			add_to_list = potential_victs
		}
		random_relation ={
			limit = { is_ai = yes NOT = { has_trait = demon } }
			type = bully
			add_to_list = potential_victs
		}
		random_relation ={
			limit = { is_ai = yes NOT = { has_trait = demon } }
			type = crush
			add_to_list = potential_victs
		}
		liege = {
			random_courtier = {
				limit = { is_ai = yes NOT = { has_trait = demon } NOT = { this = root } }
				add_to_list = potential_victs
			}
		}
		random_in_list = {
			list = potential_victs
			if = {
				limit = {
					exists = THIS
				}
				save_scope_as = potential_vict
			}
		}
		if = {
			limit = {
				NOT = {	exists = scope:potential_vict	}
			}
			create_character = {
				age = { 21 40 }
				gender = female
				location = root.location
				dynasty = none
				save_scope_as = potential_vict
			}
		}
	}

	option = {
		name = ev2.30.a
		add_trait = wrathful
		scope:potential_vict = {
			add_trait = wounded_3
		}
	}
	option = {
		name = ev2.30.b
		add_trait = cynical
		scope:potential_vict = {
			add_character_modifier = {
				modifier = cursed_modifier
				years = 10
			}
		}
	}
	option = {
		name = ev2.30.c
		add_trait = callous
		scope:potential_vict = {
			death = {
				death_reason = death_murder
				killer = root
			}
		}
		add_secret = {
			type = secret_murder
			target = scope:potential_vict
		}
	}
	after = {
		hidden_effect = {
			random_list = {
				10 = {
					trigger = { NOT = { has_trait = intellect_good_3 } }
					add_trait = intellect_good_3
				}
				10 = {
					trigger = { NOT = { has_trait = beauty_good_3 } }
					add_trait = beauty_good_3
				}
				10 = {
					trigger = { NOT = { has_trait = physique_good_3 } }
					add_trait = physique_good_3
				}
			}
			give_witch_secret_or_trait_effect = yes
		}
		trigger_event = {
			id = magic_ev2.31
			years = 1
		}
	}
}

magic_ev2.31 = { #Demon Child Randomly Kills Guardian or Court Member of Province Owner
	title = ev2.31.title
	type = character_event
	desc = ev2.31.desc
	theme = mental_health
	left_portrait = root
	right_portrait = scope:potential_vict
	trigger = {
		is_alive = yes
		is_imprisoned = no
	}
	immediate = {
		save_scope_as = demon_child
		add_trait = possessed_genetic
		random_relation ={
			limit = { is_ai = yes NOT = { has_trait = demon } }
			type = guardian
			add_to_list = potential_victs
		}
		location.province_owner = {
			random_courtier = {
				limit = { is_ai = yes NOT = { has_trait = demon } NOT = { this = root } }
				add_to_list = potential_victs
			}
		}
		random_in_list = {
			list = potential_victs
			if = {
				limit = {
					exists = THIS
				}
				save_scope_as = potential_vict
			}
		}
		if = {
			limit = {
				NOT = {	exists = scope:potential_vict	}
			}
			create_character = {
				age = { 21 40 }
				gender_female_chance = 50
				location = root.location
				dynasty = none
				save_scope_as = potential_vict
			}
		}
	}

	option = {
		name = ev2.31.a
		location.province_owner = {
			trigger_event = magic_ev2.32
		}
		
		scope:potential_vict = {
			death = {
				death_reason = death_murder
				killer = root
			}
		}
		add_secret = {
			type = secret_murder
			target = scope:potential_vict
		}
	}
	
	after = {
		trigger_event = {
			id = magic_ev2.33
			months = 3
		}
	}
}

magic_ev2.32 = {
	title = ev2.32.title
	type = character_event
	desc = ev2.32.desc
	theme = realm
	left_portrait = root
	right_portrait = scope:potential_vict
	trigger = {
		is_alive = yes
		is_imprisoned = no
		NOT = { root = scope:demon_child }
	}
	immediate = {
		show_as_tooltip = {
			scope:potential_vict = {
				death = natural
			}
		}
	}

	option = {
		name = ev2.32.a
	}
}

magic_ev2.33 = {
	title = ev2.31.title
	type = character_event
	desc = ev2.33.desc
	theme = mental_health
	left_portrait = root
	right_portrait = scope:potential_vict
	lower_right_portrait = scope:potential_vict2
	trigger = {
		is_alive = yes
	}
	immediate = {
		save_scope_as = demon_child
		random_relation ={
			limit = { is_ai = yes NOT = { has_trait = demon } }
			type = guardian
			add_to_list = potential_victs
		}
		location.province_owner = {
			random_courtier = {
				limit = { is_ai = yes NOT = { has_trait = demon } NOT = { this = root } }
				add_to_list = potential_victs
			}
		}
		random_in_list = {
			list = potential_victs
			if = {
				limit = {
					exists = THIS
				}
				save_scope_as = potential_vict
			}
		}
		if = {
			limit = {
				NOT = {	exists = scope:potential_vict	}
			}
			create_character = {
				age = { 21 40 }
				gender_female_chance = 50
				location = root.location
				dynasty = none
				save_scope_as = potential_vict
			}
		}
		random_relation ={
			limit = { is_ai = yes NOT = { has_trait = demon } }
			type = victim
			add_to_list = potential_victs2
		}
		location.province_owner = {
			random_courtier = {
				limit = { is_ai = yes NOT = { has_trait = demon } NOT = { this = root } }
				add_to_list = potential_victs2
			}
		}
		random_relation ={
			limit = { is_ai = yes NOT = { has_trait = demon } }
			type = bully
			add_to_list = potential_victs2
		}
		random_relation ={
			limit = { is_ai = yes NOT = { has_trait = demon } }
			type = crush
			add_to_list = potential_victs2
		}
		random_in_list = {
			list = potential_victs2
			if = {
				limit = {
					exists = THIS
				}
				save_scope_as = potential_vict2
			}
		}
		if = {
			limit = {
				NOT = {	exists = scope:potential_vict2	}
			}
			create_character = {
				age = { 21 40 }
				gender_female_chance = 50
				location = root.location
				dynasty = none
				save_scope_as = potential_vict2
			}
		}
	}

	option = {
		name = ev2.33.a
		location.province_owner = {
			trigger_event = magic_ev2.34
		}
		
		scope:potential_vict = {
			death = {
				death_reason = death_murder
				killer = root
			}
		}
		add_secret = {
			type = secret_murder
			target = scope:potential_vict
		}
	}

	option = {
		name = ev2.33.b
		remove_trait = possessed_genetic
		scope:potential_vict2 = {
			save_scope_as = potential_vict
			death = {
				death_reason = death_murder
				killer = root
			}
		}
		add_secret = {
			type = secret_murder
			target = scope:potential_vict
		}
		location.province_owner = {
			trigger_event = magic_ev2.34
		}
	}
	
	after = {
		trigger_event = {
			id = magic_ev2.35
			months = 3
		}
	}
}

magic_ev2.34 = {
	title = ev2.32.title
	type = character_event
	desc = ev2.34.desc
	theme = realm
	left_portrait = root
	right_portrait = scope:potential_vict
	trigger = {
		is_alive = yes
		is_imprisoned = no
		NOT = { root = scope:demon_child }
	}
	immediate = {
		show_as_tooltip = {
			scope:potential_vict = {
				death = natural
			}
		}
	}

	option = {
		name = ev2.34.a
	}
}

magic_ev2.35 = {
	title = ev2.35.title
	type = character_event
	desc = ev2.35.desc
	theme = mental_health
	left_portrait = root
	right_portrait = scope:potential_vict
	trigger = {
		is_alive = yes
		is_imprisoned = no
	}
	immediate = {
		save_scope_as = demon_child
		random_relation ={
			limit = { is_ai = yes NOT = { has_trait = demon } is_alive = yes }
			type = guardian
			add_to_list = potential_victs
		}
		location.province_owner = {
			random_courtier = {
				limit = { is_ai = yes NOT = { has_trait = demon } NOT = { this = root } is_alive = yes }
				add_to_list = potential_victs
			}
		}
		random_relation ={
			limit = { is_ai = yes NOT = { has_trait = demon } is_alive = yes }
			type = bully
			add_to_list = potential_victs
		}
		random_relation ={
			limit = { is_ai = yes NOT = { has_trait = demon } is_alive = yes }
			type = crush
			add_to_list = potential_victs
		}
		random_in_list = {
			list = potential_victs
			if = {
				limit = {
					exists = THIS
				}
				save_scope_as = potential_vict
			}
		}
		if = {
			limit = {
				NOT = {	exists = scope:potential_vict	}
			}
			create_character = {
				age = { 21 40 }
				gender_female_chance = 50
				location = root.location
				dynasty = none
				save_scope_as = potential_vict
			}
		}
	}

	option = {
		name = ev2.35.a
		location.province_owner = {
			trigger_event = magic_ev2.36
		}
		add_trait = deceitful
		scope:potential_vict = {
			death = {
				death_reason = death_murder
				killer = root
			}
		}
		add_secret = {
			type = secret_murder
			target = scope:potential_vict
		}
	}
	option = {
		name = ev2.35.b
		location.province_owner = {
			trigger_event = magic_ev2.36
		}
		add_trait = ambitious
		scope:potential_vict = {
			death = {
				death_reason = death_murder
				killer = root
			}
		}
		add_secret = {
			type = secret_murder
			target = scope:potential_vict
		}
	}
	option = {
		name = ev2.35.c
		location.province_owner = {
			trigger_event = magic_ev2.36
		}
		add_trait = arbitrary
		scope:potential_vict = {
			death = {
				death_reason = death_murder
				killer = root
			}
		}
		add_secret = {
			type = secret_murder
			target = scope:potential_vict
		}
	}
	option = {
		name = ev2.35.d
		trigger = {
			NOT = { has_trait = wrathful }
		}
		location.province_owner = {
			trigger_event = magic_ev2.36
		}
		
		add_trait = wrathful
		scope:potential_vict = {
			death = {
				death_reason = death_murder
				killer = root
			}
		}
		add_secret = {
			type = secret_murder
			target = scope:potential_vict
		}
	}
}

magic_ev2.36 = {
	title = ev2.32.title
	type = character_event
	desc = ev2.36.desc
	theme = realm
	left_portrait = root
	right_portrait = scope:potential_vict
	trigger = {
		is_alive = yes
		is_imprisoned = no
		NOT = { root = scope:demon_child }
	}
	immediate = {
		show_as_tooltip = {
			scope:potential_vict = {
				death = natural
			}
		}
	}

	option = {
		name = ev2.36.a
	}

	option = {
		name = ev2.36.b
		duel = {
			skill = intrigue
			value = 14
			3 = {
				#desc = ev2.36.b1
				compare_modifier = {
					value = scope:duel_value
					multiplier = 1
					min = 0
				}
				custom_tooltip = ev2.36.b1_ct
				trigger_event = magic_ev2.39
			}
			7 = {
				#desc = ev2.36.b2
				compare_modifier = {
					value = scope:duel_value
					multiplier = -1
					min = 0
				}
				send_interface_toast = {
					title=ev2.36.b2
					custom_tooltip = ev2.36.b2_ct
				}
			}
		}
	}
}

magic_ev2.37 = {
	title = ev2.37.title
	type = character_event
	desc = ev2.37.desc
	theme = mental_health
	left_portrait = root
	
	trigger = {
		is_alive = yes
		NOT = { has_trait = devoted }
	}
	immediate = {
		save_scope_as = demon_child
	}

	option = {
		name = ev2.37.a
		add_trait = source
	}
	after = {
		hidden_effect = {
			random_list = {
				10 = {
					trigger = { NOT = { has_trait = intellect_good_3 } }
					add_trait = intellect_good_3
				}
				10 = {
					trigger = { NOT = { has_trait = beauty_good_3 } }
					add_trait = beauty_good_3
				}
				10 = {
					trigger = { NOT = { has_trait = physique_good_3 } }
					add_trait = physique_good_3
				}
			}
		}
	}
}

magic_ev2.38 = {
	title = ev2.38.title
	type = character_event
	desc = ev2.38.desc
	theme = mental_health
	left_portrait = root
	trigger = {
		is_alive = yes
		NOT = { has_trait = devoted }
	}

	option = {
		name = ev2.38.a
		add_trait = demon
		add_trait_xp = {
			trait = demon
			value = 20
		}
		if = {
			limit = {
				is_ai = yes
			}
			random = {
				chance = 50
				create_cadet_branch = yes
			}
			
		}
	}
}

magic_ev2.39 = {
	title = ev2.39.title
	type = character_event
	desc = ev2.39.desc
	theme = mental_health
	left_portrait = root
	right_portrait = scope:demon_child
	trigger = {
		is_alive = yes
	}

	option = {
		name = ev2.39.a
	}
	option = {
		name = ev2.39.b
		imprison = {
			target = scope:demon_child
			type = house_arrest
		}
	}
	option = {
		name = ev2.39.c
		scope:demon_child = {
			death = natural
		}
	}
}

magic_ev2.40 = {
	title = ev2.40.title
	type = character_event
	desc = ev2.40.desc
	theme = mental_health
	left_portrait = root
	right_portrait = scope:actor

	trigger = {
		is_alive = yes
	}

	option = {
		name = ev2.40.a
		ai_chance = {
			base = 10
		}
	}
	option = {
		name = ev2.40.b
		trigger = {
			has_trait = witch_hunter
		}
		trait = witch_hunter
		if = {
			limit = {
				NOR = {
					any_scheme = {
						scheme_type = murder
					}
					any_scheme = {
						scheme_type = abduct
					}
				}
			}
			if = {
				limit = {
					is_landed = yes
				}
				start_scheme = {
					type = abduct
					target = scope:actor
				}
			}
			else = {
				start_scheme = {
					type = murder
					target = scope:actor
				}
			}
			
		}
		ai_chance = {
			base = 100
		}
	}
}

magic_ev2.41 = {
	title = ev2.41.title
	type = character_event
	desc = ev2.41.desc
	theme = witchcraft
	left_portrait = root

	trigger = {
		is_alive = yes
	}

	option = {
		name = ev2.41.a
		random_list = {
			10 = {
				send_interface_toast = {
					title = ev2.41.title
					add_character_modifier = {
						modifier = witch_poison_modifier
						years = 3
					}
				}
			}
			10 = {
				trigger = {
					NOT = {
						has_character_modifier = intrigue_risky_poison_experimentation_modifier
					}
				}
				send_interface_toast = {
					title = ev2.41.title
					add_character_modifier = {
						modifier = intrigue_risky_poison_experimentation_modifier
						years = 3
					}
				}
			}
		}
	}
	option = {
		name = ev2.41.b
		random_list = {
			10 = {
				send_interface_toast = {
					title = ev2.41.title
					add_character_modifier = {
						modifier = love_potions_modifier
						years = 3
					}
				}
			}
			10 = {
				send_interface_toast = {
					title = ev2.41.title
					add_character_modifier = {
						modifier = intoxicating_perfume_modifier
						years = 3
					}
				}
			}
		}
	}
	option = {
		name = ev2.41.c
		random_list = {
			10 = {
				send_interface_toast = {
					title = ev2.41.title
					add_character_modifier = {
						modifier = health_potion_modifier
						years = 3
					}
				}
			}
			10 = {
				send_interface_toast = {
					title = ev2.41.title
					add_character_modifier = {
						modifier = witch_brew_modifier
						years = 3
					}
				}
			}
		}
		if = { limit = { has_trait = wounded_1 }
			remove_trait = wounded_1
		}
		else_if = { limit = { has_trait = wounded_2 }
			remove_trait = wounded_2
		}
		else_if = { limit = { has_trait = wounded_3 }
			remove_trait = wounded_3
			add_trait_force_tooltip = wounded_1
		}
		else_if = { limit = { has_trait = ill }
			remove_trait = ill
		}
		else_if = { limit = { has_trait = maimed }
			random = {
				chance = 25
				remove_trait = maimed
			}
		}
		else_if = { limit = { has_trait = smallpox }
			random = {
				chance = 25
				remove_trait = smallpox
			}
		}
		else_if = {	limit = {	has_character_modifier = chronic_headaches_modifier	}
			remove_character_modifier = chronic_headaches_modifier
		}
		else_if = {	limit = {	has_character_modifier = malnourished_modifier	}
			remove_character_modifier = malnourished_modifier
		}
		else_if = {	limit = {	has_character_modifier = infected_wound_modifier	}
			random = {
				chance = 50
				remove_character_modifier = infected_wound_modifier
			}
		}
	}
	option = {
		name = ev2.41.d
		trigger = {
			has_trait = true_witch
		}
		trait = true_witch
		if = {
			limit = {
				#has_perk = combat_spells_p3_perk
				has_trait = lifestyle_herbalist
			}
			custom_tooltip = ev2.41.d_ct2
		}
		random_list = {
			70 = {
				#send_interface_toast = {
				#	title = ev2.41.dt
				#	custom_tooltip = ev2.41.d_ct
				#}
				custom_tooltip = ev2.41.d_ct
				hidden_effect = {
					create_rare_potion_effect = {
						OWNER = root
					}
				}
			}
			30 = {
				trigger = {
					NAND = {
						has_perk = combat_spells_p3_perk
						has_trait = lifestyle_herbalist
					}
				}
				send_interface_toast = {
					title = ev2.41.dt
					custom_tooltip = ev2.41.d2_ct
				}
			}
		}
		gain_sc_xp1_effect = yes
	}
}

magic_ev2.42 = {
	hidden = yes
	type = character_event
	immediate = {
		random_list = {
			10 = {
				trigger = {
					NOR = {
						has_trait = beauty_good_3
						has_trait = beauty_good_2
						has_trait = beauty_good_1
						has_trait = beauty_bad_3
						has_trait = beauty_bad_2
						has_trait = beauty_bad_1
					}
				}
				add_trait = beauty_good_1
			}
			10 = {
				trigger = {
					NOR = {
						has_trait = intellect_good_3
						has_trait = intellect_good_2
						has_trait = intellect_good_1
						has_trait = intellect_bad_3
						has_trait = intellect_bad_2
						has_trait = intellect_bad_1
					}
				}
				add_trait = intellect_good_1
			}
			10 = {
				trigger = {
					NOR = {
						has_trait = physique_good_3
						has_trait = physique_good_2
						has_trait = physique_good_1
						has_trait = physique_bad_3
						has_trait = physique_bad_2
						has_trait = physique_bad_1
					}
				}
				add_trait = intellect_good_1
			}
			10 = {
				send_interface_toast = {
					title = ev2.42.title
					add_diplomacy_skill = 1
					add_intrigue_skill = 1
				}
			}
			10 = {
				send_interface_toast = {
					title = ev2.42.title
					add_martial_skill = 1
					add_stewardship_skill = 1
				}
			}
			10 = {
				send_interface_toast = {
					title = ev2.42.title
					add_learning_skill = 1
					add_stewardship_skill = 1
				}
			}
			5 = {
				trigger = {
					NOR = {
						has_trait = intellect_good_3
						has_trait = intellect_good_2
						has_trait = intellect_good_1
						has_trait = intellect_bad_3
						has_trait = intellect_bad_2
						has_trait = intellect_bad_1
						has_trait = shrewd
						has_trait = dull
					}
				}
				send_interface_toast = {
					title = ev2.42.title
					add_trait = dull
				}
			}
			5 = {
				trigger = {
					NOR = {
						has_trait = source
						has_trait = source2
						has_trait = source3
					}
				}
				add_trait = source
			}
			10 = {
				trigger = {
					NOT = { has_trait = possessed_1 }
					NOT = { has_trait = possessed_genetic }
				}
				add_trait = possessed_1
			}
			10 = {
				send_interface_toast = {
					title = ev2.42.title
					add_character_modifier = {
						modifier = health_potion_modifier
						years = 3
					}
					add_character_modifier = {
						modifier = intoxicating_perfume_modifier
						years = 3
					}
				}
			}
			10 = {
				send_interface_toast = {
					title = ev2.42.title
					add_character_modifier = {
						modifier = looked_to_the_future
						years = 3
					}
				}
			}
			10 = {
				send_interface_toast = {
					title = ev2.42.title
					add_character_modifier = {
						modifier = amp_modifier
						years = 5
					}
				}
			}
			10 = {
				trigger = {
					has_trait = lifestyle_mystic
				}
				send_interface_toast = {
					title = ev2.42.title
					add_trait_xp = {
						trait = lifestyle_mystic
						value = { 40 90 }
					}
				}
			}
			10 = {
				trigger = {
					can_be_power_saturated_trigger = yes
				}
				send_interface_toast = {
					title = ev2.42.title
					gain_standard_ps_effect = yes
				}
			}
			10 = {
				random_list = {
					1 = {
						add_diplomacy_lifestyle_perk_points = 1
					}
					1 = {
						add_martial_lifestyle_perk_points =  1
					}
					1 = {
						add_learning_lifestyle_perk_points = 1
					}
					1 = {
						add_intrigue_lifestyle_perk_points = 1
					}
					1 = {
						add_stewardship_lifestyle_perk_points = 1
					}
					1 = {
						add_magic_lifestyle_perk_points = 1
					}
				}
			}
		}
	}
}

magic_ev2.43 = {
	hidden = yes
	#type = empty
	scope = none
	trigger = {
		any_living_character = {
			OR = {
				has_trait = source
				has_trait = source2
				has_trait = source3
			}
			
		}
	}

	immediate = {
		every_living_character = {
			limit = {
				OR = {
					has_trait = source
					has_trait = source2
					has_trait = source3
				}
			}
			random = {
				chance = 99
				trigger_event = {
					id = magic_ev.11
					days = { 1 364 }
				}
			}
		}
	}
}

magic_ev2.44 = {
	hidden = yes
	type = character_event
	trigger = {
		is_ai=yes
		has_character_flag = isheir
		is_imprisoned = no
		NOT = {
			is_primary_heir_of = scope:mplayer
		}
	}

	immediate = {
		random_sibling = {
			limit = {
				is_primary_heir_of = scope:mplayer
			}
			save_scope_as = heir_vict
			death = {
				death_reason = death_murder
				killer = root
			}
		}
		add_secret = {
			type = secret_murder
			target = scope:heir_vict
		}
		trigger_event = {
			id = magic_ev2.45
			years = { 2 3 }
		}
	}
}

magic_ev2.45 = {
	hidden = yes
	type = character_event
	trigger = {
		is_ai=yes
		is_alive = yes
		has_character_flag = isheir
		is_imprisoned = no
		NOT = {
			is_primary_heir_of = scope:mplayer
		}
		is_landed = no
		NOT = {
			any_scheme = {
				scheme_type = murder
			}
		}
	}

	immediate = {
		random_sibling = {
			limit = {
				is_primary_heir_of = scope:mplayer
				NOT = { this = root }
			}
			save_scope_as = heir_vict
		}
		start_scheme = {
			type = murder
			target = scope:heir_vict
		}
		trigger_event = {
			id = magic_ev2.45
			years = { 2 3 }
		}
		if = {
			limit = {
				NOR = {
					has_relation_friend = scope:mplayer
					has_relation_nemesis = scope:mplayer
					has_relation_lover = scope:mplayer
					has_relation_soulmate = scope:mplayer
					has_relation_mminion = scope:mplayer
					has_relation_mmaster = scope:mplayer
				}
			}
			set_relation_rival = scope:mplayer
			#set_random_rivalry_reason = { TARGET = scope:mplayer }
		}
	}
}

magic_ev2.46 = {
	title = ev2.46.title
	type = character_event
	desc = ev2.46.desc
	theme = witchcraft
	left_portrait = root

	trigger = {
		is_alive = yes
		has_focus = witch_focus
		NOT = { has_character_flag = oneiromancy }
	}

	option = {
		name = ev2.46.a
		custom_tooltip = ev2.47.a_ct
		add_magic_lifestyle_perk_points = 1
	}
	option = {
		name = ev2.46.b
		add_character_modifier = {
			modifier = oneiromancy_modifier
			years = 10
		}
	}

	after = {
		add_character_flag = oneiromancy
	}
}

magic_ev2.47 = {
	title = ev2.47.title
	type = character_event
	desc = ev2.47.desc
	theme = witchcraft
	left_portrait = root

	trigger = {
		is_alive = yes
		has_focus = arcane_focus
		can_be_power_saturated_trigger = yes
		NOT = {
			has_character_flag = magicperk
		}
	}

	option = {
		name = ev2.47.a
		custom_tooltip = ev2.47.a_ct
		add_magic_lifestyle_perk_points = 1
	}
	option = {
		name = ev2.47.b
		gain_standard_ps_effect = yes
	}

	after = {
		add_character_flag = {
			flag = magicperk
			years = 6
		}
	}
}

#Legion
magic_ev2.48 = {
	title = ev2.48.title
	type = character_event
	desc = ev2.48.desc
	theme = realm
	left_portrait = root

	trigger = {
		has_trait = archmage
		#has_trait = true_witch
		is_alive = yes
		is_independent_ruler = yes
		is_imprisoned = no
		is_ai = no
		highest_held_title_tier = tier_empire
		dynasty={
			NOT={
				has_variable=legion
			}
		}
	}

	immediate = {
		dynasty = {
			set_variable = legion
		}
	}

	option = {
		name = ev2.48.a
		trigger = {
			NOT = {
				has_trait = overseer
			}
		}
		duel = {
			skill = martial
			value = 10
			6 = {
				#desc = ev2.36.b1
				compare_modifier = {
					value = scope:duel_value
					multiplier = 2
					min = 0
				}
				send_interface_toast = {
					title=ev2.48.title
					custom_tooltip = ev2.48.a_ct1
				}
				trigger_event = magic_ev2.50
			}
			4 = {
				#desc = ev2.36.b2
				compare_modifier = {
					value = scope:duel_value
					multiplier = -2
					min = 0
				}
				send_interface_toast = {
					title=ev2.48.title
					custom_tooltip = ev2.48.a_ct2
				}
				trigger_event = magic_ev2.49
			}
		}

	}
	option = {
		name = ev2.48.a
		trigger = {
			has_trait = overseer
		}
		trait = overseer
		send_interface_toast = {
			title=ev2.48.title
			custom_tooltip = ev2.48.a_ct1
		}
		trigger_event = magic_ev2.50
	}
	option = {
		name = ev2.7.a
		trigger = {
			has_trait = paranoid
		}
		trait = paranoid
		send_interface_toast = {
			title=ev2.48.title
			custom_tooltip = ev2.48.a_ct1
		}
		trigger_event = magic_ev2.50
	}
	option = {
		name = ev2.48.b
		trigger = {
			can_spend_standard_ps_trigger = yes
			has_trait = archmage
		}
		trait = archmage
		spend_standard_ps_effect = yes
		custom_tooltip = ev2.48.a_ct1
		trigger_event = magic_ev2.50
	}

	option = {
		name = ev2.48.c
		custom_tooltip = ev2.48.c_ct
		add_character_flag = escaped_coup
		trigger_event = magic_ev2.49
	}
}

#coup succeed
magic_ev2.49 = {
	hidden = yes
	type = character_event

	immediate = {
		create_character = {
			employer = root
			name = legion_name
			template = bael_demon_character
			save_scope_as = demon
			after_creation = {
				set_sexuality = bisexual
				give_witch_secret_or_trait_effect = yes
				add_character_flag = bael_flag
				add_perk = protective_runes_perk
				add_perk = court_of_shadows_perk
				add_perk = prepared_for_anything_perk
				add_character_modifier = master_psionic_modifier
				add_character_modifier = mind_reader_modifier
				add_character_modifier = financial_knowledge_modifier
				add_character_modifier = more_knights_modifier
				add_character_modifier = demonic_charm_modifier
				add_character_modifier = strength_ohm_modifier
				add_character_modifier = looked_to_the_future
				change_target_weight = 99
				add_trait_xp = {
					trait = demon
					value = 100
				}
			}
		}
		#scope:demon = {
		#	set_sexuality = bisexual
		#	give_witch_secret_or_trait_effect = yes
		#	add_character_flag = bael_flag
		#	add_perk = protective_runes_perk
		#	add_perk = court_of_shadows_perk
		#	add_perk = prepared_for_anything_perk
		#	add_character_modifier = master_psionic_modifier
		#	add_character_modifier = mind_reader_modifier
		#	add_character_modifier = financial_knowledge_modifier
		#	add_character_modifier = more_knights_modifier
		#	add_character_modifier = demonic_charm_modifier
		#	add_character_modifier = strength_ohm_modifier
		#	add_character_modifier = looked_to_the_future
		#	change_target_weight = 99
		#}
		house = {
			save_scope_as = hhouse
		}
		every_character_artifact = {
			limit = {
				has_variable = magic1
			}
			#save_scope_as = stealed_arts
			set_owner = {
				target = scope:demon
				history = {
					type = stolen
					actor = root
					recipient = scope:demon
					location = root.location
				}
			}
			scope:hhouse = {
				if = {
					limit = {
						NOT = {
							has_house_artifact_claim = PREV
						}
					}
					add_house_artifact_claim = PREV
				}
				#add_house_artifact_claim = PREV
			}
		}
		#add_personal_artifact_claim = scope:stealed_arts
		#house = {
		#	add_house_artifact_claim = scope:stealed_arts
		#}
		random_held_title = {
			limit = {
				tier = tier_county
				NOT = { this = root.capital_county }
			}
			save_scope_as = savehouse
		}
		create_title_and_vassal_change = {
			type = granted
			save_scope_as = title_change
			add_claim_on_loss = yes
		}
		every_held_title = {
			limit = {
				NOT = { this = scope:savehouse }
				is_titular = no
				is_leased_out = no
				tier >= tier_county
			}
			
			change_title_holder_include_vassals = {
				holder = scope:demon
				change = scope:title_change
			}
		}
		change_liege = {
			liege = scope:demon
			change = scope:title_change
		}
		resolve_title_and_vassal_change = scope:title_change
		if = {
			limit = {
				has_character_flag = escaped_coup
			}
			remove_character_flag = escaped_coup
		}
		else = {
			scope:demon = {
				imprison = {
					target = root
					type = dungeon
				}
			}
		}
		set_relation_nemesis = scope:demon
		scope:demon = {
			#create_title_and_vassal_change = {
			#	type = granted
			#	save_scope_as = title_change2
			#	add_claim_on_loss = no
			#}
			#change_liege = {
			#	liege = root
			#	change = scope:title_change2
			#}
			#resolve_title_and_vassal_change = scope:title_change2

			every_vassal = {
				limit = {
					is_powerful_vassal = yes
					is_ai = yes
				}
				set_relation_mmaster = scope:demon
			}
			trigger_event = {
				id = magic_ev2.52
				months = 1
			}
		}

	}
}


#Legion
magic_ev2.50 = {
	title = ev2.50.title
	type = character_event
	desc = ev2.50.desc
	theme = realm
	left_portrait = root

	immediate = {
		hidden_effect = {
			if = {
				limit = {
					any_neighboring_and_across_water_realm_same_rank_owner = {
						primary_title = { is_titular = no }	
						is_ai = yes
					}
				}
				random_neighboring_and_across_water_realm_same_rank_owner = {
					limit = {
						primary_title = { is_titular = no }	
						is_ai = yes
					}
					save_scope_as = target0
				}
			}
			else_if = {
				limit = {
					any_ruler = {
						primary_title = { tier = tier_empire }
						primary_title = { is_titular = no }	
						NOT = { this = root }
						is_ai = yes
					}
				}
				random_ruler = {
					limit = {
						primary_title = { tier = tier_empire }
						primary_title = { is_titular = no }	
						NOT = { this = root }
						is_ai = yes
						is_landed = yes
					}
					save_scope_as = target0
				}
			}
			else = {
				random_ruler = {
					limit = {
						primary_title = { tier = tier_kingdom }
						primary_title = { is_titular = no }	
						NOT = { this = root }
						is_ai = yes
						is_landed = yes
					}
					save_scope_as = target0
				}
			}
			#legion
			create_character = {
				employer = scope:target0
				name = legion_name
				template = bael_demon_character
				save_scope_as = demon
				after_creation = {
					set_sexuality = bisexual
					give_witch_secret_or_trait_effect = yes
					add_character_flag = bael_flag
					add_perk = protective_runes_perk
					add_perk = combat_spells_p3_perk
					add_perk = court_of_shadows_perk
					add_perk = prepared_for_anything_perk
					add_character_modifier = master_psionic_modifier
					add_character_modifier = mind_reader_modifier
					add_character_modifier = financial_knowledge_modifier
					add_character_modifier = more_knights_modifier
					add_character_modifier = demonic_charm_modifier
					add_character_modifier = strength_ohm_modifier
					add_character_modifier = looked_to_the_future
					change_target_weight = 99
					add_trait_xp = {
						trait = demon
						value = 100
					}
					if = {
						limit = {
							root = {
								has_trait = yaga
							}
						}
						add_character_modifier = magic_duelist_modifier
					}
				}
			}
			#scope:demon = {
			#	set_sexuality = bisexual
			#	give_witch_secret_or_trait_effect = yes
			#	add_character_flag = bael_flag
			#	add_perk = protective_runes_perk
			#	add_perk = combat_spells_p3_perk
			#	add_perk = court_of_shadows_perk
			#	add_perk = prepared_for_anything_perk
			#	add_character_modifier = master_psionic_modifier
			#	add_character_modifier = mind_reader_modifier
			#	add_character_modifier = financial_knowledge_modifier
			#	add_character_modifier = more_knights_modifier
			#	add_character_modifier = demonic_charm_modifier
			#	add_character_modifier = strength_ohm_modifier
			#	#add_character_modifier = power_saturated2
			#	add_character_modifier = looked_to_the_future
			#	change_target_weight = 99
			#}
			house = {
				save_scope_as = hhouse
			}
			every_character_artifact = {
				limit = {
					has_variable = magic1
				}
				#save_scope_as = stealed_arts
				set_owner = {
					target = scope:demon
					history = {
						type = stolen
						actor = root
						recipient = scope:demon
						location = root.location
					}
				}
				scope:hhouse = {
					if = {
						limit = {
							NOT = {
								has_house_artifact_claim = PREV
							}
						}
						add_house_artifact_claim = PREV
					}
					
				}
			}
			#add_personal_artifact_claim = scope:stealed_arts
			#house = {
			#	add_house_artifact_claim = scope:stealed_arts
			#}
			scope:target0 = {
				create_title_and_vassal_change = {
					type = granted
					save_scope_as = title_change
					add_claim_on_loss = yes
				}
				every_held_title = {
					limit = {
						is_titular = no
						is_leased_out = no
						is_head_of_faith = no
						tier >= tier_county
					}
					change_title_holder_include_vassals = {
						holder = scope:demon
						change = scope:title_change
					}
				}
				resolve_title_and_vassal_change = scope:title_change
			}
			set_relation_nemesis = scope:demon

		}
	}

	option = {
		name = ev2.50.a
		custom_tooltip = ev2.50.a_ct
	}

	after = {
		save_scope_as = poor_player
		hidden_effect = {
			primary_title = {
				save_scope_as = ttitle_emp
			}
			random_held_title = {
				save_scope_as = ttitle_rand
			}
			scope:demon = {
				every_vassal = {
					limit = {
						is_ai = yes
					}
					set_relation_mmaster = scope:demon
				}
				every_vassal_or_below = {
					limit = {
						is_ai = yes
						NOR = {
							faith = scope:demon.faith
							this = faith.religious_head
						}
					}
					set_character_faith = scope:demon.faith
				}
				add_pressed_claim = scope:ttitle_emp
				add_pressed_claim = scope:ttitle_rand
				trigger_event = {
					id = magic_ev2.51
					months = 1
				}
			}
		}
	}
}

magic_ev2.51 = {
	hidden = yes
	type = character_event
	trigger = {
		is_ai=yes
	}

	immediate = {
		add_gold = 1000
		add_prestige = 500
		spawn_army = {
			men_at_arms = {
				type = demonic_knights
				stacks = 8
			}
			levies = {
				add = scope:poor_player.max_military_strength
				multiply = 1.3
			}
			location = scope:demon.capital_province
			name = undead_army_loc
			inheritable = no
			uses_supply = no
		}
	}
}

magic_ev2.52 = {
	hidden = yes
	type = character_event
	trigger = {
		is_ai=yes
	}

	immediate = {
		add_gold = 1000
		add_prestige = 500
		spawn_army = {
			men_at_arms = {
				type = demonic_knights
				stacks = 2
			}
			levies = {
				add = max_military_strength
				multiply = 0.5
			}
			location = scope:demon.capital_province
			name = undead_army_loc
			inheritable = no
			uses_supply = no
		}
	}
}

magic_ev2.53 = {
	title = ev2.53.title
	type = character_event
	desc = ev2.53.desc
	theme = witchcraft
	left_portrait = root
	right_portrait = scope:watcher

	trigger = {
		is_alive = yes
	}

	option = {
		name = ev2.53.a
		add_character_modifier = {
			modifier = more_vigilant_recistance_modifier
			years = 1
		}
	}
}

magic_ev2.54 = {
	title = ev2.53.title
	type = character_event
	desc = ev2.54.desc
	theme = witchcraft
	left_portrait = root
	right_portrait = scope:watcher
	lower_right_portrait = scope:magic_user

	trigger = {
		is_alive = yes
	}

	option = {
		name = ev2.53.a
		scope:magic_user = {
			every_secret = {
				limit = {
					secret_type = secret_witch
				}
				reveal_to = root
			}
		}
	}
}

#rumors about magic item (transfered to magic_ev4.78)
#magic_ev2.55 = {
#	title = ev2.55.title
#	type = character_event
#	desc = ev2.55.desc
#	theme = realm
#	left_portrait = root
#	right_portrait = scope:mmage
#	trigger = {
#		is_alive = yes
#		#house = {
#		#	NOT = {
#		#		has_house_artifact_claim = scope:artif
#		#}
#		NOT = {
#			any_character_artifact = { has_variable = magic1 }
#		}
#	}
#	immediate = {
#		random_living_character = {
#			limit = {
#				any_character_artifact = { has_variable = magic1 }
#			}
#			save_scope_as = mmage
#		}
#		scope:mmage = {
#			random_character_artifact = {
#				limit = {
#					has_variable = magic1
#				}
#				save_scope_as = artif
#			}
#		}
#	}
#	option = {
#		name = ev2.55.a
#		if = {
#			limit = {
#				NOT = {
#					has_personal_artifact_claim = scope:artif
#				}
#			}
#			add_personal_artifact_claim = scope:artif
#			#set_relation_rival = scope:mmage
#			set_random_rivalry_reason = { TARGET = scope:mmage }
#		}
#		
#		#house = {
#		#	add_house_artifact_claim = scope:artif
#		#}
#		
#	}
#	option = {
#		name = ev2.55.b
#
#	}
#	after = {
#		add_character_flag = rumor_magic_item
#		clear_saved_scope = mmage
#		clear_saved_scope = artif
#	}
#}

#transmutation
magic_ev2.56 = {
	title = ev2.56.title
	type = character_event
	desc = ev2.56.desc
	theme = realm
	left_portrait = root

	trigger = {
		is_alive = yes
		has_focus = arcane_focus
	}
	option = {
		name = ev2.56.a
		custom_tooltip = ev2.47.a_ct
		hidden_effect = {
			add_magic_lifestyle_perk_points = 1
		}
	}
	option = {
		name = ev2.56.b
		add_gold = medium_gold_max_value
	}
}

#witch-king
magic_ev2.57 = {
	title = ev2.57.title
	type = character_event
	desc = ev2.57.desc
	theme = realm
	left_portrait = root

	trigger = {
		is_alive = yes
		has_focus = witch_focus
		highest_held_title_tier>3
	}
	option = {
		name = ev2.57.a
		custom_tooltip = ev2.47.a_ct
		hidden_effect = {
			add_magic_lifestyle_perk_points = 1
		}
	}
	option = {
		name = ev2.57.b
		add_prestige = 300
		add_piety = 300
	}
}

magic_ev2.58 = {
	hidden = yes
	type = character_event
	trigger = {
		any_ruler = {
			is_ai = yes
			has_trait = archmage
			count < 3
		}
	}

	immediate = {
		create_mage_effect = yes
	}
}

#witch cooperation
magic_ev2.59= {
	title = ev2.59.title
	type = character_event
	desc = ev2.59.desc
	theme = realm
	left_portrait = root
	right_portrait = scope:wwitch

	trigger = {
		is_alive = yes
		OR = {
			has_focus = witch_focus
			has_focus = arcane_focus
		}
		
	}
	immediate = {
		random_living_character = {
			limit = {
				is_ai = yes
				NOT = { this = root }
				is_imprisoned = no
				OR = {
					has_trait = witch
					has_focus = witch_focus
				}
				NOT = {
					has_trait = true_witch
				}
			}
			save_scope_as = wwitch
		}
	}
	option = {
		name = ev2.59.a
		custom_tooltip = ev2.47.a_ct
		custom_tooltip = ev2.47.a_ct2
		hidden_effect = {
			add_magic_lifestyle_perk_points = 1
			scope:wwitch = {
				add_magic_lifestyle_perk_points = 1
			}
		}
		scope:wwitch = {
			add_opinion = {
				target = root
				modifier = cooperation_witch_modifier
				years = 4
			}
		}
	}
	option = {
		name = ev2.59.b
		add_stress = minor_stress_gain
		custom_tooltip = ev2.47.a_ct
		hidden_effect = {
			add_magic_lifestyle_perk_points = 1
		}
	}
}

magic_ev2.60 = {
	hidden = yes
	type = character_event
	trigger = {
		is_ai = yes
		any_living_character = {
			any_character_artifact = {
				has_variable = magic1
				count > 1
			}
		}
	}

	immediate = {
		random_living_character = {
			limit = {
				any_character_artifact = {
					has_variable = magic1
					count > 1
				}
			}
			save_scope_as = mmage
		}
		scope:mmage = {
			random_character_artifact = {
				limit = {
					has_variable = magic1
				}
				save_scope_as = artif
			}
		}
		
		
		if = {
			limit = {
				in_diplomatic_range = scope:mmage
			}
			if = {
				limit = {
					scope:mmage = {
						dread < 20
					}
				}
				random = {
					chance = 60
					add_character_modifier = {
						modifier = preparation_for_stealing_modifier
						years = 4
					}
					add_personal_artifact_claim = scope:artif
					start_scheme = {
						type = steal_back_artifact
						target = scope:mmage
						artifact = scope:artif
					}
				}
			}
			else_if = {
				limit = {
					scope:mmage = {
						dread < 60
					}
				}
				random = {
					chance = 30
					add_character_modifier = {
						modifier = preparation_for_stealing_modifier
						years = 4
					}
					add_personal_artifact_claim = scope:artif
					start_scheme = {
						type = steal_back_artifact
						target = scope:mmage
						artifact = scope:artif
					}
				}
			}
			else = {
				random = {
					chance = 1
					add_character_modifier = {
						modifier = preparation_for_stealing_modifier
						years = 4
					}
					add_personal_artifact_claim = scope:artif
					start_scheme = {
						type = steal_back_artifact
						target = scope:mmage
						artifact = scope:artif
					}
				}
			}
		}
		
		
		clear_saved_scope = mmage
		clear_saved_scope = artif
	}
}

#court mage support1
magic_ev2.61= {
	title = ev2.61.title
	type = character_event
	desc = ev2.61.desc
	theme = witchcraft
	left_portrait = root
	right_portrait = root.liege

	trigger = {
		is_alive = yes
		is_independent_ruler = no
	}
	immediate = {
		save_scope_as = cmage
		root.liege = {
			save_scope_as = lliege
		}
		liege = {
			random_relation = {
				type = rival
				limit = {
					can_be_cursed_trigger = yes
				}
				add_to_list = potential_tars
			}
			random_relation = {
				type = nemesis
				limit = {
					can_be_cursed_trigger = yes
				}
				add_to_list = potential_tars
			}
			random_war_enemy = {
				limit = {
					can_be_cursed_trigger = yes
					is_landed = yes
				}
				add_to_list = potential_tars
			}
			random_in_list = {
				list = potential_tars
				save_scope_as = potential_tar
			}
		}
	}
	option = {
		name = ev2.61.a
		trigger = {
			short_term_gold >= half_demon_gold_value
		}
		show_as_tooltip = {
			pay_short_term_gold = {
				target = root.liege
				gold = half_demon_gold_value
			}
		}
		
		if = {
			limit = {
				has_trait = greedy
			}
			add_stress = minor_stress_gain
		}
		liege = {
			trigger_event = magic_ev2.62
		}
		
		ai_chance = {
			base = 5
			modifier = {
				add = -4
				has_trait = greedy
			}
		}
	}
	option = {
		name = ev2.61.b
		trigger = {
			learning > 20
		}
		skill = learning
		show_as_tooltip = {
			liege = {
				add_character_modifier = {
					modifier = court_mage_support
					years = 4
				}
			}
		}
		liege = {
			trigger_event = magic_ev2.64
		}
		ai_chance = {
			base = 20
		}
	}
	option = {
		name = ev2.61.c
		trigger = {
			has_trait = true_witch
			exists = scope:potential_tar
			scope:potential_tar = {
				can_be_cursed_trigger = yes
			}
		}
		trait = true_witch
		#hidden_effect = {
		#	remove_interaction_cooldown = cast_curse
		#}
		#run_interaction = {
		#	interaction = cast_curse
		#	actor = root
		#	recipient = scope:potential_tar
		#	#execute_threshold = accept
		#}
		scope:potential_tar = {
			add_character_modifier = { modifier = cursed_modifier years = 6 }
		}
		liege = {
			trigger_event = magic_ev2.63
		}
		ai_chance = {
			base = 10
			modifier = {
				add = -9
				has_trait = compassionate
			}
		}
	}
	option = {
		name = ev2.61.d
		trigger = {
			has_trait = archmage
			exists = scope:potential_tar
			scope:potential_tar = {
				can_be_cursed_trigger = yes
			}
			can_spend_standard_ps_trigger = yes
		}
		trait = archmage
		#hidden_effect = {
		#	remove_interaction_cooldown = cast_powerfull_curse
		#}
		#run_interaction = {
		#	interaction = cast_powerfull_curse
		#	actor = root
		#	recipient = scope:potential_tar
		#	#execute_threshold = accept
		#}
		scope:potential_tar = {
			save_scope_as = reci
		}
		trigger_event = magic_ev.10
		custom_tooltip = ev2.61.d_ct
		show_as_tooltip = {
			spend_standard_ps_effect = yes
		}
		liege = {
			trigger_event = magic_ev2.63
		}
		ai_chance = {
			base = 10
			modifier = {
				add = -9
				has_trait = compassionate
			}
		}
	}
	option = {
		name = ev2.61.f
		trigger = {
			has_trait = archmage
			can_spend_standard_ps_trigger = yes
			liege = {
				OR = {
					has_trait = ill
					has_trait = pneumonic
					has_trait = great_pox
					has_trait = early_great_pox
					has_trait = lovers_pox
					has_trait = leper
					has_trait = wounded_1
					has_trait = wounded_2
					has_trait = wounded_3
					has_trait = maimed
					has_trait = infirm
					has_trait = incapable
					has_trait = gout_ridden
					has_trait = consumption
					has_trait = cancer
					has_trait = typhus
					has_trait = bubonic_plague
					has_trait = smallpox
					has_trait = sickly
					has_trait = blind
				}
			}
		}
		trait = archmage
		spend_standard_ps_effect = yes
		liege = {
			show_as_tooltip = {
					if = { limit = { has_trait = ill }
						remove_trait = ill
					}
					if = { limit = { has_trait = pneumonic }
						remove_trait = pneumonic
					}
					if = { limit = { has_trait = great_pox }
						remove_trait = great_pox
					}
					if = { limit = { has_trait = early_great_pox }
						remove_trait = early_great_pox
					}
					if = { limit = { has_trait = lovers_pox }
						remove_trait = lovers_pox
					}
					if = { limit = { has_trait = leper }
						remove_trait = leper
					}
					if = { limit = { has_trait = wounded_1 }
						remove_trait = wounded_1
					}
					if = { limit = { has_trait = wounded_2 }
						remove_trait = wounded_2
					}
					if = { limit = { has_trait = wounded_3 }
						remove_trait = wounded_3
					}
					if = { limit = { has_trait = maimed }
						remove_trait = maimed
					}
					if = { limit = { has_trait = infirm }
						remove_trait = infirm
					}
					if = { limit = { has_trait = incapable }
						remove_trait = incapable
					}
					if = { limit = { has_trait = gout_ridden }
						remove_trait = gout_ridden
					}
					if = { limit = { has_trait = consumption }
						remove_trait = consumption
					}
					if = { limit = { has_trait = cancer }
						remove_trait = cancer
					}
					if = { limit = { has_trait = typhus }
						remove_trait = typhus
					}
					if = { limit = { has_trait = bubonic_plague }
						remove_trait = bubonic_plague
					}
					if = { limit = { has_trait = smallpox }
						remove_trait = smallpox
					}
					if = { limit = { has_trait = sickly }
						remove_trait = sickly
					}
					if = { limit = { has_trait = blind }
						remove_trait = blind
					}
			}
			trigger_event = magic_ev2.81
		}
		ai_chance = {
			base = 15
			modifier = {
				add = 10
				has_trait = compassionate
			}
		}
	}
	option = {
		name = ev2.61.e
		liege = {
			add_opinion = {
				target = root
				modifier = lazy_court_mage_modifier
				years = 4
			}
		}
		custom_tooltip = ev2.61.e_ct
		liege = {
			trigger_event = magic_ev2.65
		}
		ai_chance = {
			base = 5
			modifier = {
				add = 1000
				opinion = {
					target = root.liege
					value < 0
				}
			}
		}
	}
}

#court mage response - gold
magic_ev2.62= {
	title = ev2.62.title
	type = character_event
	desc = ev2.62.desc
	theme = realm
	left_portrait = root
	right_portrait = scope:cmage

	option = {
		name = ev2.62.a
		scope:cmage = {
			pay_short_term_gold = {
				target = root
				gold = half_demon_gold_value
			}
		}
	}
}

#court mage response - curse
magic_ev2.63= {
	title = ev2.62.title
	type = character_event
	desc = ev2.63.desc
	theme = realm
	left_portrait = root
	right_portrait = scope:cmage
	lower_right_portrait = scope:potential_tar
	immediate = {
		custom_tooltip = ev2.63.a_ct
	}
	option = {
		name = ev2.62.a
		
	}
}

#court mage response - knowledge
magic_ev2.64= {
	title = ev2.62.title
	type = character_event
	desc = ev2.64.desc
	theme = realm
	left_portrait = root
	right_portrait = scope:cmage
	
	option = {
		name = ev2.64.a
		add_character_modifier = {
			modifier = court_mage_support
			years = 4
		}
	}
}

#court mage response - nothing
magic_ev2.65= {
	title = ev2.62.title
	type = character_event
	desc = ev2.65.desc
	theme = realm
	left_portrait = root
	right_portrait = scope:cmage
	
	option = {
		name = ev2.65.a
		
	}
	option = {
		trigger = {
			intrigue >20
			NOT = { has_hook = scope:cmage }
		}
		skill = intrigue
		name = ev2.65.c
		add_hook = {
			type = manipulation_hook
			target = scope:cmage
		}
	}
	option = {
		name = ev2.65.b
		#scope:cmage = {
		#	revoke_court_position = mage_court_position
		#}
		revoke_court_position = {
			#recipient = scope:cmage
			court_position = mage_court_position
		}
		scope:cmage = {
			add_character_flag = {
				flag = revoked_cmage
				years = 10
			}
		}
	}
}

#singularity1
magic_ev2.66= {
	title = ev2.66.title
	type = character_event
	desc = ev2.66.desc
	theme = witchcraft
	left_portrait = root
	trigger = {
		is_alive = yes
		any_character_artifact = { has_variable = singularity }
	}
	option = {
		name = ev2.66.a
		trigger_event = {
			id = magic_ev2.67
			days = 3
		}
	}
	option = {
		name = ev2.66.b
		trigger_event = {
			id = magic_ev2.68
			days = { 30 40 }
		}
	}
}
#singularity2a
magic_ev2.67= {
	title = ev2.66.title
	type = character_event
	desc = ev2.67.desc
	theme = witchcraft
	left_portrait = root
	trigger = {
		is_alive = yes
		any_character_artifact = { has_variable = singularity }
	}
	immediate = {
		random_character_artifact = {
			limit = {
				has_variable = singularity
			}
			save_scope_as = sing
		}
		if = {
			limit = {
				is_ai = yes
			}
			give_witch_secret_or_trait_effect = yes
		}
		else = {
			hidden_effect = {
				scope:sing = {
					clear_artifact_modifiers = yes
					add_artifact_modifier = singularity_modifier2a
				}
			}
			
		}
		
	}
	option = {
		name = ev2.67.a
		add_character_flag = sing_end
		if = {
			limit = {
				can_be_power_saturated_trigger = yes
				has_perk = magical_experiments_p1_perk
			}
			gain_standard_ps_effect = yes
		}
	}
	after = {
		scope:sing = {
			remove_variable = singularity_sleeping
		}
		clear_saved_scope = sing
	}
}

#singularity2b
magic_ev2.68= {
	title = ev2.66.title
	type = character_event
	desc = ev2.68.desc
	theme = witchcraft
	left_portrait = root
	trigger = {
		is_alive = yes
		any_character_artifact = { has_variable = singularity }
	}

	option = {
		name = ev2.68.a
		custom_tooltip = ev2.68.a_ct
		trigger_event = {
			id = magic_ev2.69
			days = { 30 40 }
		}
	}

	option = {
		name = ev2.68.b
		custom_tooltip = ev2.68.b_ct
		add_stress = medium_stress_loss
	}
}

#singularity3
magic_ev2.69= {
	title = ev2.66.title
	type = character_event
	desc = ev2.69.desc
	theme = witchcraft
	left_portrait = root
	trigger = {
		is_alive = yes
		any_character_artifact = { has_variable = singularity }
	}
	immediate = {
		random_character_artifact = {
			limit = {
				has_variable = singularity
			}
			save_scope_as = sing
		}
	}
	option = {
		name = ev2.69.a
		custom_tooltip = ev2.68.b_ct
		if = {
			limit = {
				NOR = {
					has_trait = witch
					any_secret = { secret_type = secret_witch }
				}
			}
			give_witch_secret_or_trait_effect = yes
			add_learning_skill = 1
		}
		else_if = {
			limit = {
				OR = {
					has_focus = witch_focus
					has_focus = arcane_focus
				}
			}
			custom_tooltip = ev2.47.a_ct
			hidden_effect = {
				add_magic_lifestyle_perk_points = 1
			}
		}
		else = {
			if = {
				limit = {
					NOT = { has_trait = lifestyle_mystic	}
				}
				add_trait_force_tooltip = lifestyle_mystic
			}
			add_trait_xp = {
				trait = lifestyle_mystic
				value = medium_lifestyle_random_xp_high
			}
			add_learning_skill = 1
		}
		if = {
			limit = {
				can_be_power_saturated_trigger = yes
				has_perk = magical_experiments_p1_perk
			}
			gain_standard_ps_effect = yes
		}
	}

	option = {
		name = ev2.69.b
		
		custom_tooltip = ev2.68.a_ct
		trigger_event = {
			id = magic_ev2.70
			days = { 30 40 }
		}
	}
}

#singularity4
magic_ev2.70= {
	title = ev2.66.title
	type = character_event
	desc = ev2.70.desc
	theme = witchcraft
	left_portrait = root
	trigger = {
		is_alive = yes
		any_character_artifact = { has_variable = singularity }
	}

	option = {
		name = ev2.70.a
		#custom_tooltip = ev2.70.a_ct
		duel = {
			skill = learning
			value = 20
			3 = {
				desc = ev2.70.a2
				compare_modifier = {
					value = scope:duel_value
					multiplier = 1
					min = 0
				}
				send_interface_toast = {
					title=ev2.66.title
					custom_tooltip = ev2.70.a_ct1
				}
				add_character_flag = singularity_solved
				trigger_event = {
					id = magic_ev2.73
					days = { 15 40 }
				}
			}
			3 = {
				desc = ev2.70.a2
				send_interface_toast = {
					title=ev2.66.title
					custom_tooltip = ev2.70.a_ct3
				}
				trigger_event = {
					id = magic_ev2.73
					days = { 15 40 }
				}
			}
			3 = {
				desc = ev2.70.a3
				compare_modifier = {
					value = scope:duel_value
					multiplier = -1
					min = 0
				}
				send_interface_toast = {
					title=ev2.66.title
					custom_tooltip = ev2.70.a_ct3
				}
				trigger_event = {
					id = magic_ev2.67
					days = { 15 40 }
				}
			}
		}
		
	}
}

#sleeps ancient singularity
magic_ev2.71 = {
	hidden = yes
	#type = empty
	scope = none
	trigger = {
		any_living_character = {
			any_character_artifact = {
				has_variable = singularity
				NOT = {
					has_variable = singularity_sleeping
				}
			}
			NOT = {
				has_character_flag = sing_end
			}
		}
	}

	immediate = {
		random_living_character = {
			limit = {
				any_character_artifact = {
					has_variable = singularity
					NOT = {
						has_variable = singularity_sleeping
					}
				}
				NOT = {
					has_character_flag = sing_end
				}
			}
			random = {
				chance = 67
				trigger_event = {
					id = magic_ev2.72
					days = { 1 360 }
				}
			}
		}
	}
}

#sleeps ancient singularity - execution
magic_ev2.72= {
	title = ev2.66.title
	type = character_event
	desc = ev2.72.desc
	theme = witchcraft
	left_portrait = root
	trigger = {
		is_alive = yes
		any_character_artifact = {
			has_variable = singularity
			NOT = {
				has_variable = singularity_sleeping
			}
		}
		NOT = {
			any_living_character = {
				has_character_flag = sing_end
			}
		}
	}
	immediate = {
		random_character_artifact = {
			limit = {
				has_variable = singularity
			}
			save_scope_as = sing
		}
		hidden_effect = {
			scope:sing = {
				clear_artifact_modifiers = yes
				add_artifact_modifier = singularity_modifier1
				set_variable=singularity_sleeping
			}
		}
	}
	option = {
		name = ev2.72.a
	}
	after = {
		hidden_effect = {
			if = {
				limit = {
					any_living_character = {
						has_character_flag = sing_end
					}
				}
				every_living_character = {
					limit = {
						has_character_flag = sing_end
					}
					remove_character_flag = sing_end
				}
			}
		}
		clear_saved_scope = sing
	}
}

#singularity5
magic_ev2.73= {
	title = ev2.66.title
	type = character_event
	#desc = ev2.73.desc
	desc = {
		first_valid = {
			triggered_desc = {
				trigger = {
					has_character_flag = singularity_solved
				}
				desc = ev2.73B.desc
			}
			desc = ev2.73.desc
		}
	}
	theme = witchcraft
	left_portrait = root
	trigger = {
		is_alive = yes
		any_character_artifact = {
			has_variable = singularity
			has_variable = singularity_sleeping
		}
	}
	immediate = {
		random_character_artifact = {
			limit = {
				has_variable = singularity
			}
			save_scope_as = sing
		}
		hidden_effect = {
			scope:sing = {
				clear_artifact_modifiers = yes
				add_artifact_modifier = singularity_modifier5
			}
		}
		
	}
	option = {
		name = ev2.73.a
		add_character_flag = sing_end
		if = {
			limit = {
				has_character_flag = singularity_solved
			}
			custom_tooltip = ev2.73.a_ct
			remove_character_flag = singularity_solved
			add_character_flag = singularity_solved2
		}
	}
	option = {
		name = ev2.73.b
		trigger = {
			has_trait = intellect_good_3
		}
		trait = intellect_good_3
		random_list = {
			4 = {
				add_trait_force_tooltip = demon
				if = {
					limit = {
						NOR = {
							has_trait = source
							has_trait = source2
							has_trait = source3
						}
					}
					add_trait_force_tooltip = source
				}
				
				add_trait_force_tooltip = possessed_1
				hidden_effect = {
					set_immortal_age=25
				}
			}
			4 = {
				trigger = {
					NOR = {
						has_trait = source
						has_trait = source2
						has_trait = source3
					}
				}
				add_trait_force_tooltip = source
			}
			4 = {
				trigger = {
					can_be_power_saturated_trigger = yes
				}
				gain_standard_ps_effect = yes
			}
			4 = {
				trigger = {
					NOT = {
						has_character_modifier = mind_reader_modifier
					}
				}
				add_character_modifier = mind_reader_modifier
			}
			4 = {
				trigger = {
					NOT = {
						has_character_modifier = looked_to_the_future
					}
				}
				add_character_modifier = looked_to_the_future
				add_trait_force_tooltip = possessed_1
			}
		}
		

		add_character_flag = sing_end
		if = {
			limit = {
				has_character_flag = singularity_solved
			}
			custom_tooltip = ev2.73.a_ct
			remove_character_flag = singularity_solved
			add_character_flag = singularity_solved2
		}
	}
	after = {
		scope:sing = {
			remove_variable = singularity_sleeping
		}
		clear_saved_scope = sing
	}
}

#singularity - information for players
magic_ev2.74= {
	title = ev2.74.title
	type = character_event
	desc = ev2.74.desc
	
	theme = witchcraft
	left_portrait = root
	trigger = {
		is_alive = yes
		is_ai = no
	}

	option = {
		name = ev2.74.a
		trigger = {
			NOT = {
				has_trait = archmage
				any_character_artifact = {
					has_variable = singularity
				}
			}
		}
	}
	option = {
		name = ev2.74.b
		trigger = {
			has_trait = archmage
			NOT = {
				any_character_artifact = {
					has_variable = singularity
				}
			}
		}
		add_stress = minor_stress_gain
	}
	option = {
		name = ev2.74.c
		trigger = {
			any_character_artifact = {
				has_variable = singularity
			}
		}
	}
	#after = {
	#	clear_saved_scope = ttile
	#}
}

#pay4intel
magic_ev2.75= {
	title = ev2.75.title
	type = character_event
	desc = ev2.75.desc
	
	theme = witchcraft
	left_portrait = root
	right_portrait = scope:wwitch
	trigger = {
		is_alive = yes
		is_ai = no
		NOR = {
			any_character_artifact = { has_variable = magic1 }
			has_character_flag = know_magic_item_loc
		}
	}
	immediate = {
		hidden_effect = {
			create_character = {
				employer = root
				template = witchy_template
				save_scope_as = wwitch
			}
			scope:wwitch = {
				#add_secret = {
				#	type = secret_witch
				#	target = scope:demon
				#}
				give_witch_secret_or_trait_effect = yes
				add_perk = protective_runes_perk
				add_perk = witch_familiar_perk
				add_perk = oneiromancy_perk
				#add_perk = wisdom_of_nature_perk
				add_perk = love_potions_perk
				add_perk = mistical_insight_perk
				add_perk = evil_eye_perk
				add_perk = magical_senses_perk
				#add_perk = lifestealer_perk
				add_perk = true_witch_perk
			}
		}
		
	}

	option = {
		name = ev2.75.a
		pay_short_term_gold = {
			target = scope:wwitch
			gold = half_demon_gold_value
		}
		custom_tooltip = ev2.75.a_ct
		trigger_event = magic_ev2.76
	}
	option = {
		name = ev2.75.b
		scope:wwitch = {
			move_to_pool = yes
		}
		clear_saved_scope = wwitch
	}
	after = {
		add_character_flag = know_magic_item_loc
	}
}

#payed4intel
magic_ev2.76= {
	title = ev2.75.title
	type = character_event
	desc = ev2.76.desc
	
	theme = witchcraft
	left_portrait = root
	right_portrait = scope:wwitch
	lower_right_portrait = scope:mowner

	immediate = {
		random_living_character = {
			limit = {
				NOT = { this = root }
				any_character_artifact = { has_variable = magic1 }
			}
			save_scope_as = mowner
		}
		scope:mowner = {
			random_character_artifact = {
				limit = {
					has_variable = magic1
				}
				save_scope_as = artiff
			}
		}
	}

	option = {
		name = ev2.76.a
		#add_character_modifier = {
		#	modifier = artifact_hunter
		#	years = 7
		#}
		progress_towards_friend_effect = {
			CHARACTER = scope:mowner
			OPINION = 0
			REASON = friend_random_m1
		}
		scope:wwitch = {
			move_to_pool = yes
		}
		clear_saved_scope = wwitch
		clear_saved_scope = mowner
	}

	option = {
		name = ev9.0.b
		add_stress = 100
		random = {
			chance = 50
			add_character_modifier = {
				modifier = artifact_hunter
				years = 7
			}
			add_personal_artifact_claim = scope:artiff
			set_relation_rival = scope:mowner
		}
		scope:wwitch = {
			move_to_pool = yes
		}
		
	}
	after = {
		clear_saved_scope = wwitch
		clear_saved_scope = mowner
		clear_saved_scope = artiff
	}
}

magic_ev2.77 = {
	hidden = yes
	#type = empty
	scope=none
	#trigger = {
	#	is_ai = yes
	#}

	immediate = {
		scope:ttile.holder = {
			save_scope_as = hholder
		}
		if = {
			limit = {
				scope:hholder = {
					is_ai = yes
					NOR = {
						has_trait = brave
						has_trait = lunatic_1
						has_trait = lunatic_genetic
						has_trait = demon
						#has_trait = zealous
					}
					OR = {
						any_character_war = {
							primary_attacker = scope:hholder
							is_defender = scope:actor
						}
						any_character_war = {
							is_attacker = scope:actor
							primary_defender = scope:hholder
						}
					}
				}
			}
			scope:actor = {
				trigger_event = magic_ev2.78
			}
		}
	}
}

magic_ev2.78 = {
	title = ev2.78.title
	type = character_event
	desc = ev2.78.desc
	
	theme = realm
	left_portrait = root
	right_portrait = scope:hholder

	trigger = {
		is_at_war_with = scope:hholder
	}

	option = {
		name = ev2.78.a
		add_dread = major_dread_gain
		if = {
			limit = {
				any_character_war = {
					primary_attacker = scope:hholder
					is_defender = root
				}
			}
			random_character_war = {
				limit = {
					primary_attacker = scope:hholder
					is_defender = root
				}
				end_war = defender
			}
		}
		else_if = {
			limit = {
				any_character_war = {
					is_attacker = root
					primary_defender = scope:hholder
				}
			}
			random_character_war = {
				limit = {
					is_attacker = root
					primary_defender = scope:hholder
				}
				end_war = attacker
			}
		}
		if = {
			limit = {
				has_trait = grandmaster_coven
				has_trait_xp = {
					trait = grandmaster_coven
					value < 100
				}
			}
			add_trait_xp = {
				trait = grandmaster_coven
				value = 50
			}
		}
	}
}

magic_ev2.79 = {
	hidden = yes
	#type = empty
	scope=none
	trigger = {
		NOT = {
			any_living_character = {
				exists = dynasty
				dynasty = {
					has_variable = astaroth
				}
			}
		}
		NOT = {
			has_game_rule = low_whunters
		}
	}

	immediate = {
		scope:actor = {
			random_vassal = {
				save_scope_as = vvasal
			}
		}
		create_character = {
			employer = scope:vvasal
			name = astaroth_name
			template = astaroth_demon_character
			save_scope_as = asta
		}
		scope:asta = {
			#add_secret = {
			#	type = secret_witch
			#	target = scope:demon
			#}
			give_witch_secret_or_trait_effect = yes
			add_character_flag = astaroth_flag
			give_nickname = astaroth_nickname
			add_perk = protective_runes_perk
			add_perk = magical_senses_perk
			add_perk = combat_spells_p3_perk
			add_perk = truth_is_relative_perk
			add_perk = digging_for_dirt_perk
			add_perk = kidnapper_perk
			add_perk = court_of_shadows_perk
			add_perk = prepared_for_anything_perk
			add_perk = swift_execution_perk
			add_perk = a_job_done_right_perk
			add_perk = twice_schemed_perk
			add_perk = schemer_perk
			add_character_modifier = master_psionic_modifier
			add_character_modifier = mind_reader_modifier
			add_character_modifier = demonic_charm_modifier
			add_character_modifier = strength_ohm_modifier
			gain_standard_ps_effect = yes
			add_character_modifier = looked_to_the_future
			add_character_modifier = preparation_for_strike_modifier
			add_character_modifier = witch_poison_modifier
			add_character_modifier = magic_duelist_modifier
			add_character_flag = special_magic_character
			create_dead_ring_artifact_effect = {
				OWNER = scope:asta
			}
			add_trait_xp = {
				trait = demon
				value = 100
			}
			random_character_artifact = {
				limit = {
					has_variable = magic_ring
				}
				equip_artifact_to_owner_replace = yes
			}
			trigger_event = {
				id = magic_ev2.80
				years = 10
			}
		}
		scope:actor = {
			dynasty = {
				set_variable = astaroth
			}
		}
	}
}

magic_ev2.80 = {
	hidden = yes
	type = character_event
	trigger = {
		is_alive = yes
	}

	immediate = {
		random_ruler = {
			limit = {
				is_ai = no
				any_character_artifact = {
					has_variable=singularity
				}
			}
			save_scope_as = tttarget
		}
		if = {
			limit = {
				exists = scope:tttarget
				NOR = {
					any_scheme = {
						scheme_type = murder
					}
					any_scheme = {
						scheme_type = abduct
					}
				}
			}
			if = {
				limit = {
					is_landed = no
				}
				scope:tttarget = {
					add_visiting_courtier = root
				}
			}
			start_scheme = {
				type = murder
				target = scope:tttarget
			}
		}
		trigger_event = {
			id = magic_ev2.80
			years = { 30 35 }
		}
		clear_saved_scope = tttarget
	}
}

#court mage response - healing
magic_ev2.81= {
	title = ev2.62.title
	type = character_event
	desc = ev2.81.desc
	theme = realm
	left_portrait = root
	right_portrait = scope:cmage

	immediate = {
					if = { limit = { has_trait = ill }
						remove_trait = ill
					}
					if = { limit = { has_trait = pneumonic }
						remove_trait = pneumonic
					}
					if = { limit = { has_trait = great_pox }
						remove_trait = great_pox
					}
					if = { limit = { has_trait = early_great_pox }
						remove_trait = early_great_pox
					}
					if = { limit = { has_trait = lovers_pox }
						remove_trait = lovers_pox
					}
					if = { limit = { has_trait = leper }
						remove_trait = leper
					}
					if = { limit = { has_trait = wounded_1 }
						remove_trait = wounded_1
					}
					if = { limit = { has_trait = wounded_2 }
						remove_trait = wounded_2
					}
					if = { limit = { has_trait = wounded_3 }
						remove_trait = wounded_3
					}
					if = { limit = { has_trait = maimed }
						remove_trait = maimed
					}
					if = { limit = { has_trait = infirm }
						remove_trait = infirm
					}
					if = { limit = { has_trait = incapable }
						remove_trait = incapable
					}
					if = { limit = { has_trait = gout_ridden }
						remove_trait = gout_ridden
					}
					if = { limit = { has_trait = consumption }
						remove_trait = consumption
					}
					if = { limit = { has_trait = cancer }
						remove_trait = cancer
					}
					if = { limit = { has_trait = typhus }
						remove_trait = typhus
					}
					if = { limit = { has_trait = bubonic_plague }
						remove_trait = bubonic_plague
					}
					if = { limit = { has_trait = smallpox }
						remove_trait = smallpox
					}
					if = { limit = { has_trait = sickly }
						remove_trait = sickly
					}
					if = { limit = { has_trait = blind }
						remove_trait = blind
					}
	}

	option = {
		name = ev2.62.a	
	}
}