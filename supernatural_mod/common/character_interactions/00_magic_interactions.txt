cast_curse = {
	
	is_shown = {
		NOT = { scope:recipient = scope:actor }
		scope:actor = {
				has_perk = evil_eye_perk
				is_imprisoned = no
		}
		#scope:recipient = {
		#	NOT = {
		#		has_character_modifier = cursed_modifier
		#	}
		#}
	}
	is_valid_showing_failures_only = {
		scope:actor = {
			custom_description = {
				text = is_incapable_custom
				NOT = { has_trait = incapable }
			}
		}
		scope:actor = {
			custom_description = {
				text = is_on_mage_duel_custom
				NOT = {	has_variable = pclash	}
			}
		}
		scope:recipient = {
			#custom_description = {
			#	text = "cast_curse_custom_desc"
			#	}
			custom_description = {
			text = magic_protection_custom
				#OR = {
				#	AND = {
				#		scope:actor = {
				#			OR = {
				#				any_character_artifact = { has_variable = catalyst }
				#				is_legendary_mage_trigger = yes
				#			}
				#		}
				#		NOR = {
				#			any_character_artifact = { has_variable = magic_ring }
				#			has_character_modifier = amp_modifier
				#		}
				#	}
				#	NOR = {
				#		has_perk = protective_runes_perk
				#		has_trait = demon
				#		#has_character_modifier = cursed_modifier
				#		any_character_artifact = { has_variable = magic_ring }
				#		has_character_modifier = amp_modifier
				#		AND = {
				#			any_parent = { has_perk = protective_runes_perk }
				#			NOT = { is_child_of = scope:actor }
				#		}
				#		AND = {
				#			exists = scope:recipient.liege
				#			scope:recipient.liege = { has_perk = protective_runes_perk }
				#			is_councillor = yes
				#			NOT = { is_councillor_of = scope:actor }
				#		}
				#		AND = {
				#			any_consort = { has_perk = protective_runes_perk }
				#			NOT = { is_consort_of = scope:actor }
				#		}
				#		AND = {
				#			employs_court_position = mage_court_position
				#			any_court_position_holder = {
				#        		type = mage_court_position
				#				has_perk = protective_runes_perk
				#				NOT = { scope:actor = this }
				#			}
				#		}
				#	}
				#}
				has_full_magic_prot_trigger = no
				OR = {
					has_basic_magic_prot_trigger = no
					AND = {
						has_basic_magic_prot_trigger = yes
						scope:actor = {	can_penetrate_basic_magic_prot_trigger = yes	}
					}
				}
			}
		}
	}
	icon = icon_magic
	common_interaction = no
	interface_priority = 90
	popup_on_receive = no
	category = interaction_category_magic
	desc = "cast_curse_desc"
	#prompt = "cast_curse_prompt_text"
	#custom_description="cast_curse_custom_desc"
	#notification_text = cast_curse_notification_text

	cooldown_against_recipient = { years = 5 } 
	cooldown = { years = 2 } 
	ignores_pending_interaction_block = yes
	use_diplomatic_range = no
	#hidden = yes
	
	on_accept = {
		scope:actor = {
			save_scope_as = magic_user
			#add_character_flag = {
			#	flag = magic_user
			#	years = 5
			#}
			#every_courtier_or_guest = {
			#			limit = { has_perk = magical_senses_perk }
			#	trigger_event = magic_ev.4
			#}
			
			#location = {
			#	duchy = {
			#		every_de_jure_county_holder = {
			#			limit = { 
			#				AND = {
			#					NOT = { this = scope:actor }
			#					has_perk = magical_senses_perk
			#				}
			#			}
			#				trigger_event = magic_ev.4
			#		}
			#
			#	}
			#}
			send_message_4_magic_sense_effect = yes
			send_interface_message = {
				type = event_generic_neutral
				title = cast_curse
				desc = "send_interface_message_text"
				left_icon = scope:actor
				right_icon = scope:recipient
				custom_tooltip = use_magic_custom_tooltip
				#tooltip="tooltip0"
				stress_impact = {
					compassionate = medium_stress_impact_gain
					honest = medium_stress_impact_gain
					just = medium_stress_impact_gain
				}
				scope:recipient = {
					trigger_event = magic_ev.3
					if = {
						limit = {
							scope:actor = {
								exists = dynasty
								dynasty = {
									has_dynasty_perk = witchcraft_legacy_4
								}
							}
						}
						custom_tooltip = chance_to_cursed2_custom_tooltip
					}
					else = {
						custom_tooltip = chance_to_cursed_custom_tooltip
					}
					
				}
			}
		}
	}
	
	auto_accept = yes
	ai_potential = {
		NOT = {
			has_trait = compassionate
		}
	}
	
	ai_targets = {
		ai_recipients = neighboring_rulers
		ai_recipients = peer_vassals
		ai_recipients = vassals
		ai_recipients = liege
		ai_recipients = dynasty
		ai_recipients = spouses
		ai_recipients = war_enemies
		ai_recipients = scripted_relations
	}

	ai_frequency = 24

	ai_will_do = {
		base = 0
		
		modifier = {
			add = 100
			scope:recipient = {
				OR = {
					has_relation_rival = scope:actor
					has_relation_nemesis = scope:actor
					#has_relation_potential_rival = scope:actor
					is_at_war_with = scope:actor
				}
			}
		}
		modifier = {
			add = 50
			scope:actor = {
				OR = {
					has_character_modifier = yaga_modifier
					has_character_modifier = yagas_blood_modifier
					has_trait = yaga
				}
				NOT = {
					has_witch_house_trigger = yes
				}
			}
			scope:recipient = {
				NOR = {
					has_character_modifier = yaga_modifier
					has_character_modifier = yagas_blood_modifier
					has_trait = yaga
				}
				has_witch_house_trigger = yes
			}
		}
		modifier = {
			add = -100
			scope:recipient = {
				OR = {
					has_relation_lover = scope:actor
					has_relation_friend = scope:actor
					has_relation_best_friend = scope:actor
					has_relation_soulmate = scope:actor
				}
			}
		}
	}
}

magic_domination = {
	is_shown = {
		NOT = { scope:recipient = scope:actor }
		scope:actor = {
			is_imprisoned = no
			OR = {
				has_perk = mind_control_p6_perk
				AND = {
					has_trait = demon
					has_trait_xp = {
						trait = demon
						value > 49
					}
				}
			}
		}
		scope:recipient = {
			NOR = {
				has_relation_mminion = scope:actor
				has_relation_mmaster = scope:actor
				
			}
		}	
	}
	is_valid_showing_failures_only = {
		scope:actor = {
			custom_description = {
				text = is_incapable_custom
				NOT = { has_trait = incapable }
			}
		}
		scope:actor = {
			custom_description = {
				text = is_on_mage_duel_custom
				NOT = {	has_variable = pclash	}
			}
		}
		scope:recipient = {
			custom_description = {
				text = magic_protection_custom
				has_full_magic_prot_trigger = no
				OR = {
					has_basic_magic_prot_trigger = no
					AND = {
						has_basic_magic_prot_trigger = yes
						scope:actor = {	can_penetrate_basic_magic_prot_trigger = yes	}
					}
				}
			}
		}
		custom_description = {
			text = physical_contact_custom
			has_physical_contanct = yes
		}
		scope:actor = {
			custom_description = {
				text = power_needed_custom
				can_spend_standard_ps_trigger = yes
			}
			#custom_description = {
			#	text = not_war_against
			#	NOT = { is_at_war_with = scope:recipient }
			#}
			custom_description = {
				text = not_in_army_0
				is_in_army = no
			}
			custom_description = {
				text = not_in_travel_0
				OR = {
					location = capital_province
					#is_at_home = yes
					AND = {
						exists = involved_activity
						NOT = {
							has_activity_state = travel
						}
					}
					AND = {
						exists = current_travel_plan
						current_travel_plan = {
							any_entourage_character = {
								this = scope:recipient
							}
						}
					}
					AND = {
						exists = liege
						location = liege.location
						location = scope:recipient.location
						liege.location = liege.capital_province
					}
				}
			}
		}
	}
	icon = icon_magic
	common_interaction = no
	interface_priority = 90
	category = interaction_category_magic

	cooldown_against_recipient = { years = 5 } 
	cooldown = { days = 7 } 
	ignores_pending_interaction_block = yes
	use_diplomatic_range = no
	#hidden = yes
	
	on_accept = {
		scope:actor = {
			save_scope_as = magic_user
			hidden_effect = {
				if = {
					limit = {
						any_character_artifact = {
							has_variable = magic1
						}
						is_ai = no
						any_living_character = {
							has_trait = true_witch
							count < 4
						}
					}
					random = {
						chance = 40
						create_true_witch_effect = yes
					}
				}
			}
			#add_character_flag = {
			#	flag = magic_user
			#	years = 5
			#}
			send_message_4_magic_sense_effect = yes
			#add_gold=-10
			scope:recipient = {
				every_relation = {
					type = mmaster
					remove_relation_mminion = scope:recipient
				}
			}
			set_relation_mminion = scope:recipient
			spend_standard_ps_effect = yes
			#desnt work?-->#remove_magic_sat_effect = yes
			send_interface_message = {
				type = event_generic_neutral
				title = magic_domination
				desc = "send_interface_message_text"
				left_icon = scope:actor
				right_icon = scope:recipient
				custom_tooltip = use_magic_custom_tooltip
				gain_sc_xp1_effect = yes

				stress_impact = {
					compassionate = medium_stress_impact_gain
					honest = medium_stress_impact_gain
					just = medium_stress_impact_gain
				}
				hidden_effect = {
					if = {
						limit = {
							has_hook = scope:recipient
						}
						remove_hook = {
							target = scope:recipient
						}
					}
					scope:recipient = {
						if = {
							limit = {
								has_hook = scope:actor
							}
							remove_hook = {
								target = scope:actor
							}
						}
					}
				}
				add_hook = {
						type = magic_domination_hook
						target = scope:recipient
				}
				metamagic_effect = yes
				if = {
					limit = {
						has_character_flag = better_domination_spell
					}
					scope:recipient = {
						custom_tooltip = mind_control_custom_tooltip
						set_culture_same_as = scope:actor
						set_character_faith = scope:actor.faith
					}
				}
				else = {
					scope:recipient = {
						custom_tooltip = mind_control_custom_tooltip
					}
				}
				
			}
		}
	}
	
	auto_accept = yes
	ai_potential = {
		NOT = {
			has_trait = compassionate
		}
	}
	
	ai_targets = {
		ai_recipients = neighboring_rulers
		ai_recipients = vassals
		ai_recipients = liege
		ai_recipients = courtiers
		ai_recipients = spouses
	}

	ai_frequency = 24

	ai_will_do = {
		base = 0
		
		modifier = {
			add = 40
			scope:recipient = {
				OR = {
					has_relation_rival = scope:actor
					has_relation_nemesis = scope:actor
					has_relation_potential_rival = scope:actor
				}
			}
		}
		modifier = {
			add = 20
			scope:recipient = {
				is_powerful_vassal = yes
			}
		}
		modifier = {
			add = 20
			scope:recipient = {
				opinion = {
					target = scope:actor
					value < -70
				}
			}
		}
		modifier = {
			add = 50
			scope:recipient = {
				is_spouse_of = scope:actor
				NOR = {
					has_relation_lover = scope:actor
					has_relation_soulmate = scope:actor
					has_relation_friend = scope:actor
					has_relation_best_friend = scope:actor
				}
			}
		}
		modifier = {
			add = -100
			scope:recipient = {
				is_ai = no
			}
		}
	}
}

magic_healing = {
	
	is_shown = {
		#NOT = { scope:recipient = scope:actor }
		scope:actor = {
			has_character_flag = healing_spell_flag
			is_imprisoned = no
		}
		scope:recipient = {
			OR = {
				has_trait = ill
				has_trait = pneumonic
				has_trait = great_pox
				has_trait = early_great_pox
				has_trait = lovers_pox
				has_trait = leper
				has_trait = wounded_1
				has_trait = wounded_2
				has_trait = wounded_3
				has_trait = maimed
				has_trait = infirm
				has_trait = incapable
				has_trait = gout_ridden
				has_trait = consumption
				has_trait = cancer
				has_trait = typhus
				has_trait = bubonic_plague
				has_trait = smallpox
				has_trait = sickly
				has_trait = blind
				has_trait = disfigured
				has_character_modifier = chronic_headaches_modifier
				has_character_modifier = infected_wound_modifier
				has_character_modifier = gangrene_modifier
			}
		}	
	}
	is_valid_showing_failures_only = {
		scope:actor = {
			custom_description = {
				text = power_needed_custom
				can_spend_standard_ps_trigger = yes
			}
			custom_description = {
				text = is_incapable_custom
				NOT = { has_trait = incapable }
			}
		}
		scope:actor = {
			custom_description = {
				text = is_on_mage_duel_custom
				NOT = {	has_variable = pclash	}
			}
		}
	}
	icon = icon_magic
	common_interaction = yes
	interface_priority = 90
	category = interaction_category_magic

	cooldown_against_recipient = { years = 2 } 
	cooldown = { months = 6 } 
	ignores_pending_interaction_block = yes
	use_diplomatic_range = no
	#hidden = yes
	
	on_accept = {
		scope:actor = {
			save_scope_as = magic_user
			#add_character_flag = {
			#	flag = magic_user
			#	years = 5
			#}
			send_message_4_magic_sense_effect = yes
			#add_gold=-10
			spend_standard_ps_effect = yes

			send_interface_message = {
				type = event_generic_neutral
				title = magic_healing
				desc = magic_healing_text
				left_icon = scope:actor
				right_icon = scope:recipient
				custom_tooltip = use_magic_custom_tooltip1
				metamagic_effect = yes
				stress_impact = {
					compassionate = medium_stress_impact_loss
				}
				#scope:recipient = {
				#	custom_tooltip = magic_healing_custom_tooltip
				#
				#}
			}
		}
		scope:recipient = {
					
					if = { limit = { has_trait = ill }
						remove_trait = ill
					}
					if = { limit = { has_trait = pneumonic }
						remove_trait = pneumonic
					}
					if = { limit = { has_trait = great_pox }
						remove_trait = great_pox
					}
					if = { limit = { has_trait = early_great_pox }
						remove_trait = early_great_pox
					}
					if = { limit = { has_trait = lovers_pox }
						remove_trait = lovers_pox
					}
					if = { limit = { has_trait = leper }
						remove_trait = leper
					}
					if = { limit = { has_trait = wounded_1 }
						remove_trait = wounded_1
					}
					if = { limit = { has_trait = wounded_2 }
						remove_trait = wounded_2
					}
					if = { limit = { has_trait = wounded_3 }
						remove_trait = wounded_3
					}
					if = { limit = { has_trait = maimed }
						remove_trait = maimed
					}
					if = { limit = { has_trait = infirm }
						remove_trait = infirm
					}
					if = { limit = { has_trait = incapable }
						remove_trait = incapable
					}
					if = { limit = { has_trait = gout_ridden }
						remove_trait = gout_ridden
					}
					if = { limit = { has_trait = consumption }
						remove_trait = consumption
					}
					if = { limit = { has_trait = cancer }
						remove_trait = cancer
					}
					if = { limit = { has_trait = typhus }
						remove_trait = typhus
					}
					if = { limit = { has_trait = bubonic_plague }
						remove_trait = bubonic_plague
					}
					if = { limit = { has_trait = smallpox }
						remove_trait = smallpox
					}
					if = { limit = { has_trait = sickly }
						remove_trait = sickly
					}
					if = { limit = { has_trait = blind }
						remove_trait = blind
					}
					if = {	limit = {	has_trait = disfigured	}
						remove_trait = disfigured
					}
					if = {	limit = {	has_character_modifier = chronic_headaches_modifier	}
						remove_character_modifier = chronic_headaches_modifier
					}
					if = {	limit = {	has_character_modifier = infected_wound_modifier	}
						remove_character_modifier = infected_wound_modifier
					}
					if = {	limit = {	has_character_modifier = gangrene_modifier	}
						remove_character_modifier = gangrene_modifier
					}
		}
	}
	
	auto_accept = yes
	ai_targets = {
		ai_recipients = self
	}

	ai_frequency = 12

	ai_will_do = {
		base = 100
		modifier = {
			add = -100
			scope:actor = {
				has_trait = demon
			}
		}
	}
}


cast_powerfull_curse = {
	
	is_shown = {
		NOT = { scope:recipient = scope:actor }
		scope:actor = {
			OR = {
				has_perk = fate_weaver_p10_perk
				has_trait = demon
				has_trait = yaga
				has_character_flag = powerful_curse_one_time
			}
			is_imprisoned = no
		}
		scope:recipient = {
			NOR = {
				has_relation_mminion = scope:actor
				#has_relation_mmaster = scope:actor
			}
		}	
	}
	is_valid_showing_failures_only = {
		scope:actor = {
			custom_description = {
				text = is_incapable_custom
				NOT = { has_trait = incapable }
			}
		}
		scope:actor = {
			custom_description = {
				text = is_on_mage_duel_custom
				NOT = {	has_variable = pclash	}
			}
		}
		scope:recipient = {
			custom_description = {
				text = magic_protection_custom
				has_full_magic_prot_trigger = no
				OR = {
					has_basic_magic_prot_trigger = no
					AND = {
						has_basic_magic_prot_trigger = yes
						scope:actor = {	can_penetrate_basic_magic_prot_trigger = yes	}
					}
				}
			}
		}
		scope:actor = {
			custom_description = {
				text = power_needed_custom
				OR = {
					can_spend_standard_ps_trigger = yes
					AND = {
						can_spend_standard_ps_trigger = no
						has_trait = yaga
					}
				}
				
			}
		}
	}
	icon = icon_magic
	common_interaction = no
	interface_priority = 90
	popup_on_receive = no
	category = interaction_category_magic

	cooldown_against_recipient = { years = 5 } 
	cooldown = { months = 1 } 
	ignores_pending_interaction_block = yes
	use_diplomatic_range = no
	#hidden = yes
	
	on_accept = {
		scope:actor = {
			save_scope_as = magic_user
			#add_character_flag = {
			#	flag = magic_user
			#	years = 5
			#}
			send_message_4_magic_sense_effect = yes
			scope:recipient = {
				save_scope_as = reci
			}
			hidden_effect = {
				random = {
					chance = 4
					if = {
						limit = {
							NOT = {
								any_courtier_or_guest = {
									has_trait = witch_hunter
								}
							}
						}
						create_character = {
							employer = scope:actor
							template = witch_hunter_character
							save_scope_as = whunter
						}
						scope:whunter = {
							add_perk = protective_runes_perk
							add_perk = magical_senses_perk
						}
					}
				}
				if = {
					limit = {
						has_character_flag = powerful_curse_one_time
					}
					remove_character_flag = powerful_curse_one_time
				}
			}
			
			trigger_event = magic_ev.10
			send_interface_message = {
				type = event_generic_neutral
				title = cast_powerfull_curse
				#desc = "send_interface_message_text"
				left_icon = scope:actor
				right_icon = scope:recipient
				custom_tooltip = use_magic_custom_tooltip
				show_as_tooltip = {
					if = {
						limit = {	NOT = {	has_trait = yaga	}	}
						spend_standard_ps_effect = yes
					}
					gain_sc_xp1_effect = yes
				}
				stress_impact = {
					compassionate = medium_stress_impact_gain
					honest = medium_stress_impact_gain
					just = medium_stress_impact_gain
				}

				scope:recipient = {
					custom_tooltip = cast_powerfull_curse_ct
				}
			}
		}
	}
	
	auto_accept = yes
	ai_potential = {
		NOT = {
			has_trait = compassionate
		}
	}
	
	ai_targets = {
		ai_recipients = neighboring_rulers
		ai_recipients = vassals
		ai_recipients = liege
		ai_recipients = courtiers
		ai_recipients = spouses
		ai_recipients = war_enemies
		ai_recipients = scripted_relations
	}

	ai_frequency = 24

	ai_will_do = {
		base = 0
		
		modifier = {
			add = 90
			scope:recipient = {
				OR = {
					has_relation_rival = scope:actor
					has_relation_nemesis = scope:actor
					#has_relation_potential_rival = scope:actor
					is_at_war_with = scope:actor
				}
			}
		}
		modifier = {
			add = 50
			scope:recipient = {
				opinion = {
					target = scope:actor
					value < -40
				}
			}
		}
		modifier = {
			add = 50
			scope:actor = {
				OR = {
					has_character_modifier = yaga_modifier
					has_character_modifier = yagas_blood_modifier
				}
				NOT = {
					has_witch_house_trigger = yes
				}
			}
			scope:recipient = {
				NOR = {
					has_character_modifier = yaga_modifier
					has_character_modifier = yagas_blood_modifier
				}
				has_witch_house_trigger = yes
			}
		}
		modifier = {
			add = -100
			scope:recipient = {
				OR = {
					has_relation_lover = scope:actor
					has_relation_friend = scope:actor
					has_relation_best_friend = scope:actor
					has_relation_soulmate = scope:actor
				}
			}
		}
	}
}

banish_demon = {
	is_shown = {
		NOT = { scope:recipient = scope:actor }
		scope:actor = {
			any_character_artifact = { has_variable = blackgrimoire }
			is_imprisoned = no
			has_trait = archmage
			
		}
		scope:recipient = {
			has_trait = demon
			NOT = { has_relation_mminion = scope:actor }
		}	
	}
	is_valid_showing_failures_only = {
		scope:actor = {
			custom_description = {
				text = power_needed_custom
				can_spend_standard_ps_trigger = yes
			}
			custom_description = {
				text = is_incapable_custom
				NOT = { has_trait = incapable }
			}
		}
		scope:actor = {
			custom_description = {
				text = is_on_mage_duel_custom
				NOT = {	has_variable = pclash	}
			}
		}
		scope:recipient = {
			custom_description = {
				text = magic_protection_custom
				has_full_magic_prot_trigger = no
			}
		}
	}
	icon = icon_magic
	common_interaction = no
	interface_priority = 90
	category = interaction_category_magic

	cooldown_against_recipient = { years = 5 } 
	cooldown = { months = 1 } 
	ignores_pending_interaction_block = yes
	use_diplomatic_range = no
	popup_on_receive = no
	#hidden = yes
	
	on_accept = {
		scope:actor = {
			save_scope_as = magic_user
			#add_character_flag = {
			#	flag = magic_user
			#	years = 5
			#}
			send_message_4_magic_sense_effect = yes
			scope:recipient = {
				save_scope_as = reci
			}
			
			send_interface_message = {
				type = event_generic_neutral
				title = banish_demon
				#desc = "send_interface_message_text"
				left_icon = scope:actor
				right_icon = scope:recipient
				custom_tooltip = use_magic2_custom_tooltip
				spend_standard_ps_effect = yes
				gain_sc_xp1_effect = yes

				metamagic_effect = yes
				scope:recipient = {
					custom_tooltip = banish_demon_ct
					hidden_effect = {
						death = natural
					}
				}
			}
		}
	}
	
	auto_accept = yes
	ai_potential = {
		NOT = {
			has_trait = compassionate
		}
	}
	
	ai_targets = {
		ai_recipients = neighboring_rulers
		ai_recipients = vassals
		ai_recipients = liege
		ai_recipients = courtiers
		ai_recipients = war_enemies
		ai_recipients = scripted_relations
	}

	ai_frequency = 24

	ai_will_do = {
		base = 0
		
		modifier = {
			add = 100
			scope:recipient = {
				OR = {
					has_relation_rival = scope:actor
					has_relation_nemesis = scope:actor
					#has_relation_potential_rival = scope:actor
					is_at_war_with = scope:actor
				}
			}
		}
	}
}

consume_child = {
	is_shown = {
		NOT = { scope:recipient = scope:actor }
		scope:actor = {
			is_imprisoned = no
			OR = {
				has_trait = cannibal
				any_secret = {
					secret_type = secret_cannibal
				}
			}
			OR = {
				has_trait = witch
				any_secret = {
					secret_type = secret_witch
				}
			}
			
		}
		scope:recipient = {
			age < 16
		}	
	}
	is_valid_showing_failures_only = {
		scope:actor = {
			custom_description = {
				text = is_incapable_custom
				NOT = { has_trait = incapable }
			}
		}
		scope:recipient = {
			custom_description = {
				text = only_specified_child
				OR = {
					is_courtier_of = scope:actor
					has_relation_guardian = scope:actor
					is_imprisoned_by = scope:actor
					is_foreign_court_or_pool_guest_of = scope:actor
				}
			}
			custom_description = {
				text = only_specified_child2
				OR = {
					NOT = {
						is_child_of = scope:actor
					}
					scope:actor = {
						has_trait = sadistic
					}
				}
				
			}
		}
	}
	icon = icon_cann
	common_interaction = yes
	interface_priority = 90
	popup_on_receive = no
	category = interaction_category_magic

	cooldown_against_recipient = { years = 1 } 
	cooldown = { months = 1 } 
	ignores_pending_interaction_block = yes
	use_diplomatic_range = yes
	#hidden = yes
	
	on_accept = {
		scope:actor = {
			hidden_effect = {
				if = {
					limit = {
						NOT = {
							any_courtier_or_guest = {
								has_trait = witch_hunter
							}
						}
					}
					if = {
						limit = {
							is_ai = no
						}
						random = {
							chance = 10
							create_character = {
								employer = scope:actor
								template = witch_hunter_character
								save_scope_as = whunter
							}
							scope:whunter = {
								add_perk = protective_runes_perk
								add_perk = magical_senses_perk
							}
						}
					}
					else = {
						random = {
							chance = 1
							create_character = {
								employer = scope:actor
								template = witch_hunter_character
								save_scope_as = whunter
							}
							scope:whunter = {
								add_perk = protective_runes_perk
								add_perk = magical_senses_perk
							}
						}
					}
				}
				random = {
					chance = 40
					send_message_4_child_missing_effect = yes
				}
			}
			
			send_interface_message = {
				type = event_generic_neutral
				title = consume_child
				left_icon = scope:actor
				right_icon = scope:recipient
				custom_tooltip = absorb_good_traits_ct
				#hidden_effect = {
				#	add_secret = {
				#		type = secret_murder
				#		target = scope:recipient
				#	}
				#}
				if = {
					limit = {
						NOR = {
							has_trait = compassionate
							has_trait = honest
							has_trait = just
						}
					}
					add_stress = minor_stress_loss
				}
				
				stress_impact = {
					compassionate = major_stress_impact_gain
					honest = minor_stress_impact_gain
					just = minor_stress_impact_gain
				}
				if = {
					limit = {
						has_trait = yaga
						is_ai = no
					}
					if = {
						limit = {
							has_character_modifier = yaga_beauty_modifier
						}
						hidden_effect = {
							remove_character_modifier = yaga_beauty_modifier
						}
					}
					add_character_modifier = {
						modifier = yaga_beauty_modifier
						years = 1
					}
				}
				if = {
					limit = {
						OR = {
							has_relation_guardian = scope:recipient
							has_relation_ward = scope:recipient
						}
					}
					if = {
						limit = { NOT = { has_character_flag = dubious_guardian } }
						add_character_flag = dubious_guardian
					}
					else_if = {
						limit = {
							NOT = { has_character_modifier = dubious_guardian_modifier }
						}
						random = {
							chance = 50
							add_character_modifier = {
								modifier = dubious_guardian_modifier
								years = 10
							}
						}
					}
				}
				
				scope:recipient = {
					custom_tooltip = consume_child_ct
					if = {
						limit = {
							num_of_bad_genetic_traits = 0
						}
						scope:actor = {
							add_character_modifier = {
								modifier = ate_good_meal
								years = 3
							}
						}
					}
					hidden_effect = {
						
						random = {
							chance = 50
							#physique
							if = {
								limit = {
									OR = {
										has_trait = physique_good_3
										has_trait = physique_good_2
										has_trait = physique_good_1
									}
									scope:actor = {
										NOT = {
											has_trait = physique_good_3
										}
									}
								}
								scope:actor = {
									if = {
										limit = {
											has_trait = physique_bad_3
										}
										remove_trait = physique_bad_3
										add_trait = physique_bad_2
									}
									else_if = {
										limit = {
											has_trait = physique_bad_2
										}
										remove_trait = physique_bad_2
										add_trait = physique_bad_1
									}
									else_if = {
										limit = {
											has_trait = physique_bad_1
										}
										remove_trait = physique_bad_1
									}
									else_if = {
										limit = {
											has_trait = physique_good_1
											scope:recipient = {
												OR = {
													has_trait = physique_good_3
													has_trait = physique_good_2
												}
												
											}
										}
										remove_trait = physique_good_1
										add_trait = physique_good_2
									}
									else_if = {
										limit = {
											has_trait = physique_good_2
											scope:recipient = {
												has_trait = physique_good_3
											}
										}
										remove_trait = physique_good_2
										add_trait = physique_good_3
									}
									else = {
										add_trait = physique_good_1
									}
								}	
							}
						}
						random = {
							chance = 50
							#beuty
							if = {
								limit = {
									OR = {
										has_trait = beauty_good_3
										has_trait = beauty_good_2
										has_trait = beauty_good_1
									}
									scope:actor = {
										NOT = {
											has_trait = beauty_good_3
										}
									}
								}
								scope:actor = {
									if = {
										limit = {
											has_trait = beauty_bad_3
										}
										remove_trait = beauty_bad_3
										add_trait = beauty_bad_2
									}
									else_if = {
										limit = {
											has_trait = beauty_bad_2
										}
										remove_trait = beauty_bad_2
										add_trait = beauty_bad_1
									}
									else_if = {
										limit = {
											has_trait = beauty_bad_1
										}
										remove_trait = beauty_bad_1
									}
									else_if = {
										limit = {
											has_trait = beauty_good_1
											scope:recipient = {
												OR = {
													has_trait = beauty_good_3
													has_trait = beauty_good_2
												}
												
											}
										}
										remove_trait = beauty_good_1
										add_trait = beauty_good_2
									}
									else_if = {
										limit = {
											has_trait = beauty_good_2
											scope:recipient = {
												has_trait = beauty_good_3
											}
										}
										remove_trait = beauty_good_2
										add_trait = beauty_good_3
									}
									else = {
										add_trait = beauty_good_1
									}
								}	
							}
						}
						random = {
							chance = 50
							#intellect
							if = {
								limit = {
									OR = {
										has_trait = intellect_good_3
										has_trait = intellect_good_2
										has_trait = intellect_good_1
									}
									scope:actor = {
										NOT = {
											has_trait = intellect_good_3
										}
									}
								}
								scope:actor = {
									if = {
										limit = {
											has_trait = intellect_bad_3
										}
										remove_trait = intellect_bad_3
										add_trait = intellect_bad_2
									}
									else_if = {
										limit = {
											has_trait = intellect_bad_2
										}
										remove_trait = intellect_bad_2
										add_trait = intellect_bad_1
									}
									else_if = {
										limit = {
											has_trait = intellect_bad_1
										}
										remove_trait = intellect_bad_1
									}
									else_if = {
										limit = {
											has_trait = intellect_good_1
											scope:recipient = {
												OR = {
													has_trait = intellect_good_3
													has_trait = intellect_good_2
												}
												
											}
										}
										remove_trait = intellect_good_1
										add_trait = intellect_good_2
									}
									else_if = {
										limit = {
											has_trait = intellect_good_2
											scope:recipient = {
												has_trait = intellect_good_3
											}
										}
										remove_trait = intellect_good_2
										add_trait = intellect_good_3
									}
									else = {
										add_trait = intellect_good_1
									}
								}	
							}
						}
							
							
						if = {
							limit = {
								has_trait = pure_blooded
							}
							scope:actor = {
								random = {
									chance = 75
									random_list = {
										10 = {
											trigger = {
												NOT = {
													has_trait = pure_blooded
												}
											}
											add_trait = pure_blooded
										}
										10 = {
											random_list = {
												10 = {
													send_interface_toast = {
														title = ic_pure_meal
														add_diplomacy_skill = 1
													}
												}
												10 = {
													send_interface_toast = {
														title = ic_pure_meal
														add_martial_skill = 1
													}
												}
												10 = {
													send_interface_toast = {
														title = ic_pure_meal
														add_stewardship_skill = 1
													}
												}
												10 = {
													send_interface_toast = {
														title = ic_pure_meal
														add_intrigue_skill = 1
													}
												}
												10 = {
													send_interface_toast = {
														title = ic_pure_meal
														add_learning_skill = 1
													}
												}
											}
										}
									}
								}
								
							}
						}
						if = {
							limit = {
								has_trait = source
								scope:actor = {
									NOR = {
										has_trait = source
										has_trait = source2
										has_trait = source3
									}
								}
							}
							scope:actor = {
								random = {
									chance = 50
									add_trait = source
								}
							}
						}
	
						if = {
							limit = {
								has_trait = strong
								scope:actor = {
									NOT = {
										has_trait = strong
									}
								}
							}
							scope:actor = {
								random = {
									chance = 50
									if = {
										limit = {
											has_trait = weak
										}
										remove_trait = weak
									}
									else = {
										add_trait = strong
									}
									
								}
							}
						}

						if = {
							limit = {
								has_trait = fecund
								scope:actor = {
									NOT = {
										has_trait = fecund
									}
								}
							}
							scope:actor = {
								random = {
									chance = 50
									if = {
										limit = {
											has_trait = infertile
										}
										remove_trait = infertile
									}
									else = {
										add_trait = fecund
									}
								}
							}
						}

						if = {
							limit = {
								has_trait = shrewd
								scope:actor = {
									NOT = {
										has_trait = shrewd
									}
								}
							}
							scope:actor = {
								random = {
									chance = 50
									if = {
										limit = {
											has_trait = dull
										}
										remove_trait = dull
									}
									else = {
										add_trait = shrewd
									}
								}
							}
						}
					}
					
					if = {
						limit = {
							can_spend_standard_ps_trigger = yes
							scope:actor = {
								can_be_power_saturated_trigger = yes
							}
						}
						scope:actor = {
							gain_source_ps_effect = yes
						}
					}

					
					
					hidden_effect = {
						death = {
							killer = scope:actor
							#death_reason = death_eaten
							death_reason = death_murder
						}
					}
					
					
				}
				hidden_effect = {
					add_secret = {
						type = secret_murder
						target = scope:recipient
					}
				}
			}
		}
	}
	
	auto_accept = yes
	ai_potential = {
		NOR = {
			has_trait = compassionate
			has_trait = forgiving
			has_trait = temperate
		}
	}
	
	ai_targets = {
		ai_recipients = courtiers
		ai_recipients = prisoners
		ai_recipients = guests
		ai_recipients = scripted_relations
	}

	ai_frequency = 24

	ai_will_do = {
		base = 50
		modifier = {
			add = -150
			scope:recipient = {
				is_primary_heir_of = scope:actor
			}
		}
		modifier = {
			add = 30
			has_character_modifier = yaga_modifier
		}
		modifier = {
			add = -250
			has_character_modifier = yaga_modifier
			scope:recipient = {
				has_trait = source2
			}
		}
		modifier = {
			add = -250
			has_trait = source2
			scope:recipient = {
				has_trait = source2
			}
		}
	}
}


use_singularity = {
	target_type = title
	target_filter = recipient_domain_titles
	is_shown = {
		NOT = { scope:recipient = scope:actor }
		scope:actor = {
			any_character_artifact = {
				has_variable = singularity
				NOT = {
					has_variable = singularity_sleeping
				}
			}
			is_imprisoned = no
			has_character_flag = singularity_solved2
		}
		scope:recipient = {
			is_landed = yes
		}	
	}
	is_valid_showing_failures_only = {
		scope:actor = {
			custom_description = {
				text = power_needed_custom
				can_spend_standard_ps_trigger = yes
			}
			custom_description = {
				text = is_incapable_custom
				NOT = { has_trait = incapable }
			}
			custom_description = {
				text = is_on_mage_duel_custom
				NOT = {	has_variable = pclash	}
			}
		}
	}
	icon = icon_magic
	common_interaction = no
	interface_priority = 90
	category = interaction_category_magic

	cooldown_against_recipient = { months = 6 } 
	cooldown = { months = 6 } 
	ignores_pending_interaction_block = yes
	use_diplomatic_range = no
	#hidden = yes
	can_be_picked_title = {
		scope:target = {
			is_leased_out = no
			tier = tier_county
		}
	}
	on_accept = {
		scope:target = {
			#change_development_progress = major_development_progress_loss
			change_development_level = -50
			save_scope_as = ttile
		}
		scope:actor = {
			add_dread = 50
			gain_sc_xp1_effect = yes
		}
		
		custom_tooltip = use_singularity_ct
		scope:target.title_province = {
			add_province_modifier = {
				modifier = magical_radiation_modifier
				years = 50
			}
		}
		custom_tooltip = use_singularity_ct2
		
		hidden_effect = {
			scope:actor = {
				save_scope_as = magic_user
				send_message_4all_magic_sense_effect = yes
				spend_standard_ps_effect = yes
			}
			every_living_character = {
				limit = {
					exists = location
					location = scope:target.title_province
					has_full_magic_prot_trigger = no
				}
				random_list = {
					80 = {
						death = {
							death_reason = death_murder
							killer = scope:actor
						}
					}
					5 = {
						add_trait = incapable
					}
					5 = {
						add_trait = cancer
						add_trait = wounded_2
						add_trait = infertile
					}
					3 = {
						add_trait = cancer
						add_trait = wounded_1
						add_trait = disfigured
						add_trait = infertile
					}
					2 = {
						add_trait = cancer
						add_trait = wounded_1
						add_trait = lunatic_1
						add_trait = infertile
					}
					5 = {
						add_trait = cancer
						add_trait = wounded_1
						add_trait = blind
						add_trait = infertile
					}
				}
				
			}
			every_living_character = {
				limit = {
					is_ai = no
				}
				trigger_event = {
					id = magic_ev2.74
					days = { 2 6 }
				}
			}
			
			scope:actor = {
				random = {
					chance = 10
					if = {
						limit = {
							NOT = {
								any_courtier_or_guest = {
									has_trait = witch_hunter
								}
							}
						}
						create_character = {
							employer = scope:actor
							template = witch_hunter_character
							save_scope_as = whunter
						}
						scope:whunter = {
							add_perk = protective_runes_perk
							add_perk = magical_senses_perk
						}
					}
				}
				metamagic_effect = yes
			}
			trigger_event = {
				id = magic_ev2.77
				days = { 6 12 }
			}
			random = {
				chance = 40
				trigger_event = {
					id = magic_ev2.79
					days = { 21 24 }
				}
			}
		}
		
	}
	
	auto_accept = yes
	ai_potential = {
		NOT = {
			has_trait = compassionate
		}
	}
	
	ai_targets = {
		ai_recipients = neighboring_rulers
		ai_recipients = war_enemies
		ai_recipients = scripted_relations
	}

	ai_frequency = 60

	ai_will_do = {
		base = 0
		
		modifier = {
			add = 50
			scope:recipient = {
				OR = {
					has_relation_rival = scope:actor
					has_relation_nemesis = scope:actor
					#has_relation_potential_rival = scope:actor
					is_at_war_with = scope:actor
				}
			}
		}
	}
}

death_wish = {
	is_shown = {
		NOT = { scope:recipient = scope:actor }
		scope:actor = {
			has_character_flag = death_wish
			is_imprisoned = no
		}
		scope:recipient = {
			NOT = { has_relation_mminion = scope:actor }
		}	
	}
	is_valid_showing_failures_only = {
		scope:actor = {
			custom_description = {
				text = is_incapable_custom
				NOT = { has_trait = incapable }
			}
			custom_description = {
				text = is_on_mage_duel_custom
				NOT = {	has_variable = pclash	}
			}
		}
		scope:recipient = {
			custom_description = {
				text = magic_protection_custom
				NOR = {
					any_equipped_character_artifact = { has_variable = dragon_scales }
					has_character_modifier = samael_blessing
					has_character_modifier = amp_modifier
				}
			}
		}
		scope:recipient = {
			custom_description = {
				text = must_be_mortal_custom
				NOR = {
					is_immortal = yes
					has_trait = demon
					has_trait = yaga
					AND = {
						has_trait = archmage
						has_trait_xp = {
							trait = archmage
							track = secret_knowledge
							value > 99
						}
					}
				}
			}
		}
	}
	icon = icon_magic
	common_interaction = no
	interface_priority = 90
	popup_on_receive = no
	category = interaction_category_magic

	cooldown_against_recipient = { years = 1 } 
	cooldown = { months = 1 } 
	ignores_pending_interaction_block = yes
	use_diplomatic_range = no
	#hidden = yes
	
	on_accept = {
		scope:actor = {
			save_scope_as = magic_user
			#add_character_flag = {
			#	flag = magic_user
			#	years = 5
			#}
			send_message_4_magic_sense_effect = yes
			scope:recipient = {
				save_scope_as = reci
			}
			
			send_interface_message = {
				type = event_generic_neutral
				title = death_wish_title
				#desc = "send_interface_message_text"
				left_icon = scope:actor
				right_icon = scope:recipient
				custom_tooltip = use_magic_custom_tooltip
				custom_tooltip = death_wish_ct
				if = {
					limit = {
						scope:recipient = {
							has_basic_magic_prot_trigger = yes
						}
					}
					custom_tooltip = bypass_magic_prot_custom_tooltip
				}
				gain_sc_xp1_effect = yes
				remove_character_flag = death_wish
				scope:recipient = {
					death = {
						death_reason = death_murder
						killer = scope:actor
					}
				}
			}
		}
	}
	
	auto_accept = yes
	ai_potential = {
		NOT = {
			has_trait = compassionate
		}
	}
	
	ai_targets = {
		ai_recipients = neighboring_rulers
		ai_recipients = vassals
		ai_recipients = liege
		ai_recipients = courtiers
		ai_recipients = war_enemies
		ai_recipients = scripted_relations
	}

	ai_frequency = 24

	ai_will_do = {
		base = 0
		
		modifier = {
			add = 80
			scope:recipient = {
				OR = {
					has_relation_rival = scope:actor
					has_relation_nemesis = scope:actor
					#has_relation_potential_rival = scope:actor
					is_at_war_with = scope:actor
				}
			}
		}
	}
}


teach_sorcery = {
	
	is_shown = {
		NOT = { scope:recipient = scope:actor }
		scope:actor = {
			has_trait = archmage
			is_imprisoned = no
		}
		scope:recipient = {
			is_adult = yes
			NOR = {
				has_trait = demon
				has_trait = witch_hunter
			}
		}	
	}
	is_valid_showing_failures_only = {
		scope:actor = {
			custom_description = {
				text = is_incapable_custom
				NOT = { has_trait = incapable }
			}
		}
		scope:recipient = {
			#custom_description = {
			#	text = "cast_curse_custom_desc"
			#	}
			custom_description = {
				text = must_be_witch_custom
				OR = {
					has_trait = witch
					has_trait = true_witch
					any_secret = {
						secret_type = secret_witch
						is_known_by = scope:actor
					}
				}
			}
			custom_description = {
				text = is_sorcer_custom
				NOR = {
					has_focus = arcane_focus
					has_trait = archmage
					has_character_flag = start_sorcery_training
					has_perk = magical_experiments_p1_perk
				}
			}
		}
	}
	icon = icon_learning
	common_interaction = yes
	interface_priority = 90
	category = interaction_category_magic
	desc = teach_sorcery_desc
	#prompt = "cast_curse_prompt_text"
	#custom_description="cast_curse_custom_desc"
	#notification_text = cast_curse_notification_text

	cooldown_against_recipient = { years = 20 } 
	cooldown = { years = 20 } 
	ignores_pending_interaction_block = yes
	use_diplomatic_range = yes
	#hidden = yes
	
	on_accept = {
		scope:actor = {
			
			send_interface_message = {
				type = event_generic_neutral
				title = teach_sorcery
				desc = "send_interface_message_text"
				left_icon = scope:actor
				right_icon = scope:recipient
				custom_tooltip = teach_sorcery_custom_tooltip
				custom_tooltip =  teach_sorcery_custom_tooltip3
				#tooltip="tooltip0"
				stress_impact = {
					arrogant = minor_stress_impact_gain
					paranoid = major_stress_impact_gain
					lazy = medium_stress_impact_gain
					trusting = minor_stress_impact_loss
				}
				scope:recipient = {
					trigger_event = magic_ev3.10
					custom_tooltip = teach_sorcery_custom_tooltip2
				}
			}
		}
	}
	
	auto_accept = yes
	ai_potential = {
		NOT = {
			has_trait = paranoid
			has_trait = lazy
		}
	}
	
	ai_targets = {
		ai_recipients = children
		ai_recipients = scripted_relations
	}

	ai_frequency = 24

	ai_will_do = {
		base = -30
		
		modifier = {
			add = 80
			scope:recipient = {
				OR = {
					has_relation_friend = scope:actor
					has_relation_best_friend = scope:actor
					has_relation_soulmate = scope:actor
					is_heir_of = scope:actor
				}
			}
		}
		modifier = {
			add = 10
			scope:recipient = {
				has_trait = lifestyle_mystic
			}
		}
		modifier = {
			add = 20
			scope:recipient = {
				OR = {
					has_trait = shrewd
					has_trait = intellect_good_1
					has_trait = intellect_good_2
					has_trait = intellect_good_3
				}
			}
		}
		modifier = {
			add = -50
			scope:actor = {
				OR = {
					has_trait = paranoid
					has_trait = lazy
				}
			}
		}
	}
}

witch_trial = {
	is_shown = {
		NOT = { scope:recipient = scope:actor }
		scope:actor = {
				is_adult = yes
				has_trait = witch_hunter
				#has_trait_xp = {
				#	trait = supernatural_hunter
				#	track = witch_hunting
				#	value > 29
				#}
				is_imprisoned = no
		}
		scope:recipient = {
			is_adult = yes
			is_imprisoned_by = scope:actor
		}	
	}
	#is_valid_showing_failures_only = {
	#	
	#}
	icon = torture_interaction
	common_interaction = yes
	interface_priority = 90
	category = interaction_category_prison
	desc = witch_trial_desc
	#prompt = "cast_curse_prompt_text"
	#custom_description="cast_curse_custom_desc"
	#notification_text = cast_curse_notification_text

	cooldown_against_recipient = { days = 7 } 
	cooldown = { days = 7 } 
	ignores_pending_interaction_block = yes
	use_diplomatic_range = yes
	#hidden = yes
	
	on_accept = {
		scope:actor = {
			
			send_interface_message = {
				type = event_generic_neutral
				title = witch_trial
				desc = "send_interface_message_text"
				left_icon = scope:actor
				right_icon = scope:recipient
				custom_tooltip = witch_trial_ct
				custom_tooltip = witch_trial_ct3
				#tooltip="tooltip0"
				stress_impact = {
					compassionate = minor_stress_impact_gain
				}
				scope:recipient = {
					custom_tooltip = witch_trial_ct2
				}
				trigger_event = magic_ev3.54
			}
		}
	}
	
	auto_accept = yes
}

stop_the_witch = {
	is_shown = {
		NOT = { scope:recipient = scope:actor }
		scope:actor = {
				is_ruler = yes
				is_adult = yes
				has_trait = witch_hunter
				has_trait_xp = {
					trait = supernatural_hunter
					track = witch_hunting
					value > 29
				}
				is_imprisoned = no
		}
		scope:recipient = {
			is_adult = yes
			is_imprisoned = no
			OR = {
				has_trait = witch
				has_trait = true_witch
				has_trait = archmage
				has_trait = demon
				has_focus = witch_focus
				has_focus = arcane_focus
				any_secret = {
					secret_type = secret_witch
					is_known_by = scope:actor
				}
			}
		}	
	}
	is_valid_showing_failures_only = {
		scope:recipient = {
			custom_description = {
				text = has_hook_on_you_custom
				NOT = { has_hook = scope:actor }
			}
		}
	}
	icon = torture_interaction
	common_interaction = yes
	interface_priority = 90
	popup_on_receive = no
	category = interaction_category_hostile
	desc = stop_the_witch_desc
	#cooldown_against_recipient = { years = 4 } 
	#cooldown = { years = 4 } 

	cooldown_against_recipient = { years = 2 } 
	cooldown = { years = 2 } 
	ignores_pending_interaction_block = yes
	use_diplomatic_range = yes
	
	on_accept = {
		scope:actor = {
			
			send_interface_message = {
				type = event_generic_neutral
				title = stop_the_witch
				desc = "send_interface_message_text"
				left_icon = scope:actor
				right_icon = scope:recipient
				custom_tooltip = stop_the_witch_ct
				#custom_tooltip = witch_trial_ct3
				#tooltip="tooltip0"
				stress_impact = {
					compassionate = minor_stress_impact_gain
				}
				scope:recipient = {
					custom_tooltip = stop_the_witch_ct2
				}
				if = {
					limit = {
						scope:recipient = {
							is_landed = yes
						}
					}
					trigger_event = {
						id = magic_ev4.10
						#days = { 2 5 }
					}
				}
				else = {
					trigger_event = {
						id = magic_ev4.2
						#days = { 2 4 }
					}
				}
			}
		}
	}
	
	auto_accept = yes
}

fed_dark_blade_interaction = {
	is_shown = {
		NOT = { scope:recipient = scope:actor }
		scope:actor = {	any_equipped_character_artifact = {	has_variable = dark_blade	}	is_imprisoned = no	}
		scope:recipient = {	is_imprisoned_by = scope:actor	}
	}
	is_valid_showing_failures_only = {
		custom_description = {
			text = is_on_mage_duel_custom
			scope:actor = {
				NOT = {	has_variable = pclash	}
			}
		}	
	}
	icon = icon_magic
	common_interaction = no
	interface_priority = 90
	popup_on_receive = no
	category = interaction_category_hostile
	desc = fed_dark_blade_interaction_desc
	cooldown_against_recipient = { months = 1 } 
	cooldown = { months = 1 } 

	#cooldown_against_recipient = { days = 1 } 
	#cooldown = { days = 1 } 
	ignores_pending_interaction_block = yes
	use_diplomatic_range = yes
	
	on_accept = {
		scope:actor = {
			send_interface_message = {
				type = event_generic_neutral
				title = fed_dark_blade_interaction
				left_icon = scope:actor
				right_icon = scope:recipient
				custom_tooltip = fed_dark_blade_interaction_ct
				custom_tooltip = use_magic_custom_tooltip
				send_interface_toast = {
					title=dark_blade_fed
					custom_tooltip = dark_blade_fed_ct
					if = {
						limit = {
							can_be_power_saturated_trigger = yes
						}
						gain_standard_ps_effect = yes
					}
				}
				
				#custom_tooltip = witch_trial_ct3
				#tooltip="tooltip0"
				stress_impact = {
					compassionate = major_stress_impact_gain
				}
				scope:recipient = {
					death = {
						death_reason = death_murder
						killer = scope:actor
					}
				}
			}
			dark_blade_grows_stronger = yes
		}
	}
	
	auto_accept = yes
}

demand_submission_cgm_interaction = {
	is_shown = {
		NOT = { scope:recipient = scope:actor }
		scope:actor = {	
			is_imprisoned = no
			is_adult = yes
			exists = house
			has_trait = grandmaster_coven
		}
		scope:recipient = {
			is_imprisoned = no
			is_adult = yes
			OR = {
				has_trait = witch
				any_secret = {
					secret_type = secret_witch
					is_known_by = scope:actor
				}
			}
			NOT = {
				has_trait = demon
			}
		}
		OR = {
			AND = {
				scope:actor = {	
					has_trait_xp = {
						trait = grandmaster_coven
						value > 29
					}
				}
				scope:recipient = {	
					exists = house
					house = scope:actor.house
				}
			}
			AND = {
				scope:actor = {	
					has_trait_xp = {
						trait = grandmaster_coven
						value > 99
					}
					OR = {
						any_vassal_or_below = {
							this = scope:recipient
						}
						any_vassal_or_below = {
							any_courtier_or_guest = {
								this = scope:recipient
							}
						}
						any_courtier_or_guest = {
							this = scope:recipient
						}
					}
				}
				scope:recipient = {	
					OR = {
						AND = {
							exists = house
							house = {
								NOT = {
									has_house_modifier = witch_coven
								}
							}
						}
						is_lowborn = yes
					}
				}
			}
		}
	}
	#is_valid_showing_failures_only = {
	#	
	#}
	icon = icon_grandmaster_coven
	ai_maybe = yes
	ai_min_reply_days = 1
	ai_max_reply_days = 1
	common_interaction = yes
	interface_priority = 100
	category = interaction_category_diplomacy
	desc = demand_submission_cgm_interaction_desc
	greeting = negative
	notification_text = DEMAND_SUBMISSION_PROPOSAL
	cooldown_against_recipient = { years = 20 } 
	cooldown = { months = 6 }
	can_send_despite_rejection = yes
	popup_on_receive = yes
	pause_on_receive = yes


	#answer_accept_key = SEND_GIFT_ACCEPT
	#answer_reject_key = SEND_GIFT_REJECT
	
	#pre_answer_maybe_key = ANSWER_MIGHT_SUCCEED
	#pre_answer_no_key = ANSWER_CANT_SUCCEED
	#pre_answer_yes_key = ANSWER_WILL_SUCCEED
	#pre_answer_maybe_breakdown_key = ANSWER_SUM_CHANCE

	use_diplomatic_range = yes
	#send_options_exclusive = no
	#on_decline_summary = imprison_decline_summary
	
	on_accept = {
		scope:actor = {
			hidden_effect = {
				if = {
					limit = {
						has_hook = scope:recipient
					}
					remove_hook = {
						target = scope:recipient
					}
				}
			}
			send_interface_message = {
				type = event_generic_neutral
				title = demand_submission_cgm_interaction
				left_icon = scope:actor
				right_icon = scope:recipient
				add_hook = {
					type = loyalty_hook
					target = scope:recipient
				}
				add_trait_xp = {
					trait = grandmaster_coven
					value = 5
				}
				
				scope:recipient = {
					add_opinion = {
						target = scope:actor
						modifier = disgusted_opinion
						opinion = -5
					}
					if = {
						limit = {
							NOT = {	faith = scope:actor.faith	}
						}
						set_character_faith_with_conversion = scope:actor.faith
					}
					if = {
						limit = {
							is_independent_ruler = yes
							highest_held_title_tier < scope:actor.highest_held_title_tier
						}
						create_title_and_vassal_change = {
							type = swear_fealty
							save_scope_as = change
						}
						change_liege = {
							liege = scope:actor
							change = scope:change
						}
						resolve_title_and_vassal_change = scope:change
					}
				}
			}
		}
	}
	on_decline = {
		scope:actor = {
			send_interface_message = {
				type = event_generic_neutral
				title = demand_submission_cgm_interaction
				left_icon = scope:actor
				right_icon = scope:recipient
				#add_opinion = {
				#	target = scope:recipient
				#	modifier = disgusted_opinion
				#	opinion = -30
				#}
				if = {
					limit = {
						has_trait_xp = {
							trait = grandmaster_coven
							value > 4
						}
					}
					add_trait_xp = {
						trait = grandmaster_coven
						value = -5
					}
				}
				add_opinion = {
					target = scope:recipient
					modifier = treasonous_imprison_refusal
					#opinion = -30
				}
				
				scope:recipient = {
					add_opinion = {
						target = scope:actor
						modifier = disgusted_opinion
						opinion = -30
					}
				}
			}
		}
	}
	
	ai_accept = {
		base = 0
		modifier = {
			add = {
				value = scope:actor.diplomacy
				multiply = 3
			}
			desc = DS_DIPLOMACY_ACTOR
		}
		modifier = {
			add = -50
			scope:recipient = {
				has_trait = arrogant
			}
			desc = DS_IS_ARROGANT
		}
		modifier = {
			add = 20
			scope:recipient = {
				has_trait = craven
			}
			desc = DS_IS_CRAVEN
		}
		opinion_modifier = { # Opinion Factor
			who = scope:recipient
			opinion_target = scope:actor
			multiplier = 0.5
			desc = AI_OPINION_REASON
		}
		modifier = {
			add = 20
			scope:actor = {
				any_vassal_or_below = { this = scope:recipient }
			}
			desc = DS_IS_VASSAL
		}
		modifier = {
			add = 50
			scope:actor = {
				any_courtier_or_guest = { this = scope:recipient }
			}
			desc = DS_IS_VASSAL
		}
		modifier = {
			add = 20
			scope:recipient = {
				is_lowborn = yes
			}
			desc = DS_I_AM_NOBODY
		}
		modifier = {
			add = 20
			scope:actor = {
				has_trait_xp = {
					trait = grandmaster_coven
					value > 99
				}
			}
			desc = DS_HIGH_AUTH
		}
		modifier = {
			add = -200
			scope:actor = {
				OR = {
					has_relation_rival = scope:recipient
					has_relation_nemesis = scope:recipient
				}
			}
			desc = DS_YOUR_RIVAL
		}
		modifier = {
			add = intimidated_halved_reason_value
			scope:recipient = {
				target_is_liege_or_above = scope:actor
				has_dread_level_towards = {
					target = scope:actor
					level = 1
				}
			}
			desc = INTIMIDATED_REASON
		}
		modifier = {
			add = intimidated_external_reason_value
			scope:recipient = {
				NOT = { target_is_liege_or_above = scope:actor }
				has_dread_level_towards = {
					target = scope:actor
					level = 1
				}
			}
			desc = INTIMIDATED_REASON
		}
	}
	ai_targets = {
		ai_recipients = vassals
		chance = 0.5
	}
	ai_targets = {
		ai_recipients = family
		chance = 0.25
	}
	ai_targets = {
		ai_recipients = courtiers
		chance = 0.25
	}
	ai_frequency = 24
	ai_will_do = {
		base = 50
	}
	auto_accept = no
}

send_agent_cgm_interaction = {
	is_shown = {
		NOT = { scope:recipient = scope:actor }
		scope:actor = {	
			is_imprisoned = no
			is_adult = yes
			exists = house
			has_trait = grandmaster_coven
			has_trait_xp = {
				trait = grandmaster_coven
				value > 64
			}
		}
		scope:recipient = {	
			is_ruler = yes
			is_landed = yes
		}
	}
	#is_valid_showing_failures_only = {
	#	
	#}
	icon = icon_grandmaster_coven
	common_interaction = no
	interface_priority = 90
	popup_on_receive = no
	category = interaction_category_hostile
	desc = send_agent_cgm_interaction_desc
	cooldown_against_recipient = { years = 2 } 
	cooldown = { years = 2 } 

	#cooldown_against_recipient = { days = 1 } 
	#cooldown = { days = 1 } 
	ignores_pending_interaction_block = yes
	use_diplomatic_range = yes
	
	on_accept = {
		scope:actor = {
			send_interface_message = {
				type = event_generic_neutral
				title = send_agent_cgm_interaction
				left_icon = scope:actor
				right_icon = scope:recipient
				custom_tooltip = send_agent_cgm_interaction_ct
				custom_tooltip = send_agent_cgm_interaction_ct2
				if = {
					limit = {
						scope:send_agent_cgm_secrets = yes
					}
					custom_tooltip = send_agent_cgm_interaction_ct4
				}
				else_if = {
					limit = {
						scope:send_agent_cgm_magic_item = yes
					}
					custom_tooltip = send_agent_cgm_interaction_ct6
				}
				
				scope:recipient = {
					custom_tooltip = send_agent_cgm_interaction_ct3
					if = {
						limit = {
							scope:send_agent_cgm_sow_dis = yes
						}
						hidden_effect = {
							capital_county = {
								add_county_modifier = {
									modifier = medium_investment_in_revolt_modifier
									years = 2
								}
							}
							add_character_modifier = {
								modifier = problems_with_merchants_modifier
								years = 2
							}
						}
						custom_tooltip = send_agent_cgm_interaction_ct5
					}
					else_if = {
						limit = {
							scope:send_agent_cgm_rep_sab = yes
						}
						add_character_modifier = {
							modifier = harmful_rumors_modifier
							years = 1
						}
					}
				}
			}
		}
		hidden_effect = {
			create_common_witch_effect3 = yes
			scope:created_witch = {
				add_secret = {
					type = secret_witch
					target = scope:created_witch
				}
				random_secret = {
					limit = {
						secret_type = secret_witch
					}
					reveal_to = scope:actor
				}
				
				add_character_modifier = {
					modifier = special_task_modifier
					years = 1
				}
				add_opinion = {
					target = scope:actor
					modifier = friendliness_opinion
					opinion = 200
				}
			}
			scope:actor = {
				send_interface_toast = {
					title = send_agent_cgm_interaction
					left_icon = scope:created_witch
					add_hook_no_toast = {
						type = loyalty_hook
						target = scope:created_witch
					}
				}
				if = {
					limit = {
						scope:send_agent_cgm_secrets = yes
					}
					trigger_event = {
						id = magic_ev4.80
						months = { 2 3 }
					}
				}
				if = {
					limit = {
						scope:send_agent_cgm_magic_item = yes
					}
					scope:recipient = {
						trigger_event = {
							id = magic_ev4.81
							months = { 2 3 }
						}
					}
				}
			}
		}
	}
	options_heading = send_agent_cgm_option_title
	send_option = {
		flag = send_agent_cgm_secrets
		localization = SEND_AGENT_CMG_O1
	}
	send_option = {
		flag = send_agent_cgm_sow_dis
		localization = SEND_AGENT_CMG_O2
	}
	send_option = {
		flag = send_agent_cgm_rep_sab
		localization = SEND_AGENT_CMG_O3
	}
	send_option = {
		is_shown = {
			scope:recipient = {
				OR = {
					any_character_artifact = { has_variable = magic1 }
					any_courtier_or_guest = {
						any_character_artifact = { has_variable = magic1 }
					}
				}
			}
		}
		flag = send_agent_cgm_magic_item
		localization = SEND_AGENT_CMG_O4
	}

	auto_accept = yes
}
command_minion_interaction = {
	is_shown = {
		NOT = { scope:recipient = scope:actor }
		scope:actor = {	
			is_imprisoned = no
			is_adult = yes
			has_relation_mminion = scope:recipient
			has_hook_of_type = {
				target = scope:recipient
				type = magic_domination_hook
			}
		}
		scope:recipient = {
			is_imprisoned = no
		}
	}
	is_valid_showing_failures_only = {
		scope:actor = {
			custom_description = {
				text = has_ready_hook_custom
				has_strong_usable_hook = scope:recipient
			}
		}
	}
	icon = icon_incapable
	ai_maybe = yes
	ai_min_reply_days = 1
	ai_max_reply_days = 1
	common_interaction = yes
	interface_priority = 100
	category = interaction_category_magic
	desc = command_minion_interaction_desc
	greeting = negative
	notification_text = COMMAND_MINION_PROPOSAL
	cooldown_against_recipient = { years = 1 } 
	cooldown = { days = 1 }
	can_send_despite_rejection = yes
	popup_on_receive = yes
	pause_on_receive = yes
	use_diplomatic_range = yes
	
	on_accept = {
		scope:actor = {
			send_interface_message = {
				type = event_generic_neutral
				title = command_minion_interaction
				left_icon = scope:actor
				right_icon = scope:recipient
				use_hook = scope:recipient
				stress_impact = {
					deceitful = medium_stress_impact_loss
				}
				scope:recipient = {
					if = {
						limit = {
							scope:command_minion_goold = yes
						}
						pay_short_term_gold = {
							gold = gift_value
							target = scope:actor
						}
					}
					else_if = {
						limit = {
							scope:command_minion_war = yes
						}
						scope:actor = {
							every_character_war = {
								limit = {
									OR = {
										primary_attacker = scope:actor
										primary_defender = scope:actor
									}
									#scope:recipient = {
									#	NOT = {
									#		is_participant_in_war = this
									#	}
									#}
								}
								if = {
									limit = {
										primary_attacker = scope:actor
									}
									add_attacker = scope:recipient
								}
								else_if = {
									limit = {
										primary_defender = scope:actor
									}
									add_defender = scope:recipient
								}
							}
						}
						hidden_effect = {
							random = {
								chance = 40
								create_mage_effect = yes
							}
						}
					}
					else_if = {
						limit = {
							scope:command_minion_suicide = yes
						}
						#show_as_tooltip = {
						#	death = {
						#		death_reason = death_suicide
						#	}
						#}
						trigger_event = magic_ev5.3
						scope:actor = {
							send_interface_toast = {
								title = command_minion_interaction
								show_as_tooltip = {
									scope:recipient = {
										death = natural
									}
								}
							}
						}
					}
					else_if = {
						limit = {
							scope:command_minion_lover = yes
						}
						if = {
							limit = {
								NOT = {
									is_attracted_to_gender_of = scope:actor
								}
							}
							set_sexuality = bisexual
						}
						set_relation_lover = scope:actor
						save_scope_as = had_sex_with_effect_partner
						scope:actor = {
							custom_tooltip = had_sex_with_effect.first_person.tt
							trigger_event = debug.410
						}

					}
					else_if = {
						limit = {
							scope:command_minion_surrender = yes
						}
						scope:recipient = {
							every_character_war = {
								limit = {
									OR = {
										primary_attacker = scope:recipient
										primary_defender = scope:recipient
									}
								}
								if = {
									limit = {
										primary_attacker = scope:recipient
									}
									end_war = defender
								}
								else_if = {
									limit = {
										primary_defender = scope:recipient
									}
									end_war = attacker
								}
							}
						}
						hidden_effect = {
							random = {
								chance = 40
								create_mage_effect = yes
							}
						}
					}
					else_if = {
						limit = {
							scope:command_minion_titles = yes
						}
						scope:recipient = {
							create_title_and_vassal_change = {
								type = granted
								save_scope_as = title_change
								add_claim_on_loss = no
							}
				
							every_held_title = {
								limit = {
									any_claimant = {
										this = scope:actor
									}
								}
								change_title_holder_include_vassals = {
									holder = scope:actor
									change = scope:title_change
								}
							}
							resolve_title_and_vassal_change = scope:title_change
						}
						hidden_effect = {
							scope:actor = {
								create_character = {
									employer = scope:actor
									template = witch_hunter_character
									save_scope_as = whunter
								}
								scope:whunter = {
									add_perk = protective_runes_perk
									add_perk = magical_senses_perk
									add_perk = a_job_done_right_perk
									add_intrigue_skill = 5
									random = {
										chance = 50
										start_scheme = {
											type = murder
											target = scope:actor
										}
									}
								}
								
							}
							create_mage_effect = yes
						}
					}
					else_if = {
						limit = {
							scope:command_minion_entertain = yes
						}
						save_scope_as = had_sex_with_effect_partner
						scope:actor = {
							add_stress = major_stress_loss
							stress_impact = {
								sadistic = medium_stress_loss
								compassionate = medium_stress_gain
							}
							if = {
								limit = {
									OR = {
										has_trait = lustful
										has_trait = rakish
									}
								}
								
								scope:actor = {
									custom_tooltip = had_sex_with_effect.first_person.tt
									trigger_event = debug.410
								}
							}
						}
						
						scope:recipient = {
							add_stress = major_stress_gain
						}
						
					}
				}
			}
		}
	}
	on_decline = {
		scope:actor = {
			send_interface_message = {
				type = event_generic_neutral
				title = command_minion_interaction
				left_icon = scope:actor
				right_icon = scope:recipient
				custom_tooltip = command_minion_failed
				if = {
					limit = {
						has_hook = scope:recipient
					}
					remove_hook = {
						target = scope:recipient
					}
				}
				scope:recipient = {
					remove_relation_mminion = scope:actor
					add_opinion = {
						target = scope:actor
						modifier = use_magic_on_me_opinion
					}
				}
				hidden_effect = {
					send_interface_toast = {
						title = command_minion_interaction
						custom_tooltip = command_minion_failed
					}
				}
			}
		}
	}
	options_heading = command_minion_option_title
	send_option = {
		flag = command_minion_goold
		localization = COMMAND_MINION_O1
	}
	send_option = {
		is_shown = {
			scope:actor = {
				any_character_war = {
					OR = {
						primary_attacker = scope:actor
						primary_defender = scope:actor
					}
					#scope:recipient = {
					#	NOT = {
					#		is_participant_in_war = this
					#	}
					#}
				}
			}
			scope:recipient = {
				#is_landed = yes
				is_ruler = yes
				#is_at_war = no

			}
		}
		is_valid = {
			scope:recipient = {
				#is_at_war = no
				NOT = {
					is_at_war_with = scope:actor
				}
				is_landed = yes
			}
		}
		flag = command_minion_war
		localization = COMMAND_MINION_O2
	}
	send_option = {
		is_shown = {
			scope:recipient = {
				any_character_war = {
					OR = {
						primary_attacker = scope:recipient
						primary_defender = scope:recipient
					}
				}
			}
		}
		flag = command_minion_surrender
		localization = COMMAND_MINION_O5
	}
	send_option = {
		flag = command_minion_suicide
		localization = COMMAND_MINION_O3
	}
	send_option = {
		is_shown = {
			scope:actor = {
				NOR = {
					has_relation_lover = scope:recipient
					has_relation_soulmate = scope:recipient
				}
			}
		}
		flag = command_minion_lover
		localization = COMMAND_MINION_O4
	}
	send_option = {
		is_shown = {
			scope:recipient = {
				is_at_war = no
				any_held_title = {
					any_claimant = {
						this = scope:actor
					}
				}
			}
		}
		flag = command_minion_titles
		localization = COMMAND_MINION_O6
	}
	send_option = {
		is_shown = {
			scope:recipient = {
				is_at_war = no
				NOT = {
					any_held_title = {
						any_claimant = {
							this = scope:actor
						}
					}
				}
			}
			scope:actor = {
				OR = {
					stress > 100
					has_trait = sadistic
					has_trait = gluttonous
				}
				NOT = {
					has_trait = shy
					has_trait = just
				}
			}
		}
		flag = command_minion_entertain
		localization = COMMAND_MINION_O7
	}
	ai_accept = {
		base = 50
		modifier = {
			add = {
				value = scope:actor.diplomacy
				multiply = 2
			}
			desc = DS_DIPLOMACY_ACTOR
		}
		modifier = {
			add = {
				value = scope:actor.intrigue
				multiply = 2
			}
			desc = DS_INTRIGUE_ACTOR
		}
		modifier = {
			add = -40
			scope:recipient = {
				has_trait = stubborn
			}
			desc = DS_IS_STUBBORN
		}
		modifier = {
			add = 20
			scope:recipient = {
				has_trait = craven
			}
			desc = DS_IS_CRAVEN
		}
		modifier = {
			add = 20
			scope:recipient = {
				has_trait = fickle
			}
			desc = DS_IS_FICKLE
		}
		modifier = {
			add = 30
			scope:actor = {
				has_character_modifier = master_psionic_modifier
			}
			desc = DS_IS_MASTER_PSIONIC
		}
		modifier = {
			add = -60
			scope:command_minion_suicide = yes
			scope:recipient = {
				NOR = {
					has_trait = depressed_1
					has_trait = depressed_genetic
				}
			}
			desc = DS_IS_SUICIDE
		}
		modifier = {
			add = -40
			OR = {
				scope:command_minion_war = yes
				scope:command_minion_surrender = yes
			}
			scope:recipient = {
				NOR = {
					has_trait = brave
					has_trait = wrathful
					has_trait = craven
				}
			}
			desc = DS_IS_SUICIDE
		}
		modifier = {
			add = -50
			OR = {
				scope:command_minion_war = yes
			}
			scope:recipient = {
				has_trait = craven
			}
			desc = DS_IS_SUICIDE
		}
		modifier = {
			add = -40
			scope:command_minion_titles = yes
			scope:recipient = {
				NOR = {
					has_trait = greedy
					has_trait = generous
				}
			}
			desc = DS_IS_SUICIDE
		}
		modifier = {
			add = -50
			scope:command_minion_titles = yes
			scope:recipient = {
				has_trait = greedy
			}
			desc = DS_IS_SUICIDE
		}
		modifier = {
			add = -20
			scope:command_minion_lover = yes
			scope:recipient = {
				NOT = {
					is_attracted_to_gender_of = scope:actor
				}
			}
			desc = DS_IS_SUICIDE
		}
		modifier = {
			add = -20
			scope:command_minion_entertain= yes
			scope:recipient = {
				OR = {
					has_trait = arrogant
					has_trait = shy
				}
			}
			desc = DS_IS_SUICIDE
		}
	}
	#ai_targets = {
	#	ai_recipients = vassals
	#	chance = 0.5
	#}
	#ai_targets = {
	#	ai_recipients = family
	#	chance = 0.25
	#}
	#ai_targets = {
	#	ai_recipients = courtiers
	#	chance = 0.25
	#}
	#ai_frequency = 24
	#ai_will_do = {
	#	base = 50
	#}
	auto_accept = no
}

power_strike = {
	is_shown = {
		NOT = { scope:recipient = scope:actor }
		scope:actor = {
			is_imprisoned = no
			is_landed = yes
			OR = {
				has_perk = healer_p9_perk
				has_trait = source3
				AND = {
					has_trait = demon
					has_trait_xp = {
						trait = demon
						value > 24
					}
				}
			}
		}
		scope:recipient = {
			OR = {
				is_imprisoned = no
				AND = {
					is_imprisoned = yes
					is_imprisoned_by = scope:actor
				}
			}
		}
	}
	is_valid_showing_failures_only = {
		scope:actor = {
			custom_description = {
				text = is_incapable_custom
				NOT = { has_trait = incapable }
			}
			custom_description = {
				text = is_on_mage_duel_custom
				NOT = {	has_variable = pclash	}
			}
		}
		scope:recipient = {
			custom_description = {
				text = magic_protection_custom
				has_full_magic_prot_trigger = no
			}
		}
		scope:actor = {
			custom_description = {
				text = power_needed_custom
				can_spend_standard_ps_trigger = yes
			}
			custom_description = {
				text = physical_contact_custom
				has_physical_contanct2 = yes
			}
		}
		scope:recipient = {
			custom_description = {
				text = only_specified_child3
				OR = {
					NOT = {
						is_child_of = scope:actor
					}
					scope:actor = {
						has_trait = sadistic
					}
				}
			}
		}
	}
	icon = icon_magic
	common_interaction = no
	interface_priority = 90
	category = interaction_category_magic

	cooldown_against_recipient = { days = 30 } 
	cooldown = { days = 1 } 
	ignores_pending_interaction_block = yes
	use_diplomatic_range = no
	#hidden = yes
	
	on_accept = {
		scope:actor = {
			save_scope_as = magic_user
			send_message_4_magic_sense_effect = yes

			if = {
				limit = {
					scope:recipient = {
						OR = {
							has_trait = incapable
							NOR = {
								has_trait = archmage
								has_trait = demon
								has_trait = yaga
							}
							AND = {
								OR = {
									has_trait = archmage
									has_trait = demon
									has_trait = yaga
								}
								is_imprisoned_by = scope:actor
							}
						}
					}
				}
				if = {
					limit = {
						OR = {
							AND = {
								has_trait = demon
								has_trait_xp = {
									trait = demon
									value > 24
								}
							}
							has_trait = source3
						}
					}
					custom_tooltip = no_mana_loss_ct
				}
				else = {
					if = {
						limit = {
							scope:weaken_spell_flag = yes
						}
						spend_minor_ps_effect = yes
					}
					else = {
						spend_standard_ps_effect = yes
					}
				}
				
				scope:actor.location.county_controller = {
					save_scope_as = owner1
				}
				if = {
					limit = {
						NOR = {
							scope:actor = scope:owner1
							scope:recipient = scope:owner1
						}
					}
					custom_tooltip = warning_use_magic_out_of_secure_place_ct2
				}
				else_if = {
					limit = {
						NOT = {
							scope:actor = scope:owner1
						}
						scope:recipient = scope:owner1
					}
					custom_tooltip = warning_use_magic_out_of_secure_place_ct
				}
				hidden_effect = {
					if = {
						limit = {
							exists = scope:actor.involved_activity
						}
						scope:actor.involved_activity = {
							every_attending_character = {
								limit = {
									NOR = {
										this = scope:actor
										this = scope:recipient
									}
								}
								trigger_event = magic_ev5.8
							}
						}
					}
				}
	
				send_interface_message = {
					type = event_generic_neutral
					title = power_strike
					desc = "power_strike_desc"
					left_icon = scope:actor
					right_icon = scope:recipient
					if = {
						limit = {
							trait_is_criminal_in_faith_trigger = { TRAIT = witch FAITH = scope:actor.faith GENDER_CHARACTER = scope:actor }
						}
						custom_tooltip = use_magic_openly_ct
						hidden_effect = {
							random = {
								chance = 10
								create_character = {
									employer = scope:actor
									template = witch_hunter_character
									save_scope_as = whunter
								}
								scope:whunter = {
									add_perk = protective_runes_perk
									add_perk = magical_senses_perk
								}
							}
						}
					}
					else = {
						custom_tooltip = use_magic_openly_ct2
					}
					
					if = {
						limit = {
							scope:recipient = {
								has_basic_magic_prot_trigger = yes
							}
						}
						custom_tooltip = bypass_magic_prot_custom_tooltip
					}
					gain_sc_xp1_effect = yes
	
					#stress_impact = {
					#	compassionate = medium_stress_impact_gain
					#	wrathful = medium_stress_impact_loss
					#	sadistic = medium_stress_impact_loss
					#}
					if = {
						limit = {
							scope:weaken_spell_flag = no
						}
						metamagic_effect = yes
					}
					
					if = {
						limit = {
							has_trait = compassionate
							has_trait = wrathful
							has_trait = sadistic
						}
						stress_impact = {
							compassionate = medium_stress_impact_gain
							wrathful = medium_stress_impact_loss
							sadistic = medium_stress_impact_loss
						}
					}
					else_if = {
						limit = {
							OR = {
								has_relation_rival = scope:recipient
								has_relation_nemesis = scope:recipient
							}
						}
						add_stress = major_stress_loss
						stress_impact = {
							forgiving = medium_stress_impact_gain
							wrathful = medium_stress_impact_loss
							sadistic = medium_stress_impact_loss
						}
					}
					if = {
						limit = {
							scope:weaken_spell_flag = yes
						}
						add_dread = medium_dread_gain
						
						scope:recipient = {
							if = {
								limit = {
									scope:power_strike_imprison_flag = yes
								}
								add_trait = wounded_3
								add_stress = massive_stress_gain
								imprison_character_effect = {
									TARGET = scope:recipient
									IMPRISONER = scope:actor
								}
							}
							else = {
								show_as_tooltip = {
									add_trait = wounded_3
									add_stress = massive_stress_gain
								}
								scope:actor = {
									if = {
										limit = {
											NOR = {
												has_imprisonment_reason = scope:recipient
												has_banish_reason = scope:recipient
												has_execute_reason = scope:recipient
											}
										}
										add_tyranny = minor_tyranny_gain
									}
								}
								custom_tooltip = power_strike_spare_ct
								trigger_event = magic_ev5.4
							}
						}
					}
					else = {
						add_dread = major_dread_gain
						if = {
							limit = {
								scope:actor = {
									is_in_army = yes
									exists = commanding_army
									commanding_army = {
										is_army_in_combat = yes
									}
								}
								scope:recipient = {
									is_in_army = yes
									OR = {
										AND = {
											exists = commanding_army
											commanding_army = {
												is_army_in_combat = yes
											}
											NOT = {
												commanding_army = scope:actor.commanding_army
											}
											commanding_army.location = scope:actor.commanding_army.location
										}
										AND = {
											exists = liege_or_court_owner
											liege_or_court_owner = {
												any_army = {
													is_army_in_combat = yes
													NOT = {
														THIS = scope:actor.commanding_army
													}
													location = scope:actor.commanding_army.location
												}
											}
										}
									}
								}
							}
							add_character_flag = mage_during_battle_flag
						}
						else = {
							if = {
								limit = {
									has_execute_reason = scope:recipient
								}
								custom_tooltip = IS_ALLOWED_TO_EXECUTE_DESC
							}
							else = {
								add_tyranny = execution_tyranny_gain
								add_kinslayer_trait_or_nothing_effect = { VICTIM = scope:recipient }
								if = {
									limit = {
										NOT = {	has_trait = murderer	}
									}
									add_trait = murderer
								}
								hidden_effect = {
									if = {
										limit = {
											exists = scope:recipient.primary_heir
											scope:recipient.primary_heir = {
												any_close_family_member = {
													this = scope:recipient
												}
												NOR = {
													has_relation_rival = scope:actor
													has_relation_nemesis = scope:actor
													has_relation_mminion = scope:actor
													has_trait = craven
													has_trait = forgiving
												}
											}
										}
										set_relation_rival = scope:recipient.primary_heir
									}
									else_if = {
										limit = {
											scope:recipient.age<16
											exists = scope:recipient.father
											scope:recipient.father = {
												is_alive = yes
												is_landed = yes
												is_ruler = yes
												NOR = {
													has_relation_rival = scope:actor
													has_relation_nemesis = scope:actor
													has_relation_mminion = scope:actor
													has_trait = craven
													has_trait = forgiving
												}
											}
										}
										set_relation_rival = scope:recipient.father
									}
								}
							}
						}
						
					}
	
					
					hidden_effect = {
						if = {
							limit = {
								trait_is_criminal_in_faith_trigger = { TRAIT = witch FAITH = scope:actor.faith GENDER_CHARACTER = scope:actor }
							}
							#if = {
							#	limit = {
							#		NOT = {	has_character_modifier = use_magic_openly_modifier	}
							#	}
							#	add_character_modifier = {
							#		modifier = use_magic_openly_modifier
							#		years = 1
							#	}
							#}
							every_ruler = {
								limit = {
									faith = scope:actor.faith
									NOR = {
										this = scope:actor
										has_trait = witch
										has_trait = cynical
										has_trait = true_witch
										has_trait = archmage
										has_trait = demon
										has_trait = forgiving
										any_secret = { secret_type = secret_witch }
									}
								}
								#use_magic_opinion
								if = {
									limit = {
										NOR = {
											has_trait = zealous
											has_trait = theologian
										}
									}
									add_opinion = {
										modifier = use_magic_opinion
										target = scope:actor
										opinion = -30
									}
								}
								else = {
									add_opinion = {
										modifier = use_magic_opinion
										target = scope:actor
										opinion = -50
									}
								}
							}
							scope:actor = {
								every_courtier_or_guest = {
									limit = {
										faith = scope:actor.faith
										NOR = {
											this = scope:actor
											has_trait = witch
											has_trait = cynical
											has_trait = true_witch
											has_trait = archmage
											has_trait = demon
											has_trait = forgiving
											any_secret = { secret_type = secret_witch }
										}
									}
									add_opinion = {
										modifier = use_magic_opinion
										target = scope:actor
										opinion = -30
									}
								}
							}
							if = {
								limit = {
									exists = scope:actor.faith.religious_head
									NOT = {	scope:actor.faith.religious_head = scope:actor	}
									NOT = {	has_trait = excommunicated	}
									NOT = {	has_character_modifier = excommunication_recently_lifted	}
									scope:actor.faith = {
										has_doctrine = tenet_communion
										has_doctrine = doctrine_spiritual_head
									}
									scope:actor.faith.religious_head = {
										opinion = { target = scope:actor value < 0 }
									}
								}
								add_trait = excommunicated
							}
						}
					}
					if = {
						limit = {
							scope:weaken_spell_flag = no
						}
						if = {
							limit = {
								scope:actor = {
									has_character_flag = mage_during_battle_flag
								}
							}
							scope:recipient = {
								death = {
									death_reason = death_battle
									killer = scope:actor
								}
							}
							scope:actor = {
								remove_character_flag = mage_during_battle_flag
							}
						}
						else = {
							execute_opinion_effect = { VICTIM = scope:recipient EXECUTIONER = scope:actor }
							scope:recipient = {
								death = {
									death_reason = death_execution
									killer = scope:actor
								}
							}
						}
					}
					
				}
			}
			else = {
				send_interface_message = {
					type = event_generic_neutral
					title = power_strike
					desc = "power_strike_desc"
					left_icon = scope:actor
					right_icon = scope:recipient
					custom_tooltip = mage_duel_duel_ct
					if = {
						limit = {
							has_trait = archmage
							has_trait_xp = {
								trait = archmage
								track = power_saturation
								value < 50
							}
						}
						custom_tooltip = mage_duel_duel_ct2
					}
					if = {
						limit = {
							has_full_magic_prot_trigger = yes
						}
						custom_tooltip = mage_duel_duel_ct4
					}
					if = {
						limit = {
							any_character_artifact = {
								OR = {
									has_variable = catalyst
									has_variable = singularity
									has_variable = dark_blade
								}
							}
						}
						custom_tooltip = mage_duel_duel_ct7
					}
					scope:recipient = {
						trigger_event = magic_ev5.32
						custom_tooltip = power_strike_md_ct1
						add_opinion = {
							modifier = attacked_me_by_magic_opinion
							target = scope:actor
							opinion = -80
						}
						if = {
							limit = {
								has_trait = demon
								scope:actor = {
									NOT = {	has_trait = demon	}
								}
							}
							custom_tooltip = mage_duel_duel_ct3
						}
						if = {
							limit = {
								has_full_magic_prot_trigger = yes
							}
							custom_tooltip = mage_duel_duel_ct5
						}
						if = {
							limit = {
								is_legendary_mage_trigger = yes
							}
							custom_tooltip = mage_duel_duel_ct6
						}
						if = {
							limit = {
								any_character_artifact = {
									OR = {
										has_variable = catalyst
										has_variable = singularity
										has_variable = dark_blade
									}
								}
							}
							custom_tooltip = mage_duel_duel_ct8
						}
					}
				}
			}			
		}
	}
	send_option = {
		is_shown = {
			scope:recipient = {
				is_ai = yes
				NOR = {
					has_trait = archmage
					has_trait = demon
					has_trait = yaga
				}
			}
			scope:actor = {
				is_in_army = no
			}
		}
		is_valid = {
			custom_description = {
				text = target_already_has_wounds_custom
				scope:recipient = {
					NOR = {
						has_trait = wounded_1
						has_trait = wounded_2
						has_trait = wounded_3
					}
				}
			}
		}
		flag = weaken_spell_flag
		localization = POWER_STRIKE_O1
	}
	send_option = {
		is_shown = {
			scope:weaken_spell_flag = yes
			OR = {
				scope:actor = scope:actor.location.county_controller
				#AND = {
				#	exists = scope:actor.involved_activity
				#	scope:actor = scope:actor.involved_activity.activity_host
				#}
			}
			scope:actor.location = scope:recipient.location
			scope:recipient = {
				is_ai = yes
				NOR = {
					has_trait = archmage
					has_trait = demon
					has_trait = yaga
					is_imprisoned = yes
				}
			}
		}
		#is_valid = {
		#	scope:actor.location = scope:recipient.location
		#}
		flag = power_strike_imprison_flag
		localization = POWER_STRIKE_O2
	}

	ai_potential = {
		NOT = {
			has_trait = compassionate
		}
	}
	ai_targets = {
		ai_recipients = war_enemies
		ai_recipients = scripted_relations
	}
	ai_frequency = 24
	send_options_exclusive = no
	auto_accept = yes
	ai_will_do = {
		base = 0
		modifier = {
			add = 50
			scope:recipient = {
				OR = {
					has_relation_rival = scope:actor
					has_relation_nemesis = scope:actor
					#has_relation_potential_rival = scope:actor
					is_at_war_with = scope:actor
				}
			}
		}
		modifier = {
			add = -50
			scope:actor = {
				has_trait = craven
			}
		}
		modifier = {
			add = -100
			scope:actor = {
				trait_is_criminal_in_faith_trigger = { TRAIT = witch FAITH = this.faith GENDER_CHARACTER = this }
				NOR = {
					has_trait = demon
					has_trait = excommunicated
				}
			}
		}
	}
}

aura_boost = {
	is_shown = {
		NOT = { scope:recipient = scope:actor }
		scope:actor = {
			is_imprisoned = no
			has_perk = healer_p9_perk
		}	
	}
	is_valid_showing_failures_only = {
		scope:actor = {
			custom_description = {
				text = is_incapable_custom
				NOT = { has_trait = incapable }
			}
			custom_description = {
				text = is_on_mage_duel_custom
				NOT = {	has_variable = pclash	}
			}
		}
		scope:actor = {
			custom_description = {
				text = power_needed_custom
				can_spend_standard_ps_trigger = yes
			}
		}
	}
	icon = icon_magic
	common_interaction = yes
	interface_priority = 90
	category = interaction_category_magic

	cooldown_against_recipient = { years = 1 } 
	cooldown = { months = 6 } 
	ignores_pending_interaction_block = yes
	use_diplomatic_range = no
	#hidden = yes
	
	on_accept = {
		scope:actor = {
			save_scope_as = magic_user
			send_message_4_magic_sense_effect = yes
			spend_standard_ps_effect = yes
			

			send_interface_message = {
				type = event_generic_neutral
				title = aura_boost
				desc = "send_interface_message_text"
				left_icon = scope:actor
				right_icon = scope:recipient
				custom_tooltip = use_magic_custom_tooltip1
				if = {
					limit = {
						scope:recipient = {
							has_basic_magic_prot_trigger = yes
						}
					}
					custom_tooltip = bypass_magic_prot_custom_tooltip
				}
				gain_sc_xp1_effect = yes

				stress_impact = {
					compassionate = medium_stress_impact_loss
				}
				metamagic_effect = yes
				scope:recipient = {
					if = {
						limit = {	has_character_modifier = aura_boost1_modifier	}
						remove_character_modifier = aura_boost1_modifier
					}
					if = {
						limit = {	has_character_modifier = aura_boost2_modifier	}
						remove_character_modifier = aura_boost2_modifier
					}
					if = {
						limit = {
							scope:aura_boost_mind = yes
						}
						add_character_modifier = aura_boost1_modifier
					}
					else_if = {
						limit = {
							scope:aura_boost_body = yes
						}
						add_character_modifier = aura_boost2_modifier
					}
					else_if = {
						limit = {
							scope:aura_boost_clear = yes
						}
						if = {
							limit = {	has_character_modifier = aura_boost1_modifier	}
							remove_character_modifier = aura_boost1_modifier
						}
						if = {
							limit = {	has_character_modifier = aura_boost2_modifier	}
							remove_character_modifier = aura_boost2_modifier
						}
						if = {
							limit = {	has_character_modifier = cursed_modifier	}
							remove_character_modifier = cursed_modifier
						}
					}
				}
			}
		}
	}
	options_heading = aura_boost_option_title
	send_option = {
		is_shown = {
			scope:recipient = {
				NOT = {
					has_character_modifier = aura_boost1_modifier
				}
			}
		}
		flag = aura_boost_mind
		localization = AURA_BOOST_O1
	}
	send_option = {
		is_shown = {
			scope:recipient = {
				NOT = {
					has_character_modifier = aura_boost2_modifier
				}
			}
		}
		flag = aura_boost_body
		localization = AURA_BOOST_O2
	}
	send_option = {
		is_shown = {
			scope:recipient = {
				OR = {
					has_character_modifier = aura_boost2_modifier
					has_character_modifier = aura_boost1_modifier
					has_character_modifier = cursed_modifier
				}
			}
		}
		flag = aura_boost_clear
		localization = AURA_BOOST_O3
	}
	auto_accept = yes
}

bless_land = {
	target_type = title
	target_filter = recipient_domain_titles
	is_shown = {
		scope:recipient = scope:actor
		scope:actor = {
			is_imprisoned = no
			has_character_flag = bless_land_flag
			is_landed = yes
			is_ruler = yes
		}
	}
	is_valid_showing_failures_only = {
		scope:actor = {
			custom_description = {
				text = power_needed_custom
				can_spend_standard_ps_trigger = yes
			}
			custom_description = {
				text = is_incapable_custom
				NOT = { has_trait = incapable }
			}
			custom_description = {
				text = is_on_mage_duel_custom
				NOT = {	has_variable = pclash	}
			}
		}
	}
	icon = icon_magic
	common_interaction = yes
	interface_priority = 90
	category = interaction_category_magic

	cooldown_against_recipient = { years = 2 } 
	cooldown = { years = 2 } 
	ignores_pending_interaction_block = yes
	use_diplomatic_range = no
	#hidden = yes
	can_be_picked_title = {
		scope:target = {
			is_leased_out = no
			tier = tier_county
		}
	}
	on_accept = {
		scope:target = {
			save_scope_as = ttile
		}
		scope:actor = {
			gain_sc_xp1_effect = yes
			spend_standard_ps_effect = yes
		}
		
		scope:target.title_province = {
			county = {
				if = {
					limit = {
						has_county_modifier = cursed_land_modifier
					}
					remove_county_modifier = cursed_land_modifier
				}
				if = {
					limit = {
						has_county_modifier = blessed_land_modifier
					}
					remove_county_modifier = blessed_land_modifier
				}
				add_county_modifier = {
					modifier = blessed_land_modifier
					years = 10
				}
			}
			
			#if = {
			#	limit = {
			#		has_province_modifier = blessed_land_modifier
			#	}
			#	remove_province_modifier = blessed_land_modifier
			#}
			#add_province_modifier = {
			#	modifier = blessed_land_modifier
			#	years = 10
			#}
		}
	}
	auto_accept = yes
}

shadowstep_spell = {
	is_shown = {
		scope:recipient = scope:actor
		scope:actor = {
			has_character_flag = shadowstep_flag
		}	
	}
	is_valid_showing_failures_only = {
		scope:actor = {
			custom_description = {
				text = is_incapable_custom
				NOT = { has_trait = incapable }
			}
			custom_description = {
				text = is_on_mage_duel_custom
				NOT = {	has_variable = pclash	}
			}
		}
		scope:actor = {
			custom_description = {
				text = power_needed_custom
				can_spend_standard_ps_trigger = yes
			}
		}
		scope:actor = {
			custom_description = {
				text = prison_magic_secure_custom
				OR = {
					is_imprisoned = no
					AND = {
						is_imprisoned = yes
						exists = scope:actor.imprisoner
						scope:actor.imprisoner = {
							NOR = {
								has_trait = witch
								any_secret = { secret_type = secret_witch }
								has_trait = demon
								has_trait = witch_hunter
								has_trait = lifestyle_mystic
							}
						}
					}
				}
			}
		}
	}
	icon = icon_magic
	common_interaction = yes
	interface_priority = 90
	category = interaction_category_magic
	desc = shadowstep_spell_desc

	cooldown_against_recipient = { years = 1 } 
	cooldown = { months = 6 } 
	ignores_pending_interaction_block = yes
	use_diplomatic_range = no
	#hidden = yes
	
	on_accept = {
		scope:actor = {
			save_scope_as = magic_user
			send_message_4_magic_sense_effect = yes
			spend_standard_ps_effect = yes
			

			send_interface_message = {
				type = event_generic_neutral
				title = shadowstep_spell
				desc = "send_interface_message_text"
				left_icon = scope:actor
				right_icon = scope:recipient
				custom_tooltip = use_magic_custom_tooltip1
				
				gain_sc_xp1_effect = yes

				stress_impact = {
					craven = minor_stress_impact_loss
					brave = minor_stress_impact_gain
				}
				metamagic_effect = yes
				if = {
					limit = {
						is_imprisoned = no
					}
					add_character_modifier = {
						modifier = shadow_step_modifier
						years = 1
					}
					custom_tooltip = shadow_step_prison_ct
				}
				else = {
					release_from_prison = yes
					scope:actor.imprisoner = {
						if = {
							limit = {
								OR = {
									has_revoke_title_reason = scope:actor
									has_banish_reason = scope:actor
									has_execute_reason = scope:actor
								}
							}
							add_opinion = {
								target = scope:actor
								modifier = escaped_from_prison_crime
							}
						}
						else = {
							add_opinion = {
								target = scope:actor
								modifier = escaped_from_prison_opinion
							}
						}
						save_scope_as = imprisoner
					}
					custom_tooltip = escape_from_prison_decision_effect_tooltip	#to removing?
					trigger_event = {
						on_action = escape_from_prison
					}
				}
			}
		}
	}
	
	auto_accept = yes
}

plague_spell = {
	is_shown = {
		NOT = { scope:recipient = scope:actor }
		scope:actor = {
			has_character_flag = plague_spell_flag
			is_imprisoned = no
		}
		scope:recipient = {
			NOR = {
				has_relation_mminion = scope:actor
				#has_relation_mmaster = scope:actor
			}
		}	
	}
	is_valid_showing_failures_only = {
		scope:actor = {
			custom_description = {
				text = is_incapable_custom
				NOT = { has_trait = incapable }
			}
			custom_description = {
				text = is_on_mage_duel_custom
				NOT = {	has_variable = pclash	}
			}
		}
		scope:recipient = {
			custom_description = {
				text = magic_protection_custom
				has_full_magic_prot_trigger = no
				OR = {
					has_basic_magic_prot_trigger = no
					AND = {
						has_basic_magic_prot_trigger = yes
						scope:actor = {	can_penetrate_basic_magic_prot_trigger = yes	}
					}
				}
			}
		}
		scope:actor = {
			custom_description = {
				text = power_needed_custom
				OR = {
					can_spend_standard_ps_trigger = yes
					AND = {
						can_spend_standard_ps_trigger = no
						has_trait = yaga
					}
				}
				
			}
		}
	}
	icon = icon_magic
	common_interaction = no
	interface_priority = 90
	popup_on_receive = no
	category = interaction_category_magic

	cooldown_against_recipient = { years = 5 } 
	cooldown = { years = 1 } 
	ignores_pending_interaction_block = yes
	use_diplomatic_range = no
	#hidden = yes
	
	on_accept = {
		scope:actor = {
			save_scope_as = magic_user
			send_message_4_magic_sense_effect = yes
			hidden_effect = {
				random = {
					chance = 4
					if = {
						limit = {
							NOT = {
								any_courtier_or_guest = {
									has_trait = witch_hunter
								}
							}
						}
						create_character = {
							employer = scope:actor
							template = witch_hunter_character
							save_scope_as = whunter
						}
						scope:whunter = {
							add_perk = protective_runes_perk
							add_perk = magical_senses_perk
						}
					}
				}
			}
			
			
			send_interface_message = {
				type = event_generic_neutral
				title = plague_spell
				#desc = "send_interface_message_text"
				left_icon = scope:actor
				right_icon = scope:recipient
				custom_tooltip = use_magic_custom_tooltip
				gain_sc_xp1_effect = yes
				spend_standard_ps_effect = yes
				
				stress_impact = {
					compassionate = medium_stress_impact_gain
				}

				scope:recipient = {
					show_as_tooltip = {
						add_character_modifier = {
							modifier = plague_spell_modifier
							years = 2
						}
						if = {
							limit = {
								NOT = {	has_trait = great_pox	}
							}
							add_trait = great_pox
						}
					}
					custom_tooltip = plague_spell_ct
					trigger_event = magic_ev5.2
				}
			}
		}
	}
	
	auto_accept = yes
	ai_potential = {
		NOT = {
			has_trait = compassionate
		}
	}
	
	ai_targets = {
		ai_recipients = neighboring_rulers
		ai_recipients = vassals
		ai_recipients = liege
		ai_recipients = war_enemies
	}

	ai_frequency = 24

	ai_will_do = {
		base = 0
		
		modifier = {
			add = 90
			scope:recipient = {
				OR = {
					has_relation_rival = scope:actor
					has_relation_nemesis = scope:actor
					#has_relation_potential_rival = scope:actor
					is_at_war_with = scope:actor
				}
			}
		}
		modifier = {
			add = 30
			scope:recipient = {
				opinion = {
					target = scope:actor
					value < -40
				}
			}
		}
		modifier = {
			add = -100
			scope:recipient = {
				OR = {
					has_relation_lover = scope:actor
					has_relation_friend = scope:actor
					has_relation_best_friend = scope:actor
					has_relation_soulmate = scope:actor
				}
			}
		}
	}
}

hipercognition = {
	is_shown = {
		scope:recipient = scope:actor
		scope:actor = {
			is_imprisoned = no
			has_character_flag = hipercognition_flag
		}	
	}
	is_valid_showing_failures_only = {
		scope:actor = {
			custom_description = {
				text = is_incapable_custom
				NOT = { has_trait = incapable }
			}
			custom_description = {
				text = is_on_mage_duel_custom
				NOT = {	has_variable = pclash	}
			}
		}
		scope:actor = {
			custom_description = {
				text = power_needed_custom
				can_spend_standard_ps_trigger = yes
			}
		}
	}
	icon = icon_magic
	common_interaction = yes
	interface_priority = 90
	category = interaction_category_magic

	cooldown_against_recipient = { years = 8 } 
	cooldown = { years = 8 } 
	ignores_pending_interaction_block = yes
	use_diplomatic_range = no
	#hidden = yes
	
	on_accept = {
		scope:actor = {
			save_scope_as = magic_user
			send_message_4_magic_sense_effect = yes
			spend_standard_ps_effect = yes
			

			send_interface_message = {
				type = event_generic_neutral
				title = hipercognition
				desc = "send_interface_message_text"
				left_icon = scope:actor
				#right_icon = scope:recipient
				custom_tooltip = use_magic_custom_tooltip1
				
				gain_sc_xp1_effect = yes

				metamagic_effect = yes
				if = {
					limit = {
						scope:hipercognition_diplo = yes
					}
					add_character_modifier = {
						modifier = hipercognition_modifier1
						years = 8
					}
				}
				else_if = {
					limit = {
						scope:hipercognition_mart = yes
					}
					add_character_modifier = {
						modifier = hipercognition_modifier2
						years = 8
					}
				}
				else_if = {
					limit = {
						scope:hipercognition_stew = yes
					}
					add_character_modifier = {
						modifier = hipercognition_modifier3
						years = 8
					}
				}
				else_if = {
					limit = {
						scope:hipercognition_intr = yes
					}
					add_character_modifier = {
						modifier = hipercognition_modifier4
						years = 8
					}
				}
			}
		}
	}
	options_heading = hipercognition_option_title
	send_option = {
		flag = hipercognition_diplo
		localization = diplomacy
	}
	send_option = {
		flag = hipercognition_mart
		localization = martial
	}
	send_option = {
		flag = hipercognition_stew
		localization = stewardship
	}
	send_option = {
		flag = hipercognition_intr
		localization = intrigue
	}
	auto_accept = yes
}

firestorm_spell = {
	is_shown = {
		NOT = { scope:recipient = scope:actor }
		scope:actor = {
			OR = {
				AND = {
					has_trait = demon
					has_trait_xp = {
						trait = demon
						value > 74
					}
				}
				has_character_flag = firestorm_spell_flag
			}
			is_imprisoned = no
		}
		scope:recipient = {
			NOR = {
				has_relation_mminion = scope:actor
				#has_relation_mmaster = scope:actor
			}
		}	
	}
	is_valid_showing_failures_only = {
		scope:actor = {
			custom_description = {
				text = is_incapable_custom
				NOT = { has_trait = incapable }
			}
			custom_description = {
				text = is_on_mage_duel_custom
				NOT = {	has_variable = pclash	}
			}
		}
		scope:recipient = {
			custom_description = {
				text = magic_protection_custom
				has_full_magic_prot_trigger = no
				OR = {
					has_basic_magic_prot_trigger = no
					AND = {
						has_basic_magic_prot_trigger = yes
						scope:actor = {	can_penetrate_basic_magic_prot_trigger = yes	}
					}
				}
			}
		}
		scope:actor = {
			custom_description = {
				text = power_needed_custom
				OR = {
					can_spend_standard_ps_trigger = yes
					AND = {
						can_spend_standard_ps_trigger = no
						has_trait = yaga
					}
				}
				
			}
		}
	}
	icon = icon_magic
	common_interaction = no
	interface_priority = 90
	popup_on_receive = no
	category = interaction_category_magic

	cooldown_against_recipient = { years = 5 } 
	cooldown = { years = 1 } 
	ignores_pending_interaction_block = yes
	use_diplomatic_range = no
	#hidden = yes
	
	on_accept = {
		scope:actor = {
			save_scope_as = magic_user
			send_message_4_magic_sense_effect = yes
			hidden_effect = {
				random = {
					chance = 4
					if = {
						limit = {
							NOT = {
								any_courtier_or_guest = {
									has_trait = witch_hunter
								}
							}
						}
						create_character = {
							employer = scope:actor
							template = witch_hunter_character
							save_scope_as = whunter
						}
						scope:whunter = {
							add_perk = protective_runes_perk
							add_perk = magical_senses_perk
						}
					}
				}
			}
			
			
			send_interface_message = {
				type = event_generic_neutral
				title = firestorm_spell
				#desc = "send_interface_message_text"
				left_icon = scope:actor
				right_icon = scope:recipient
				custom_tooltip = use_magic_custom_tooltip
				gain_sc_xp1_effect = yes
				spend_standard_ps_effect = yes
				
				stress_impact = {
					compassionate = medium_stress_impact_gain
				}

				scope:recipient = {
					custom_tooltip = fire_storm_spell_ct0
					custom_tooltip = fire_storm_spell_ct2
					if = {
						limit = {
							OR = {
								has_full_magic_prot_trigger = yes
								AND = {
									has_basic_magic_prot_trigger = yes
									NOT = {
										scope:actor = {	can_penetrate_basic_magic_prot_trigger = yes	}
									}
								}
							}
						}
						custom_tooltip = fire_storm_spell_ct1
					}
					every_living_character = {
						limit = {
							this.location = scope:recipient.location
						}
						trigger_event = magic_ev5.24
					}
				}
			}
		}
	}
	
	auto_accept = yes
	ai_potential = {
		NOT = {
			has_trait = compassionate
		}
	}
	
	ai_targets = {
		ai_recipients = neighboring_rulers
		ai_recipients = vassals
		ai_recipients = liege
		ai_recipients = war_enemies
	}

	ai_frequency = 24

	ai_will_do = {
		base = 0
		
		modifier = {
			add = 70
			scope:recipient = {
				OR = {
					has_relation_rival = scope:actor
					has_relation_nemesis = scope:actor
					#has_relation_potential_rival = scope:actor
					is_at_war_with = scope:actor
				}
			}
		}
		modifier = {
			add = 30
			scope:recipient = {
				opinion = {
					target = scope:actor
					value < -80
				}
			}
		}
		modifier = {
			add = -100
			scope:recipient = {
				OR = {
					has_relation_lover = scope:actor
					has_relation_friend = scope:actor
					has_relation_best_friend = scope:actor
					has_relation_soulmate = scope:actor
					scope:actor.location = scope:recipient.location
				}
			}
		}
	}
}

mana_siphon_spell = {
	is_shown = {
		NOT = { scope:recipient = scope:actor }
		scope:actor = {	
			is_imprisoned = no
			is_adult = yes
			has_character_flag = mana_siphon_flag
		}
	}
	is_valid_showing_failures_only = {
		scope:actor = {
			custom_description = {
				text = is_incapable_custom
				NOT = { has_trait = incapable }
			}
			custom_description = {
				text = is_on_mage_duel_custom
				NOT = {	has_variable = pclash	}
			}
		}
		scope:actor = {
			custom_description = {
				text = you_are_full_mana
				can_be_power_saturated_trigger = yes
			}
		}
		scope:recipient = {
			custom_description = {
				text = target_must_be_ps
				can_spend_standard_ps_trigger = yes
			}
		}
	}
	icon = icon_ps
	ai_maybe = no
	ai_min_reply_days = 1
	ai_max_reply_days = 1
	common_interaction = yes
	interface_priority = 100
	category = interaction_category_magic
	desc = mana_siphon_spell_desc
	greeting = negative
	#notification_text = MANA_SIPHON_PROPOSAL
	notification_text = {
		first_valid = {
			triggered_desc = {
				trigger = {
					scope:hook = yes
				}
				desc = MANA_SIPHON_PROPOSAL1
			}
			triggered_desc = {
				trigger = {
					scope:mana_siphon_gold = yes
				}
				desc = MANA_SIPHON_PROPOSAL2
			}
			desc = MANA_SIPHON_PROPOSAL3
		}
	}
	cooldown_against_recipient = { years = 1 } 
	cooldown = { months = 1 }
	#can_send_despite_rejection = yes
	popup_on_receive = yes
	pause_on_receive = yes
	use_diplomatic_range = yes
	
	on_accept = {
		scope:actor = {
			send_interface_message = {
				type = event_generic_neutral
				title = mana_siphon_spell
				left_icon = scope:actor
				right_icon = scope:recipient
				
				if = {
					limit = {
						scope:hook = yes
						has_hook = scope:recipient
					}
					use_hook = scope:recipient
				}
				if = {
					limit = {
						scope:mana_siphon_gold = yes
					}
					pay_short_term_gold = {
						gold = gift_value
						target = scope:recipient
					}
				}
				gain_standard_ps_effect = yes
				scope:recipient = {
					spend_standard_ps_effect = yes
				}
			}
		}
	}
	on_decline = {
		scope:actor = {
			send_interface_message = {
				type = event_generic_neutral
				title = mana_siphon_spell
				left_icon = scope:actor
				right_icon = scope:recipient
				add_prestige = -100
				scope:recipient = {
					add_opinion = {
						target = scope:actor
						modifier = disgusted_opinion
						opinion = -10
					}
				}
			}
		}
	}

	send_option = {
		is_valid = {
			scope:actor = {
				has_usable_hook = scope:recipient
			}
		}
		flag = hook	
		localization = GENERIC_SPEND_A_HOOK
	}
	should_use_extra_icon = {
		scope:actor = { has_usable_hook = scope:recipient }
	}
	extra_icon = "gfx/interface/icons/character_interactions/hook_icon.dds"
	send_option = {
		flag = mana_siphon_gold
		localization = MANA_SIPHON_O2
	}
	
	ai_accept = {
		base = -100
		modifier = {
			add = {
				value = scope:actor.diplomacy
				multiply = 2
			}
			desc = DS_DIPLOMACY_ACTOR
		}
		modifier = {
			add = 1000
			scope:hook = yes
			desc = HOOOK_USED_TXT
		}
		modifier = {
			add = 100
			scope:mana_siphon_gold = yes
			desc = OFFEERED_PAYMENT
		}
		modifier = {
			add = 20
			scope:recipient = {
				is_close_family_of = scope:actor
			}
			desc = CLOSE_FAMILY_REASON
		}
		modifier = { # Say no to rivals
			add = -100
			scope:recipient = {
				has_relation_rival = scope:actor
				NOT = { has_relation_nemesis = scope:actor }
			}
			desc = "ACTOR_RIVAL_TO_ME_REASON"
		}
		modifier = { # Say no to nemesis
			add = -300
			scope:recipient = {
				has_relation_nemesis = scope:actor
			}
			desc = "ACTOR_NEMESIS_TO_ME_REASON"
		}
		opinion_modifier = { # Opinion Factor
			who = scope:recipient
			opinion_target = scope:actor
			multiplier = 1
			desc = AI_OPINION_REASON
		}
		modifier = {
			add = 20
			scope:actor = {
				any_courtier_or_guest = { this = scope:recipient }
			}
			desc = DS_IS_VASSAL
		}
		modifier = {
			add = 10
			scope:recipient = {
				is_lowborn = yes
				NOT = {
					has_character_flag = special_magic_character
				}
			}
			desc = DS_I_AM_NOBODY
		}
		modifier = {
			add = -100
			scope:recipient = {
				OR = {
					has_trait = archmage
					has_focus = arcane_focus
				}
			}
			desc = DS_IS_MAGIC_USER
		}
		modifier = {
			add = intimidated_halved_reason_value
			scope:recipient = {
				target_is_liege_or_above = scope:actor
				has_dread_level_towards = {
					target = scope:actor
					level = 1
				}
			}
			desc = INTIMIDATED_REASON
		}
		modifier = {
			add = intimidated_external_reason_value
			scope:recipient = {
				NOT = { target_is_liege_or_above = scope:actor }
				has_dread_level_towards = {
					target = scope:actor
					level = 1
				}
			}
			desc = INTIMIDATED_REASON
		}
	}
	send_options_exclusive = no
	auto_accept = no
}

mage_duel = {
	is_shown = {
		NOT = { scope:recipient = scope:actor }
		scope:actor = {	
			is_imprisoned = no
			has_trait = archmage
		}
		scope:recipient = {
			is_imprisoned = no
			OR = {
				has_trait = archmage
				has_trait = demon
				has_trait = yaga
			}
		}
	}
	is_valid_showing_failures_only = {
		scope:actor = {
			custom_description = {
				text = is_incapable_custom
				NOT = { has_trait = incapable }
			}
		}
		scope:actor = {
			custom_description = {
				text = is_away_from_home
				location = capital_province
			}
		}
		scope:recipient = {
			custom_description = {
				text = is_away_from_home2
				OR = {
					AND = {
						is_landed = yes
						location = capital_province
					}
					is_landed = no
				}
			}
		}
		scope:recipient = {
			custom_description = {
				text = is_incapable_custom2
				NOT = { has_trait = incapable }
			}
		}
		scope:actor = {
			custom_description = {
				text = power_needed_custom
				OR = {
					can_spend_standard_ps_trigger = yes
					AND = {
						can_spend_standard_ps_trigger = no
						has_trait = yaga
					}
				}
				
			}
		}
	}
	icon = icon_mage
	ai_maybe = no
	ai_min_reply_days = 1
	ai_max_reply_days = 1
	common_interaction = yes
	interface_priority = 100
	category = interaction_category_magic
	desc = mage_duel_desc
	greeting = negative
	#notification_text = MANA_SIPHON_PROPOSAL
	notification_text = {
		first_valid = {
			triggered_desc = {
				trigger = {
					scope:mage_duel_my_place = yes
				}
				desc = MAGE_DUEL_PROPOSAL1
			}
			desc = MAGE_DUEL_PROPOSAL2
		}
	}
	cooldown_against_recipient = { years = 1 } 
	cooldown = { months = 1 }
	#can_send_despite_rejection = yes
	popup_on_receive = yes
	pause_on_receive = yes
	use_diplomatic_range = yes
	
	on_accept = {
		scope:actor = {
			send_interface_message = {
				type = event_generic_neutral
				title = mage_duel
				left_icon = scope:actor
				right_icon = scope:recipient
				
				if = {
					limit = {
						scope:mage_duel_my_place = yes
					}
					custom_tooltip = mage_duel_duel_ct1
					save_scope_as = defender
					scope:recipient = {
						save_scope_as = attacker
						if = {
							limit = {
								scope:actor.location = scope:recipient.location
							}
							trigger_event = magic_ev5.27
						}
						else = {
							custom_tooltip = mage_duel_travel_ct
							start_travel_plan = {
								destination = scope:actor.capital_province
								on_arrival_event = magic_ev5.27
								players_use_planner = no
							}
						}
					}
				}
				else_if = {
					limit = {
						scope:mage_duel_your_place = yes
					}
					
					save_scope_as = attacker
					scope:recipient = {
						save_scope_as = defender
						custom_tooltip = mage_duel_duel_ct
					}
					if = {
						limit = {
							scope:actor.location = scope:recipient.location
						}
						trigger_event = magic_ev5.27
					}
					else = {
						custom_tooltip = mage_duel_travel_ct
						start_travel_plan = {
							destination = scope:recipient.capital_province
							on_arrival_event = magic_ev5.27
							players_use_planner = no
						}
					}
				}
				if = {
					limit = {
						has_trait = archmage
						has_trait_xp = {
							trait = archmage
							track = power_saturation
							value < 50
						}
					}
					custom_tooltip = mage_duel_duel_ct2
				}
				if = {
					limit = {
						has_full_magic_prot_trigger = yes
					}
					custom_tooltip = mage_duel_duel_ct4
				}
				if = {
					limit = {
						any_character_artifact = {
							OR = {
								has_variable = catalyst
								has_variable = singularity
								has_variable = dark_blade
							}
						}
					}
					custom_tooltip = mage_duel_duel_ct7
				}
				scope:recipient = {
					if = {
						limit = {
							has_trait = demon
							scope:actor = {
								NOT = {	has_trait = demon	}
							}
						}
						custom_tooltip = mage_duel_duel_ct3
					}
					if = {
						limit = {
							has_full_magic_prot_trigger = yes
						}
						custom_tooltip = mage_duel_duel_ct5
					}
					if = {
						limit = {
							is_legendary_mage_trigger = yes
						}
						custom_tooltip = mage_duel_duel_ct6
					}
					if = {
						limit = {
							any_character_artifact = {
								OR = {
									has_variable = catalyst
									has_variable = singularity
									has_variable = dark_blade
								}
							}
						}
						custom_tooltip = mage_duel_duel_ct8
					}
				}
			}
		}
	}
	#on_decline = {
	#}
	options_heading = mage_duel_option_title

	send_option = {
		is_valid = {
			scope:actor = {
				is_landed = yes
			}
		}
		flag = mage_duel_my_place
		localization = MAGE_DUEL_O1
	}
	send_option = {
		is_valid = {
			scope:recipient = {
				is_landed = yes
			}
		}
		flag = mage_duel_your_place
		localization = MAGE_DUEL_O2
	}
	
	ai_accept = {
		base = -50
		#modifier = {
		#	add = {
		#		value = scope:actor.diplomacy
		#		#multiply = 2
		#	}
		#	desc = DS_DIPLOMACY_ACTOR
		#}
		modifier = {
			add = 30
			scope:mage_duel_your_place = yes
			desc = IN_MY_PLACE
		}
		modifier = {
			add = 60
			scope:recipient = {
				has_relation_rival = scope:actor
				NOT = { has_relation_nemesis = scope:actor }
				NOT = {	has_trait = impatient	}
			}
			desc = "ACTOR_RIVAL_TO_ME_REASON"
		}
		modifier = {
			add = 100
			scope:recipient = {
				has_relation_nemesis = scope:actor
				NOT = {	has_trait = impatient	}
			}
			desc = "ACTOR_NEMESIS_TO_ME_REASON"
		}
		modifier = {
			add = 80
			scope:recipient = {
				has_relation_rival = scope:actor
				NOT = { has_relation_nemesis = scope:actor }
				has_trait = impatient
			}
			desc = "ACTOR_RIVAL_TO_ME_REASON"
		}
		modifier = {
			add = 120
			scope:recipient = {
				has_relation_nemesis = scope:actor
				has_trait = impatient
			}
			desc = "ACTOR_NEMESIS_TO_ME_REASON"
		}
		#modifier = {
		#	add = 30
		#	scope:recipient = {
		#		has_trait = arrogant
		#	}
		#	desc = DS_IS_ARROGANT
		#}
		modifier = {
			add = 30
			scope:recipient = {
				has_trait = ambitious
			}
			desc = DS_IS_AMBITIOUS
		}
		modifier = {
			add = 30
			scope:recipient = {
				has_trait = arrogant
			}
			desc = DS_IS_ARROGANT2
		}
		modifier = {
			add = 30
			scope:recipient = {
				has_trait = brave
			}
			desc = DS_IS_BRAVE
		}
		modifier = {
			add = 30
			scope:recipient = {
				has_trait = irritable
			}
			desc = DS_IS_IRRITABLE
		}
		modifier = {
			add = -50
			scope:recipient = {
				has_trait = archmage
				has_trait_xp = {
					trait = archmage
					track = power_saturation
					value < 50
				}
			}
			desc = DS_HAS_LOW_PS
		}
		modifier = {
			add = 10
			scope:recipient = {
				has_trait = archmage
				has_trait_xp = {
					trait = archmage
					track = power_saturation
					value > 99
				}
			}
			desc = DS_HAS_HIGH_PS
		}
		modifier = {
			add = -100
			scope:recipient = {
				has_trait = craven
			}
			desc = DS_IS_CRAVEN
		}
		modifier = {
			add = -30
			scope:recipient = {
				has_trait = content
			}
			desc = DS_IS_CONTENT
		}
		modifier = {
			add = -20
			scope:recipient = {
				has_trait = calm
			}
			desc = DS_IS_CALM
		}
		modifier = {
			add = 40
			scope:recipient = {
				has_trait = wrathful
			}
			desc = DS_IS_WRATH
		}
		modifier = {
			add = -150
			scope:actor = {
				OR = {
					is_legendary_mage_trigger = yes
					has_full_magic_prot_trigger = yes
					has_trait = demon
					AND = {
						has_trait = source3
						has_trait = archmage
					}
				}
			}
			scope:recipient = {
				NOR = {
					is_legendary_mage_trigger = yes
					has_full_magic_prot_trigger = yes
					has_character_flag = abraxas
					AND = {
						has_trait = source3
						has_trait = archmage
					}
				}
			}
			desc = DS_YOU_ARE_SO_STRONG
		}
		modifier = {
			add = 20
			scope:actor = {
				any_character_artifact = {
					has_variable = magic1
					count = 1
				}
			}
			scope:recipient = {
				NOT = {
					has_trait = greedy
					has_trait = generous
				}
			}
			desc = DS_WANT_MAGIC
		}
		modifier = {
			add = 40
			scope:actor = {
				any_character_artifact = {
					has_variable = magic1
					count > 1
				}
			}
			scope:recipient = {
				NOT = {
					has_trait = greedy
					has_trait = generous
				}
			}
			desc = DS_WANT_MAGIC
		}
		modifier = {
			add = 50
			scope:actor = {
				any_character_artifact = {
					has_variable = magic1
					count = 1
				}
			}
			scope:recipient = {
				has_trait = greedy
			}
			desc = DS_WANT_MAGIC
		}
		modifier = {
			add = 80
			scope:actor = {
				any_character_artifact = {
					has_variable = magic1
					count > 1
				}
			}
			scope:recipient = {
				has_trait = greedy
			}
			desc = DS_WANT_MAGIC
		}
		modifier = {
			add = 10
			scope:recipient = {
				has_trait = fickle
			}
			desc = DS_IS_FICKLE
		}
		modifier = {
			add = 20
			scope:recipient = {
				has_full_magic_prot_trigger = yes
			}
			scope:actor = {
				has_full_magic_prot_trigger = no
			}
			desc = DS_IS_CONFIDENT
		}
		modifier = {
			add = 30
			scope:recipient = {
				has_trait = sadistic
			}
			desc = DS_IS_SADISTIC
		}
		modifier = {
			add = 20
			scope:recipient = {
				has_trait = reckless
			}
			desc = DS_IS_RECKLESS
		}
		modifier = {
			add = 50
			scope:actor = {
				any_courtier = {
					this = scope:recipient
				}
			}
			#scope:recipient = {
			#	exists = liege
			#	liege = scope:actor
			#}
			desc = DS_IS_VASSAL
		}
		modifier = {
			add = 10
			scope:actor = {
				any_vassal = {
					this = scope:recipient
				}
			}
			desc = DS_IS_VASSAL
		}
		modifier = {
			add = 20
			scope:recipient = {
				OR = {
					has_trait = demon
					has_trait = callous
					is_at_war_with = scope:actor
				}
				NOR = {
					has_trait = compassionate
					has_trait = forgiving
					has_relation_best_friend = scope:actor
					has_relation_lover = scope:actor
					has_relation_friend = scope:actor
					has_relation_soulmate = scope:actor
				}
			}
			desc = DS_WANT_YOU_BURN
		}
	}
	#send_options_exclusive = no
	auto_accept = no
	ai_potential = {
		NOR = {
			has_trait = compassionate
			has_trait = craven
			has_trait = content
		}
	}
	ai_targets = {
		ai_recipients = neighboring_rulers
		ai_recipients = peer_vassals
		ai_recipients = vassals
		ai_recipients = liege
		ai_recipients = dynasty
		ai_recipients = war_enemies
		ai_recipients = scripted_relations
	}
	ai_frequency = 24
	ai_will_do = {
		base = 0
		modifier = {
			add = -200
			scope:recipient = {
				has_full_magic_prot_trigger = yes
			}
			scope:actor = {
				has_full_magic_prot_trigger = no
			}
		}
		modifier = {
			add = -200
			scope:recipient = {
				is_legendary_mage_trigger = yes
			}
			scope:actor = {
				is_legendary_mage_trigger = no
			}
		}
		modifier = {
			add = 30
			scope:actor = {
				OR = {
					is_legendary_mage_trigger = yes
					has_full_magic_prot_trigger = yes
					has_trait = demon
					AND = {
						has_trait = source3
						has_trait = archmage
					}
				}
			}
			scope:recipient = {
				NOR = {
					is_legendary_mage_trigger = yes
					has_full_magic_prot_trigger = yes
					has_trait = demon
					AND = {
						has_trait = source3
						has_trait = archmage
					}
				}
			}
		}
		modifier = {
			add = 50
			scope:recipient = {
				OR = {
					has_relation_rival = scope:actor
					has_relation_nemesis = scope:actor
					#has_relation_potential_rival = scope:actor
					is_at_war_with = scope:actor
				}
			}
		}
		modifier = {
			add = 50
			scope:actor = {
				OR = {
					has_character_modifier = yaga_modifier
					has_character_modifier = yagas_blood_modifier
					has_trait = yaga
				}
				NOT = {
					has_witch_house_trigger = yes
				}
			}
			scope:recipient = {
				NOR = {
					has_character_modifier = yaga_modifier
					has_character_modifier = yagas_blood_modifier
					has_trait = yaga
				}
				has_witch_house_trigger = yes
			}
		}
		modifier = {
			add = -200
			scope:recipient = {
				OR = {
					has_relation_lover = scope:actor
					has_relation_friend = scope:actor
					has_relation_best_friend = scope:actor
					has_relation_soulmate = scope:actor
				}
			}
		}
		modifier = {
			add = -200
			OR = {
				AND = {
					scope:recipient = {
						has_trait = archmage
						has_trait_xp = {
							trait = archmage
							track = secret_knowledge
							value > 49
						}
					}
					scope:actor = {
						has_trait = archmage
						has_trait_xp = {
							trait = archmage
							track = secret_knowledge
							value < 50
						}
					}
				}
				AND = {
					scope:recipient = {
						has_trait = archmage
						has_trait_xp = {
							trait = archmage
							track = secret_knowledge
							value > 99
						}
					}
					scope:actor = {
						has_trait = archmage
						has_trait_xp = {
							trait = archmage
							track = secret_knowledge
							value < 100
						}
					}
				}
			}
		}
		modifier = {
			add = 60
			scope:actor = {
				has_trait = greedy
			}
			scope:recipient = {
				any_character_artifact = {
					has_variable = magic1
				}
			}
		}
		modifier = {
			add = 10
			scope:actor = {
				OR = {
					has_trait = sadistic
					has_trait = irritable
					has_trait = lifestyle_blademaster
				}
			}
		}
	}
}