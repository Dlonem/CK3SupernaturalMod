abdicate_decision = {
	picture = "gfx/interface/illustrations/decisions/fp2_decision_struggle_compromise.dds"
	
	desc = abdicate_desc

	is_shown = {
		is_landed = yes
		highest_held_title_tier > tier_barony
		is_imprisoned = no
	}
	cost={
		renown=200
	}
	effect = {
		depose=yes
		# Add effects of the decision here.
		every_held_title = {
			save_temporary_scope_as = abdicator_title
			every_claimant = {
				limit = { has_weak_claim_on = scope:abdicator_title }
				make_claim_strong = scope:abdicator_title
			}
		}

	}

	ai_check_interval = 0 # Change this value if you want the AI to consider this decision.
}

forbidden_ritual_decision = {
	picture = "gfx/interface/illustrations/decisions/decision_personal_religious.dds"
	
	desc = forbidden_ritual_decision_desc

	is_shown = {
		has_perk = forbidden_ritual_p7_perk
		is_imprisoned = no
		NOR = {
			has_character_modifier = power_saturated1
			has_character_modifier = power_saturated2
		}
	}
	is_valid_showing_failures_only = {
		custom_description = {
			text = is_incapable_custom
			NOT = { has_trait = incapable }
		}
	}

	cooldown = { months = 6 }
	ai_will_do = {
                        base = 80
                        modifier = {
			    add = -70
                            has_trait = source
                        }
                     }

	effect = {
		save_scope_as = this0
		trigger_event = magic_ev.6
		#trigger_event = magic_ev.200
		#custom_tooltip = forbidden_ritual_ct
		show_as_tooltip = {
			if = {
				limit = { has_character_modifier = power_saturated2 }
				remove_character_modifier = power_saturated2
			}
			else_if = { limit = { has_character_modifier = power_saturated1 }
				remove_character_modifier = power_saturated1
			}
		}
		hidden_effect = {
			if = {
				limit = {
					is_ai = no
				}
				random = {
					chance = 25
					trigger_event = {
						id = magic_ev2.58
						days = { 1 20 }
					}
				}
			}
		}
	}

	#effect = {	
	#	
	#}
	ai_check_interval = 9
}

magic_triangulation_decision = {
	picture = "gfx/interface/illustrations/decisions/decision_study_book.dds"

	desc = magic_triangulation_decision_desc

	is_shown = {
		OR = {
			has_perk = warlock_perk
			has_perk = magic_triangulation_p5_perk
		}
		is_imprisoned = no
		#any_living_character = {
		#	limit = {
		#		AND = {
		#			NOT = { this = root }
		#			any_character_artifact = { has_variable = magic1 }
		#		}
		#	}
		#	count > 0
		#}
		any_living_character = {
			NOT = { this = root }
			any_character_artifact = { has_variable = magic1 }
			count > 0
		}
		
	}

	is_valid_showing_failures_only = {
		custom_description = {
			text = power_needed_custom
			OR = {
				has_character_modifier = power_saturated1
				has_character_modifier = power_saturated2
			}
		}
		custom_description = {
			text = is_incapable_custom
			NOT = { has_trait = incapable }
		}
	}
	cooldown = { months = 1 }
	ai_will_do = {
		base = 50
		modifier = {
			add = -150
			OR = {
				any_relation = {
					type = rival
					any_character_artifact = { has_variable = magic1 }
				}
				any_relation = {
					type = nemesis
					any_character_artifact = { has_variable = magic1 }
				}
				any_relation = {
					type = friend
					any_character_artifact = { has_variable = magic1 }
				}
				any_relation = {
					type = best_friend
					any_character_artifact = { has_variable = magic1 }
				}
				any_relation = {
					type = lover
					any_character_artifact = { has_variable = magic1 }
				}
				any_relation = {
					type = soulmate
					any_character_artifact = { has_variable = magic1 }
				}
			}
		}
	}

	effect = {
		#save_scope_as = this0
		trigger_event = magic_ev.9
		
		custom_tooltip = magic_triangulation_ct
		random = {
			chance = 50
			if = {
				limit = { has_character_modifier = power_saturated2 }
				remove_character_modifier = power_saturated2
			}
			else_if = { limit = { has_character_modifier = power_saturated1 }
				remove_character_modifier = power_saturated1
			}
		}
	}
	ai_check_interval = 36
}

summon_demon_decision = {
	picture = "decision_personal_religious.dds"
	
	desc = summon_demon_decision_desc
	picture = "gfx/interface/illustrations/decisions/decision_personal_religious.dds"
	is_shown = {
		has_perk = summoner_p8_perk
		is_imprisoned = no
	}

	is_valid_showing_failures_only = {
		custom_description = {
			text = power_needed_custom
			OR = {
				has_character_modifier = power_saturated1
				has_character_modifier = power_saturated2
			}
		}
		custom_description = {
			text = is_incapable_custom
			NOT = { has_trait = incapable }
		}
	}
	cooldown = { months = 1 }
	ai_will_do = { base = 80 }

	effect = {
		save_scope_as = this0
		trigger_event = magic_ev.12
		
		custom_tooltip = summon_demon_ct
		if = {
			limit = { has_character_modifier = power_saturated2 }
			show_as_tooltip = {
				remove_character_modifier = power_saturated2
			}
		}
		else_if = { limit = { has_character_modifier = power_saturated1 }
			show_as_tooltip = {
				remove_character_modifier = power_saturated1
			}
		}

	}
	ai_check_interval = 24
}

study_blackgrimoire_decision = {
	desc = study_blackgrimoire_decision_desc
	picture = "gfx/interface/illustrations/decisions/decision_personal_religious.dds"
	is_shown = {
		any_character_artifact = { has_variable = blackgrimoire }
		is_imprisoned = no
		is_adult = yes
		NOR = {
			has_trait = witch
			any_secret = { secret_type = secret_witch }
			#has_trait = true_witch
		}
	}

	#is_valid_showing_failures_only = {
	#
	#}
	cooldown = { years = 1 }
	ai_will_do = {
		base = 100
		modifier = {
			add = -150
			has_trait = zealous
		}
	}

	effect = {
		#save_scope_as = this0
		add_secret = {
			type = secret_witch
			target = root
		}
		if = {
			limit = {
				is_ai = yes
			}
			set_focus = witch_focus
			hidden_effect = {
				add_magic_lifestyle_perk_points = 4
			}
		}

	}
	ai_check_interval = 24
}

create_potion_decision = {
	desc = prepare_potion_decision_desc
	picture = "gfx/interface/illustrations/decisions/decision_personal_religious.dds"
	is_shown = {
		OR = {
			has_trait = witch
			any_secret = { secret_type = secret_witch }
		}
		has_trait = lifestyle_herbalist
	}
	is_valid_showing_failures_only = {
		custom_description = {
			text = is_incapable_custom
			NOT = { has_trait = incapable }
		}
	}
	cooldown = { years = 4 }
	ai_will_do = { base = 80 }
	cost = {
		gold = potion_gold_value
	}
	effect = {
		trigger_event = magic_ev2.41
		custom_tooltip = create_potion_decision_ct
	}
	ai_check_interval = 24
}

drink_pot1_decision = {
	desc = drink_pot1_decision_desc
	picture = "gfx/interface/illustrations/decisions/decision_personal_religious.dds"
	is_shown = {
		any_character_artifact = { has_variable = pot1 }
	}
	is_valid_showing_failures_only = {
		custom_description = {
			text = you_are_healthy
			OR = {
				has_trait = ill
				has_trait = pneumonic
				has_trait = great_pox
				has_trait = early_great_pox
				has_trait = lovers_pox
				has_trait = leper
				has_trait = wounded_1
				has_trait = wounded_2
				has_trait = wounded_3
				has_trait = maimed
				has_trait = infirm
				has_trait = incapable
				has_trait = gout_ridden
				has_trait = consumption
				has_trait = cancer
				has_trait = typhus
				has_trait = bubonic_plague
				has_trait = smallpox
				has_trait = sickly
				has_trait = blind
				has_trait = lunatic_1
				has_trait = lunatic_genetic
				has_trait = one_eyed
				has_trait = one_legged
				has_trait = disfigured
				has_trait = infertile
				has_trait = bleeder
				has_trait = wheezing
				has_trait = impotent
				has_trait = inbred
			}
		}
		
	}
	cooldown = { days = 1 }
	ai_will_do = { base = 99 }

	effect = {
					if = { limit = { has_trait = disfigured }
						remove_trait = disfigured
					}
					if = { limit = { has_trait = inbred }
						remove_trait = inbred
					}
					if = { limit = { has_trait = impotent }
						remove_trait = impotent
					}
					if = { limit = { has_trait = bleeder }
						remove_trait = bleeder
					}
					if = { limit = { has_trait = wheezing }
						remove_trait = wheezing
					}
					if = { limit = { has_trait = infertile }
						remove_trait = infertile
					}
					if = { limit = { has_trait = one_legged }
						remove_trait = one_legged
					}
					if = { limit = { has_trait = one_eyed }
						remove_trait = one_eyed
					}
					if = { limit = { has_trait = lunatic_genetic }
						remove_trait = lunatic_genetic
					}
					if = { limit = { has_trait = lunatic_1 }
						remove_trait = lunatic_1
					}
					if = { limit = { has_trait = ill }
						remove_trait = ill
					}
					if = { limit = { has_trait = pneumonic }
						remove_trait = pneumonic
					}
					if = { limit = { has_trait = great_pox }
						remove_trait = great_pox
					}
					if = { limit = { has_trait = early_great_pox }
						remove_trait = early_great_pox
					}
					if = { limit = { has_trait = lovers_pox }
						remove_trait = lovers_pox
					}
					if = { limit = { has_trait = leper }
						remove_trait = leper
					}
					if = { limit = { has_trait = wounded_1 }
						remove_trait = wounded_1
					}
					if = { limit = { has_trait = wounded_2 }
						remove_trait = wounded_2
					}
					if = { limit = { has_trait = wounded_3 }
						remove_trait = wounded_3
					}
					if = { limit = { has_trait = maimed }
						remove_trait = maimed
					}
					if = { limit = { has_trait = infirm }
						remove_trait = infirm
					}
					if = { limit = { has_trait = incapable }
						remove_trait = incapable
					}
					if = { limit = { has_trait = gout_ridden }
						remove_trait = gout_ridden
					}
					if = { limit = { has_trait = consumption }
						remove_trait = consumption
					}
					if = { limit = { has_trait = cancer }
						remove_trait = cancer
					}
					if = { limit = { has_trait = typhus }
						remove_trait = typhus
					}
					if = { limit = { has_trait = bubonic_plague }
						remove_trait = bubonic_plague
					}
					if = { limit = { has_trait = smallpox }
						remove_trait = smallpox
					}
					if = { limit = { has_trait = sickly }
						remove_trait = sickly
					}
					if = { limit = { has_trait = blind }
						remove_trait = blind
					}
					random_character_artifact = {
						limit = {
							has_variable = pot1
						}
						destroy_artifact = this
					}
	}
	ai_check_interval = 12
}

drink_pot2_decision = {
	desc = drink_pot2_decision_desc
	picture = "gfx/interface/illustrations/decisions/decision_personal_religious.dds"
	is_shown = {
		any_character_artifact = { has_variable = pot2 }
	}
	is_valid_showing_failures_only = {
		custom_description = {
			text = you_are_saturated
			NOR = {
				has_character_modifier = power_saturated1
				has_character_modifier = power_saturated2
			}
		}
		
	}
	cooldown = { days = 1 }
	ai_will_do = {
		base = 1
		modifier = {
			add = 99
			OR = {
				has_trait = archmage
				has_focus = arcane_focus
			}
			
		}
	}

	effect = {
					if = { limit = { has_perk = combat_spells_p3_perk }
						add_character_modifier = power_saturated2
					}
					else = {
						add_character_modifier = power_saturated1
					}
					random_character_artifact = {
						limit = {
							has_variable = pot2
						}
						destroy_artifact = this
					}
	}
	ai_check_interval = 12
}

drink_pot3_decision = {
	desc = drink_pot3_decision_desc
	picture = "gfx/interface/illustrations/decisions/decision_personal_religious.dds"
	is_shown = {
		any_character_artifact = { has_variable = pot3 }
	}
	is_valid_showing_failures_only = {
		custom_description = {
			text = you_are_herculean
			NOT = {
				has_trait = physique_good_3
			}
		}
		
	}
	cooldown = { days = 1 }
	ai_will_do = { base = 99 }

	effect = {
					random_list = {
						10 = {
							if = {
								limit = {
									has_trait = physique_bad_3
								}
								remove_trait = physique_bad_3
							}
							else_if = {
								limit = {
									has_trait = physique_bad_2
								}
								remove_trait = physique_bad_2
							}
							else_if = {
								limit = {
									has_trait = physique_bad_1
								}
								remove_trait = physique_bad_1
							}
							else_if = {
								limit = {
									has_trait = physique_good_1
								}
								remove_trait = physique_good_1
							}
							else_if = {
								limit = {
									has_trait = physique_good_2
								}
								remove_trait = physique_good_2
							}
							add_trait_force_tooltip = physique_good_3
							add_trait_force_tooltip = strong
							add_trait_force_tooltip = athletic
							add_prowess_skill = 3
						}
						50 = {
							if = {
								limit = {
									has_trait = physique_bad_3
								}
								remove_trait = physique_bad_3
							}
							else_if = {
								limit = {
									has_trait = physique_bad_2
								}
								remove_trait = physique_bad_2
							}
							else_if = {
								limit = {
									has_trait = physique_bad_1
								}
								remove_trait = physique_bad_1
							}
							else_if = {
								limit = {
									has_trait = physique_good_1
								}
								remove_trait = physique_good_1
							}
							add_trait_force_tooltip = physique_good_2
							add_trait_force_tooltip = strong
							if = {
								limit = {
									has_trait = fecund
								}
								remove_trait = fecund
							}
							add_trait_force_tooltip = infertile
							add_prowess_skill = 2
						}
						25 = {
							if = {
								limit = {
									has_trait = physique_bad_3
								}
								remove_trait = physique_bad_3
							}
							else_if = {
								limit = {
									has_trait = physique_bad_2
								}
								remove_trait = physique_bad_2
							}
							else_if = {
								limit = {
									has_trait = physique_bad_1
								}
								remove_trait = physique_bad_1
							}

							add_trait_force_tooltip = physique_good_1
							add_trait_force_tooltip = strong
							if = {
								limit = {
									has_trait = fecund
								}
								remove_trait = fecund
							}
							add_trait_force_tooltip = infertile
							add_prowess_skill = 1
						}
						10 = {
							if = {
								limit = {
									has_trait = physique_bad_3
								}
								remove_trait = physique_bad_3
							}
							else_if = {
								limit = {
									has_trait = physique_bad_2
								}
								remove_trait = physique_bad_2
							}
							else_if = {
								limit = {
									has_trait = physique_bad_1
								}
								remove_trait = physique_bad_1
							}
							add_trait_force_tooltip = physique_good_1
							add_trait_force_tooltip = strong
							if = {
								limit = {
									has_trait = fecund
								}
								remove_trait = fecund
							}
							add_trait_force_tooltip = infertile
							add_trait_force_tooltip = disfigured
						}
						5 = {
							if = {
								limit = {
									has_trait = physique_good_3
								}
								remove_trait = physique_good_3
							}
							else_if = {
								limit = {
									has_trait = physique_good_2
								}
								remove_trait = physique_good_2
							}
							else_if = {
								limit = {
									has_trait = physique_good_1
								}
								remove_trait = physique_good_1
							}
							add_trait_force_tooltip = physique_bad_1
							add_trait_force_tooltip = weak
							if = {
								limit = {
									has_trait = fecund
								}
								remove_trait = fecund
							}
							add_trait_force_tooltip = infertile
							add_trait_force_tooltip = disfigured
							add_prowess_skill = -1
						}
					}
					random_character_artifact = {
						limit = {
							has_variable = pot3
						}
						destroy_artifact = this
					}
	}
	ai_check_interval = 12
}

drink_pot4_decision = {
	desc = drink_pot4_decision_desc
	picture = "gfx/interface/illustrations/decisions/decision_personal_religious.dds"
	is_shown = {
		any_character_artifact = { has_variable = pot4 }
	}

	cooldown = { days = 1 }
	ai_will_do = { base = 99 }

	effect = {
		#save_scope_as = pot_drinker
		custom_tooltip = drink_pot4_decision_ct
		random_character_artifact = {
			limit = {
				has_variable = pot4
				}
			destroy_artifact = this
		}
		trigger_event = magic_ev2.42
	}
	ai_check_interval = 12
}

esoteric_training_decision = {
	desc = esoteric_training_decision_desc
	picture = "gfx/interface/illustrations/decisions/decision_personal_religious.dds"
	is_shown = {
		exists = dynasty
		dynasty = {
			has_dynasty_perk = witchcraft_legacy_2
		}
		is_adult = yes
	}
	is_valid_showing_failures_only = {
		custom_description = {
			text = is_incapable_custom
			NOT = { has_trait = incapable }
		}
	}
	cooldown = { years = 40 }
	ai_will_do = { base = 99 }
	cost = {
		gold = potion_gold_value
	}
	effect = {
		random_list = {
			10 = {
				if = {
					limit = {
						has_trait = mystic_1
					}
					hidden_effect = {
						remove_trait = mystic_1
					}
					add_trait_force_tooltip = mystic_2
				}
				else_if = {
					limit = {
						has_trait = mystic_2
					}
					hidden_effect = {
						remove_trait = mystic_2
					}
					add_trait_force_tooltip = mystic_3
				}
				else_if = {
					limit = {
						has_trait = mystic_3
					}
					send_interface_toast = {
						title = esoteric_training_decision_toast
						add_learning_skill = 2
					}
				}
				else = {
					add_trait_force_tooltip = mystic_1
				}
			}
			10 = {
				trigger = {
					NAND = {
						has_trait = true_witch
						has_trait = archmage
					}
				}
				if = {
					limit = {
						NOR = {
							has_trait = witch
							any_secret = { secret_type = secret_witch }
						}
					}
					add_secret = {
						type = secret_witch
						target = root
					}
					if = {
						limit = {
							is_ai = yes
						}
						set_focus = witch_focus
					}
				}
				custom_tooltip = gain_mystic_perk
				hidden_effect = {
					add_magic_lifestyle_perk_points=1
				}
				
			}
			10 = {
				trigger = {
					NAND = {
						has_trait = whole_of_body
						has_trait = scholar
						has_trait = theologian
					}
				}
				custom_tooltip = gain_learning_perk
				hidden_effect = {
					add_learning_lifestyle_perk_points=1
				}
				
			}
		}
	}
	ai_check_interval = 60
}

press_court_mage_decision = {
	desc = press_court_mage_decision_desc
	picture = "gfx/interface/illustrations/decisions/decision_personal_religious.dds"
	is_shown = {
		employs_court_position = mage_court_position
		NOT = {
			any_court_position_holder = {
				type = mage_court_position
				is_at_war_with = root
			}
		}
	}

	cooldown = { years = 6 }
	ai_will_do = { base = 40 }

	effect = {
		#save_scope_as = pot_drinker
		custom_tooltip = press_court_mage_decision_ct
		random_court_position_holder = {
			type = mage_court_position
			trigger_event = magic_ev2.61
		}
		
	}
	ai_check_interval = 18
}

study_singularity_decision = {
	desc = study_singularity_decision_desc
	picture = "gfx/interface/illustrations/decisions/decision_personal_religious.dds"
	is_shown = {
		any_character_artifact = { has_variable = singularity has_variable = singularity_sleeping }
		is_imprisoned = no
		is_adult = yes
		NOT = { has_character_flag = sing_end }
		#NOT = {
		#	any_living_character = {
		#		has_character_flag = sing_end
		#	}
		#}
	}
	is_valid_showing_failures_only = {
		
		custom_description = {
			text = is_incapable_custom
			NOT = { has_trait = incapable }
		}
		custom_description = {
			text = is_scholar_mage_custom
			OR = {
				has_trait = mystic_2
				has_trait = mystic_3
				has_trait = scholar
				has_trait = archmage
				has_trait = archmage2
			}
		}
	}
	cooldown = { years = 10 }
	ai_will_do = { base = 50 }

	effect = {
		#custom_tooltip = press_court_mage_decision_ct
		trigger_event = {
			id = magic_ev2.66
			days = 2
		}
		
	}
	ai_check_interval = 12
}

magic_epic_decision = {
	desc = magic_epic_decision_desc
	picture = "gfx/interface/illustrations/decisions/decision_personal_religious.dds"
	is_shown = {
		has_trait = archmage
		is_imprisoned = no
		is_adult = yes
		
	}

	is_valid_showing_failures_only = {
		custom_description = {
			text = is_scholar_custom
			has_trait = scholar
		}
	}

	cost = {
		gold = medium_gold_value
	}

	cooldown = { years = 50 }
	ai_will_do = {
		base = 50
	}

	effect = {
		custom_tooltip = magic_epic_decision_ct
		trigger_event = magic_ev3.22
	}
	ai_check_interval = 24
}

magic_transmutation_decision = {
	desc = magic_transmutation_decision_desc
	picture = "gfx/interface/illustrations/decisions/decision_personal_religious.dds"
	is_shown = {
		has_trait = archmage
		is_imprisoned = no
		is_adult = yes
		has_character_flag = magic_transmutation
	}

	is_valid_showing_failures_only = {
		custom_description = {
			text = power_needed_custom
			OR = {
				has_character_modifier = power_saturated1
				has_character_modifier = power_saturated2
			}
		}
		custom_description = {
			text = is_incapable_custom
			NOT = { has_trait = incapable }
		}
	}

	cooldown = { years = 1 }
	ai_will_do = {
		base = 50
	}

	effect = {
		hidden_effect = {
			send_message_4_magic_sense_effect = yes
		}
		custom_tooltip = use_magic_custom_tooltip
		if = { limit = { has_character_modifier = power_saturated1 }
			remove_character_modifier = power_saturated1
		}
		if = { limit = { has_character_modifier = power_saturated2 }
			remove_character_modifier = power_saturated2
		}
		add_gold = greedy_gold_value
	}
	ai_check_interval = 24
}

magic_defence_decision = {
	desc = magic_defence_decision_desc
	picture = "gfx/interface/illustrations/decisions/decision_personal_religious.dds"
	is_shown = {
		has_trait = archmage
		is_imprisoned = no
		is_adult = yes
		has_character_flag = protection_ritual
	}

	is_valid_showing_failures_only = {
		custom_description = {
			text = power_needed_custom
			OR = {
				has_character_modifier = power_saturated1
				has_character_modifier = power_saturated2
			}
		}
		custom_description = {
			text = is_incapable_custom
			NOT = { has_trait = incapable }
		}
	}

	cooldown = { years = 1 }
	ai_will_do = {
		base = 50
	}

	effect = {
		hidden_effect = {
			send_message_4_magic_sense_effect = yes
		}
		custom_tooltip = use_magic_custom_tooltip
		if = { limit = { has_character_modifier = power_saturated1 }
			remove_character_modifier = power_saturated1
		}
		if = { limit = { has_character_modifier = power_saturated2 }
			remove_character_modifier = power_saturated2
		}
		add_character_modifier = {
			modifier = amp_modifier
			years = 10
		}
		add_character_modifier = {
			modifier = master_defence_modifier
			years = 10
		}
	}
	ai_check_interval = 24
}

travel_to_stars_decision = {
	desc = travel_to_stars_decision_desc
	picture = "gfx/interface/illustrations/decisions/decision_personal_religious.dds"
	is_shown = {
		has_trait = archmage
		is_imprisoned = no
		is_adult = yes
		has_character_flag = blorg_flag
	}

	is_valid_showing_failures_only = {
		custom_description = {
			text = power_needed_custom
			OR = {
				has_character_modifier = power_saturated1
				has_character_modifier = power_saturated2
			}
		}
		custom_description = {
			text = is_incapable_custom
			NOT = { has_trait = incapable }
		}
	}

	cooldown = { years = 1 }
	ai_will_do = {
		base = 50
	}

	effect = {
		custom_tooltip = use_magic_custom_tooltip
		if = { limit = { has_character_modifier = power_saturated1 }
			remove_character_modifier = power_saturated1
		}
		if = { limit = { has_character_modifier = power_saturated2 }
			remove_character_modifier = power_saturated2
		}
		depose = yes
		custom_tooltip = travel_to_stars_decision_ct
		hidden_effect = {
			death = {
				death_reason = death_disappearance
			}
		}
	}
	ai_check_interval = 24
}

call_witch_hunter_decision = {
	desc = call_witch_hunter_decision_desc
	picture = "gfx/interface/illustrations/decisions/decision_destiny_goal.dds"
	is_shown = {
		is_imprisoned = no
		is_adult = yes
		trait_is_criminal_in_faith_trigger = { TRAIT = witch FAITH = root.faith GENDER_CHARACTER = root }
		NOR = {
			has_trait = witch
			any_secret = { secret_type = secret_witch }
			has_trait = witch_hunter
		}
		NOT = {
			any_courtier_or_guest = {
				has_trait = witch_hunter
			}
		}
		OR = {
			any_courtier_or_guest = {
				has_trait = witch
				is_ai = yes
			}
			any_vassal_or_below = {
				has_trait = witch
				is_ai = yes
			}
			any_known_secret = {
				secret_type = secret_witch
			}
		}
		
	}

	#is_valid_showing_failures_only = {
	#	
	#}

	cooldown = { years = 5 }
	ai_will_do = {
		base = 0
	}

	effect = {
		trigger_event = magic_ev3.341
		custom_tooltip = call_witch_hunter_decision_ct
	}
	ai_check_interval = 0
}

witch_hunting_decision = {
	desc = witch_hunting_decision_desc
	picture = "gfx/interface/illustrations/decisions/decision_recruitment.dds"
	is_shown = {
		is_imprisoned = no
		is_adult = yes
		has_trait = witch_hunter
		OR = {
			has_perk = antimage_perk
			has_trait = witch_hunter #change to has_perk = witch_huntp1
		}
	}

	cooldown = { years = 3 }
	ai_will_do = {
		base = 0
	}

	effect = {
		
		custom_tooltip = witch_hunting_decision_ct
		hidden_effect = {
			random_list = {
				1 = { trigger_event = magic_ev3.63 }
				1 = { trigger_event = magic_ev3.65 }
			}
		}
	}
	ai_check_interval = 0
}

full_protection_decision = {
	desc = full_protection_decision_desc
	picture = "gfx/interface/illustrations/decisions/decision_invite_knights.dds"
	is_shown = {
		is_imprisoned = no
		is_adult = yes
		any_targeting_scheme = {
			is_scheme_exposed = yes
		}
	}

	#is_valid_showing_failures_only = {
	#	
	#}
	cost = {
		gold = demon_gold_value
		prestige = half_demon_gold_value
	}
	cooldown = { years = 3 }
	ai_will_do = {
		base = 0
	}

	effect = {
		add_character_modifier = {
			modifier = double_guards_modifier
			years = 3
		}
		if = {
			limit = {
				has_trait = paranoid
			}
			add_stress = minor_stress_loss
		}
		else = {
			#add_stress = minor_stress_gain
			if = {
				limit = {
					number_of_personality_traits < 4
					NOR = {
						has_trait = paranoid
						has_trait = trusting
					}
				}
				random = {
					chance = 10
					add_trait = paranoid
				}
			}
		}
		
	}
	ai_check_interval = 0
}

#test_test_decision = {
#
#	desc = test_test_decision_desc
#	picture = "gfx/interface/illustrations/decisions/decision_personal_religious.dds"
#	is_shown = {
#		is_ai = no
#	}
	
	#is_valid_showing_failures_only = {
	#
	#}
	#cooldown = { years = 1 }
#	ai_will_do = { base = 0 }
#
#	effect = {
#		save_scope_as = this0
		#add_perk = magical_experiments_p1_perk
		#if = {
		#	limit = {
		#		NOT = { has_trait = source }
		#	}
		#	add_secret = {
		#		type = secret_witch
		#		target = root
		#	}
		#	add_magic_lifestyle_perk_points=10
		#	add_trait = source
		#}
#		add_trait = brave
#		add_trait = scholar
#		add_prowess_skill = 10
#		create_blackgrimoire_artifact_effect = { OWNER = root }
#		add_magic_lifestyle_perk_points=10
#		add_trait = mystic_2
#		random_vassal = {
#			add_trait = witch
#		}
		#create_ancient_singularity_effect = { OWNER = scope:root }
		#trigger_event = magic_ev.9
		#add_character_flag = singularity_solved
		#trigger_event = magic_ev2.73
#	}
#	ai_check_interval = 0
#}