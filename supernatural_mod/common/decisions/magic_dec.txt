abdicate_decision = {
	picture = {
		reference = "gfx/interface/illustrations/decisions/fp2_decision_struggle_compromise.dds"
	}
	desc = abdicate_desc

	is_shown = {
		is_landed_or_landless_administrative = yes
		highest_held_title_tier > tier_barony
		is_imprisoned = no
	}
	cost={
		renown=200
	}
	effect = {
		hidden_effect = {
			if = {
				limit = {
					exists = house
					exists = player_heir
					house = player_heir.house
					house.house_head = ROOT
				}
				house = {
					#set_house_head = root.player_heir
					save_scope_as = my_house
				}
				player_heir = {
					save_scope_as = my_heir
				}
			}
		}
		
		depose=yes
		# Add effects of the decision here.
		every_held_title = {
			save_temporary_scope_as = abdicator_title
			every_claimant = {
				limit = { has_weak_claim_on = scope:abdicator_title }
				make_claim_strong = scope:abdicator_title
			}
		}
		if = {
			limit = {
				exists = scope:my_house
				exists = scope:my_heir
			}
			scope:my_house = {
				set_house_head = scope:my_heir
			}
		}
	}

	ai_check_interval = 0 # Change this value if you want the AI to consider this decision.
}

forbidden_ritual_decision = {
	picture = {
		reference = "gfx/interface/illustrations/decisions/decision_personal_religious.dds"
	}
	desc = forbidden_ritual_decision_desc

	is_shown = {
		has_perk = forbidden_ritual_p7_perk
		is_imprisoned = no
		can_be_power_saturated_trigger = yes
		NOT = {
			has_character_flag = good_one_magic_flag
		}
	}
	is_valid_showing_failures_only = {
		custom_description = {
			text = is_incapable_custom
			NOT = { has_trait = incapable }
		}
		custom_description = {
			text = has_magic_flu
			NOT = {
				has_character_modifier = magic_flu_modifier
			}
		}
	}

	cooldown = { months = 5 }
	ai_will_do = {
        base = 80
        modifier = {
		    add = -75
            has_trait = source
			has_trait_xp = {
				trait = source
				track = magic_potential
				value > 19
			}
         }
    }

	effect = {
		save_scope_as = this0
		trigger_event = magic_ev.6
		#trigger_event = magic_ev.200
		#custom_tooltip = forbidden_ritual_ct
		show_as_tooltip = {
			gain_standard_ps_effect = yes
			#gain_sc_xp2_effect = yes
		}
		hidden_effect = {
			if = {
				limit = {
					is_ai = no
				}
				random = {
					chance = 25
					trigger_event = {
						id = magic_ev2.58
						days = { 1 20 }
					}
				}
			}
		}
	}

	#effect = {	
	#	
	#}
	ai_check_interval = 9
}

magic_triangulation_decision = {
	picture = {
		reference = "gfx/interface/illustrations/decisions/decision_personal_religious.dds"
	}
	desc = magic_triangulation_decision_desc

	is_shown = {
		OR = {
			has_perk = warlock_perk
			has_perk = magic_triangulation_p5_perk
		}
		is_imprisoned = no

		#OR = {
		#	any_living_character = {
		#		NOT = { this = root }
		#		any_character_artifact = { has_variable = magic1 }
		#		#count > 0
		#	}
		#	AND = {
		#		is_landed_or_landless_administrative = yes
		#		any_ruler = {
		#			NOT = { this = root }
		#			is_landed_or_landless_administrative = yes
		#			has_power_place_trigger = yes
		#		}
		#	}
		#}
		OR = {
			#any_character_artifact = {
			#	has_variable = magic1
			#	count<8
			#}
			any_artifact = {
				has_variable = magic1
				NOT = { artifact_owner = ROOT }
			}
			
			any_held_county = {
				exists = title_province
				title_province = {
					OR = {
						has_building_or_higher = witch_house
						has_building_or_higher = horned_god_house
						has_building_or_higher = mage_house
					}
				}
				count<3
			}
		}
	}

	is_valid_showing_failures_only = {
		custom_description = {
			text = power_needed_custom
			OR = {
				can_spend_standard_ps_trigger = yes
				has_trait = archmage
			}
			
		}
		custom_description = {
			text = is_incapable_custom
			NOT = { has_trait = incapable }
		}
	}
	cost = {
		gold = potion_gold_value
	}
	cooldown = { months = 24 }
	ai_will_do = {
		base = 50
		modifier = {
			add = -150
			OR = {
				any_relation = {
					type = rival
					any_character_artifact = { has_variable = magic1 }
				}
				any_relation = {
					type = nemesis
					any_character_artifact = { has_variable = magic1 }
				}
				any_relation = {
					type = friend
					any_character_artifact = { has_variable = magic1 }
				}
				any_relation = {
					type = best_friend
					any_character_artifact = { has_variable = magic1 }
				}
				any_relation = {
					type = lover
					any_character_artifact = { has_variable = magic1 }
				}
				any_relation = {
					type = soulmate
					any_character_artifact = { has_variable = magic1 }
				}
			}
		}
		modifier = {
			add = -150
			gold < potion_gold_value
		}
	}

	effect = {
		#trigger_event = magic_ev.9
		set_spell_id = { ID = 20 }
		trigger_event = magic_ev4.82
		#gain_sc_xp1_effect = yes
		custom_tooltip = magic_triangulation_ct
		if = {
			limit = {
				NOT = {
					has_trait = archmage
				}
			}
			spend_standard_ps_effect = yes
			metamagic_effect = yes
		}
	}
	ai_check_interval = 36
}

summon_demon_decision = {
	#picture = "decision_personal_religious.dds"
	
	desc = summon_demon_decision_desc
	picture = {
		reference = "gfx/interface/illustrations/decisions/decision_personal_religious.dds"
	}
	is_shown = {
		has_perk = summoner_p8_perk
		is_imprisoned = no
		NOT = {	has_character_flag = merlin_dude	}
	}

	is_valid_showing_failures_only = {
		custom_description = {
			text = power_needed_custom
			can_spend_standard_ps_trigger = yes
		}
		custom_description = {
			text = is_incapable_custom
			NOT = { has_trait = incapable }
		}
		custom_description = {
			text = is_on_mage_duel_custom
			NOT = {	has_variable = pclash	}
		}
		custom_description = {
			text = magic_barrier_exists_custom
			NOT = {	exists = global_var:us_magic_barrier_var	}
		}
	}
	cooldown = { years = 1 }
	ai_will_do = { base = 60 }

	effect = {
		set_spell_id = { ID = 21 }
		save_scope_as = this0
		trigger_event = magic_ev.12
		
		custom_tooltip = summon_demon_ct
		if = {
			limit = {
				has_trait = grandmaster_coven
				has_trait_xp = {
					trait = grandmaster_coven
					value < 99
				}
			}
			show_as_tooltip = {
				add_trait_xp = {
					trait = grandmaster_coven
					value = 10
				}
			}
		}
		show_as_tooltip = {
			spend_standard_ps_effect = yes
			gain_demonology_or_sc_standard_effect = yes
		}

	}
	ai_check_interval = 35
}

study_blackgrimoire_decision = {
	desc = study_blackgrimoire_decision_desc
	picture = {
		reference = "gfx/interface/illustrations/decisions/decision_personal_religious.dds"
	}
	is_shown = {
		any_character_artifact = { has_variable = blackgrimoire }
		is_imprisoned = no
		is_adult = yes
		#NOT = {
		#	has_trait = supernatural_hunter
		#	has_trait = witch_hunter
		#}
		#OR = {
		#	NOR = {
		#		has_trait = witch
		#		any_secret = { secret_type = secret_witch }
		#	}
		#	AND = {
		#		has_trait = archmage
		#		has_trait_xp = {
		#			trait = archmage
		#			track = secret_knowledge
		#			value < 100
		#		}
		#	}
		#}
	}

	#is_valid_showing_failures_only = {
	#
	#}
	cooldown = { years = 10 }
	ai_will_do = {
		base = 100
		modifier = {
			add = -150
			has_trait = zealous
		}
	}

	effect = {
		#custom_tooltip = study_blackgrimoire_decision_ct0
		
		custom_tooltip = ev7.11.0.d_ct
		hidden_effect = {
			if = {
				limit = {
					is_ai = yes
					NOR = {
						has_trait = witch_hunter
						has_character_modifier = novice_witch_hunter_modifier
					}
				}
				trigger_event = {
					id = magic_ev7.130
					years = 12
				}
			}
			random_list = {
				90 = {
					trigger = {
						NAND = {
							#has_character_flag = necro_chapter1_flag
							has_character_flag = necro_chapter2_flag
							has_character_flag = necro_chapter3_flag
							has_character_flag = necro_chapter4_flag
							has_character_flag = necro_chapter5_flag
							has_character_flag = necro_chapter6_flag
						}
					}
					trigger_event = magic_ev7.124
				}
				9 = {
					trigger = {
						has_trait = archmage
						any_relation = {
							type = rival
							is_ai = yes
							NOR = {
								any_character_artifact = { has_variable = dragon_scales }
								has_character_modifier = amp_modifier
								has_trait = demon
								has_character_flag = special_magic_character
							}
						}
						NOT = {
							has_character_flag = used_magic_book_flag
						}
					}
					trigger_event = magic_ev4.57
				}
				1 = {
					#send_interface_toast = {
					#	title = study_blackgrimoire_decision
					#	choose_blackgrimoire_reward_effect = yes
					#}
					choose_blackgrimoire_reward_effect = yes
				}
			}
		}

	}
	ai_check_interval = 24
}

create_potion_decision = {
	desc = prepare_potion_decision_desc
	picture = {
		reference = "gfx/interface/illustrations/decisions/decision_personal_religious.dds"
	}
	is_shown = {
		OR = {
			AND = {
				OR = {
					has_trait = witch
					any_secret = { secret_type = secret_witch }
				}
				has_trait = lifestyle_herbalist
			}
			has_perk = combat_spells_p3_perk
		}
	}
	is_valid_showing_failures_only = {
		custom_description = {
			text = is_incapable_custom
			NOT = { has_trait = incapable }
		}
	}
	cooldown = { years = 4 }
	ai_will_do = { base = 50 }
	cost = {
		gold = potion_gold_value
	}
	effect = {
		trigger_event = magic_ev2.41
		custom_tooltip = create_potion_decision_ct
	}
	ai_check_interval = 24
}

drink_pot1_decision = {
	desc = drink_pot1_decision_desc
	picture = {
		reference = "gfx/interface/illustrations/decisions/decision_personal_religious.dds"
	}
	is_shown = {
		any_character_artifact = { has_variable = pot1 }
	}
	is_valid_showing_failures_only = {
		custom_description = {
			text = you_are_healthy
			OR = {
				has_trait = ill
				has_trait = pneumonic
				has_trait = great_pox
				has_trait = early_great_pox
				has_trait = lovers_pox
				has_trait = leper
				has_trait = wounded_1
				has_trait = wounded_2
				has_trait = wounded_3
				has_trait = maimed
				has_trait = infirm
				has_trait = incapable
				has_trait = gout_ridden
				has_trait = consumption
				has_trait = cancer
				has_trait = typhus
				has_trait = bubonic_plague
				has_trait = smallpox
				has_trait = sickly
				has_trait = blind
				has_trait = lunatic_1
				has_trait = lunatic_genetic
				has_trait = one_eyed
				has_trait = one_legged
				has_trait = disfigured
				has_trait = infertile
				has_trait = bleeder
				has_trait = wheezing
				has_trait = impotent
				has_trait = inbred
				has_character_modifier = chronic_headaches_modifier
				has_character_modifier = infected_wound_modifier
				has_character_modifier = gangrene_modifier
				has_trait = ergotism
				has_trait = measles
				has_trait = dysentery
				has_trait = scarred
			}
		}
		
	}
	cooldown = { days = 1 }
	ai_will_do = { base = 99 }

	effect = {
					if = { limit = { has_trait = disfigured }
						remove_trait = disfigured
					}
					if = { limit = { has_trait = inbred }
						remove_trait = inbred
					}
					if = { limit = { has_trait = impotent }
						remove_trait = impotent
					}
					if = { limit = { has_trait = bleeder }
						remove_trait = bleeder
					}
					if = { limit = { has_trait = wheezing }
						remove_trait = wheezing
					}
					if = { limit = { has_trait = infertile }
						remove_trait = infertile
					}
					if = { limit = { has_trait = one_legged }
						remove_trait = one_legged
					}
					if = { limit = { has_trait = one_eyed }
						remove_trait = one_eyed
					}
					if = { limit = { has_trait = lunatic_genetic }
						remove_trait = lunatic_genetic
					}
					if = { limit = { has_trait = lunatic_1 }
						remove_trait = lunatic_1
					}
					if = { limit = { has_trait = ill }
						remove_trait = ill
					}
					if = { limit = { has_trait = pneumonic }
						remove_trait = pneumonic
					}
					if = { limit = { has_trait = great_pox }
						remove_trait = great_pox
					}
					if = { limit = { has_trait = early_great_pox }
						remove_trait = early_great_pox
					}
					if = { limit = { has_trait = lovers_pox }
						remove_trait = lovers_pox
					}
					if = { limit = { has_trait = leper }
						remove_trait = leper
					}
					if = { limit = { has_trait = wounded_1 }
						remove_trait = wounded_1
					}
					if = { limit = { has_trait = wounded_2 }
						remove_trait = wounded_2
					}
					if = { limit = { has_trait = wounded_3 }
						remove_trait = wounded_3
					}
					if = { limit = { has_trait = maimed }
						remove_trait = maimed
					}
					if = { limit = { has_trait = infirm }
						remove_trait = infirm
					}
					if = { limit = { has_trait = incapable }
						remove_trait = incapable
					}
					if = { limit = { has_trait = gout_ridden }
						remove_trait = gout_ridden
					}
					if = { limit = { has_trait = consumption }
						remove_trait = consumption
					}
					if = { limit = { has_trait = cancer }
						remove_trait = cancer
					}
					if = { limit = { has_trait = typhus }
						remove_trait = typhus
					}
					if = { limit = { has_trait = bubonic_plague }
						remove_trait = bubonic_plague
					}
					if = { limit = { has_trait = smallpox }
						remove_trait = smallpox
					}
					if = { limit = { has_trait = sickly }
						remove_trait = sickly
					}
					if = { limit = { has_trait = blind }
						remove_trait = blind
					}
					if = { limit = { has_character_modifier = chronic_headaches_modifier }
						remove_character_modifier = chronic_headaches_modifier
					}
					if = { limit = { has_character_modifier = infected_wound_modifier }
						remove_character_modifier = infected_wound_modifier
					}
					if = { limit = { has_character_modifier = gangrene_modifier }
						remove_character_modifier = gangrene_modifier
					}
					if = {	limit = {	has_trait = measles	}
						remove_trait = measles
					}
					if = {	limit = {	has_trait = dysentery	}
						remove_trait = dysentery
					}
					if = {	limit = {	has_trait = ergotism	}
						remove_trait = ergotism
					}
					if = {	limit = {	has_trait = scarred	}
						remove_trait = scarred
					}
					random_character_artifact = {
						limit = {
							has_variable = pot1
						}
						destroy_artifact = this
					}
	}
	ai_check_interval = 12
}

drink_pot2_decision = {
	desc = drink_pot2_decision_desc
	picture = {
		reference = "gfx/interface/illustrations/decisions/decision_personal_religious.dds"
	}
	is_shown = {
		any_character_artifact = { has_variable = pot2 }
	}
	is_valid_showing_failures_only = {
		custom_description = {
			text = you_are_saturated
			can_be_power_saturated_trigger = yes
		}
		
	}
	cooldown = { days = 1 }
	ai_will_do = {
		base = 1
		modifier = {
			add = 99
			OR = {
				has_trait = archmage
				has_focus = arcane_focus
			}
			
		}
	}

	effect = {
		gain_standard_ps_effect = yes
		random_character_artifact = {
			limit = {
				has_variable = pot2
			}
			destroy_artifact = this
		}
	}
	ai_check_interval = 12
}

drink_pot3_decision = {
	desc = drink_pot3_decision_desc
	picture = {
		reference = "gfx/interface/illustrations/decisions/decision_personal_religious.dds"
	}
	is_shown = {
		any_character_artifact = { has_variable = pot3 }
	}
	is_valid_showing_failures_only = {
		custom_description = {
			text = you_are_herculean
			NOT = {
				has_trait = physique_good_3
			}
		}
		
	}
	cooldown = { days = 1 }
	ai_will_do = { base = 99 }

	effect = {
					random_list = {
						10 = {
							if = {
								limit = {
									has_trait = physique_bad_3
								}
								remove_trait = physique_bad_3
							}
							else_if = {
								limit = {
									has_trait = physique_bad_2
								}
								remove_trait = physique_bad_2
							}
							else_if = {
								limit = {
									has_trait = physique_bad_1
								}
								remove_trait = physique_bad_1
							}
							else_if = {
								limit = {
									has_trait = physique_good_1
								}
								remove_trait = physique_good_1
							}
							else_if = {
								limit = {
									has_trait = physique_good_2
								}
								remove_trait = physique_good_2
							}
							add_trait_force_tooltip = physique_good_3
							add_trait_force_tooltip = strong
							add_trait_force_tooltip = athletic
							add_prowess_skill = 3
						}
						50 = {
							if = {
								limit = {
									has_trait = physique_bad_3
								}
								remove_trait = physique_bad_3
							}
							else_if = {
								limit = {
									has_trait = physique_bad_2
								}
								remove_trait = physique_bad_2
							}
							else_if = {
								limit = {
									has_trait = physique_bad_1
								}
								remove_trait = physique_bad_1
							}
							else_if = {
								limit = {
									has_trait = physique_good_1
								}
								remove_trait = physique_good_1
							}
							add_trait_force_tooltip = physique_good_2
							add_trait_force_tooltip = strong
							if = {
								limit = {
									has_trait = fecund
								}
								remove_trait = fecund
							}
							add_trait_force_tooltip = infertile
							add_prowess_skill = 2
						}
						25 = {
							if = {
								limit = {
									has_trait = physique_bad_3
								}
								remove_trait = physique_bad_3
							}
							else_if = {
								limit = {
									has_trait = physique_bad_2
								}
								remove_trait = physique_bad_2
							}
							else_if = {
								limit = {
									has_trait = physique_bad_1
								}
								remove_trait = physique_bad_1
							}

							add_trait_force_tooltip = physique_good_1
							add_trait_force_tooltip = strong
							if = {
								limit = {
									has_trait = fecund
								}
								remove_trait = fecund
							}
							add_trait_force_tooltip = infertile
							add_prowess_skill = 1
						}
						10 = {
							if = {
								limit = {
									has_trait = physique_bad_3
								}
								remove_trait = physique_bad_3
							}
							else_if = {
								limit = {
									has_trait = physique_bad_2
								}
								remove_trait = physique_bad_2
							}
							else_if = {
								limit = {
									has_trait = physique_bad_1
								}
								remove_trait = physique_bad_1
							}
							add_trait_force_tooltip = physique_good_1
							add_trait_force_tooltip = strong
							if = {
								limit = {
									has_trait = fecund
								}
								remove_trait = fecund
							}
							add_trait_force_tooltip = infertile
							add_trait_force_tooltip = disfigured
						}
						5 = {
							if = {
								limit = {
									has_trait = physique_good_3
								}
								remove_trait = physique_good_3
							}
							else_if = {
								limit = {
									has_trait = physique_good_2
								}
								remove_trait = physique_good_2
							}
							else_if = {
								limit = {
									has_trait = physique_good_1
								}
								remove_trait = physique_good_1
							}
							add_trait_force_tooltip = physique_bad_1
							add_trait_force_tooltip = weak
							if = {
								limit = {
									has_trait = fecund
								}
								remove_trait = fecund
							}
							add_trait_force_tooltip = infertile
							add_trait_force_tooltip = disfigured
							add_prowess_skill = -1
						}
					}
					random_character_artifact = {
						limit = {
							has_variable = pot3
						}
						destroy_artifact = this
					}
	}
	ai_check_interval = 12
}

drink_pot4_decision = {
	desc = drink_pot4_decision_desc
	picture = {
		reference = "gfx/interface/illustrations/decisions/decision_personal_religious.dds"
	}
	is_shown = {
		any_character_artifact = { has_variable = pot4 }
	}

	cooldown = { days = 1 }
	ai_will_do = { base = 99 }

	effect = {
		#save_scope_as = pot_drinker
		custom_tooltip = drink_pot4_decision_ct
		random_character_artifact = {
			limit = {
				has_variable = pot4
				}
			destroy_artifact = this
		}
		trigger_event = magic_ev2.42
	}
	ai_check_interval = 12
}

drink_pot5_decision = {
	desc = drink_pot5_decision_desc
	picture = {
		reference = "gfx/interface/illustrations/decisions/decision_personal_religious.dds"
	}
	is_shown = {
		any_character_artifact = { has_variable = pot5 }
	}
	is_valid_showing_failures_only = {
		custom_description = {
			text = you_are_too_young
			age > 21
		}
	}
	cooldown = { days = 1 }
	ai_will_do = {
		base = 80
	}
	effect = {
		hidden_effect = {
			set_age = new_young_age_value
		}
		
		custom_tooltip = drink_pot5_decision_ct
		random_character_artifact = {
			limit = {
				has_variable = pot5
			}
			destroy_artifact = this
		}
	}
	ai_check_interval = 12
}

drink_pot6_decision = {
	desc = drink_pot6_decision_desc
	picture = {
		reference = "gfx/interface/illustrations/decisions/decision_personal_religious.dds"
	}
	is_shown = {
		any_character_artifact = { has_variable = pot6 }
	}

	cooldown = { days = 1 }
	ai_will_do = { base = 99 }

	effect = {
		if = {
			limit = {
				has_character_modifier = pot6_modifier
			}
			remove_character_modifier = pot6_modifier
		}
		add_character_modifier = {
			modifier = pot6_modifier
			months = 24
		}
		random_character_artifact = {
			limit = {
				has_variable = pot6
				}
			destroy_artifact = this
		}
	}
	ai_check_interval = 12
}

drink_pot7_decision = {
	desc = drink_pot7_decision_desc
	picture = {
		reference = "gfx/interface/illustrations/decisions/decision_personal_religious.dds"
	}
	is_shown = {
		any_character_artifact = { has_variable = pot7 }
	}

	cooldown = { days = 1 }
	ai_will_do = { base = 99 }

	effect = {
		if = {
			limit = {
				NOT = {
					has_character_modifier = mind_reader_modifier
				}
			}
			add_character_modifier = {
				modifier = mind_reader_modifier
				months = 6
			}
		}
		custom_tooltip = drink_pot7_decision_ct
		hidden_effect = {
			add_character_flag = {
				flag = mind_reading_elixir
				months = 6
			}
		}
		
		random_character_artifact = {
			limit = {
				has_variable = pot7
				}
			destroy_artifact = this
		}
	}
	ai_check_interval = 12
}
drink_pot8_decision = {
	desc = drink_pot8_decision_desc
	picture = {
		reference = "gfx/interface/illustrations/decisions/decision_personal_religious.dds"
	}
	is_shown = {
		any_character_artifact = { has_variable = pot8 }
	}

	cooldown = { years = 1 }
	ai_will_do = { base = 0 }

	effect = {
		hidden_effect = {
			if = {
				limit = {
					has_character_modifier = alchemical_enhancement
				}
				remove_character_modifier = alchemical_enhancement
			}
		}
		add_character_modifier = {
			modifier = alchemical_enhancement
			months = 12
		}
		#random = {
		#	chance = 1
		#	death = natural
		#}
		
		random_character_artifact = {
			limit = {
				has_variable = pot8
				}
			destroy_artifact = this
		}
	}
	ai_check_interval = 0
}
drink_pot9_decision = {
	title = drink_pot9_decision
	desc = pot9_desc
	selection_tooltip = pot9_desc
	confirm_text = drink_pot5_decision_confirm
	picture = {
		reference = "gfx/interface/illustrations/decisions/decision_personal_religious.dds"
	}
	is_shown = {
		any_character_artifact = { has_variable = pot9 }
	}

	cooldown = { years = 1 }
	ai_will_do = { base = 0 }

	effect = {
		hidden_effect = {
			if = {
				limit = {
					has_character_modifier = elixir_learning_modifier
				}
				remove_character_modifier = elixir_learning_modifier
			}
		}
		add_character_modifier = {
			modifier = elixir_learning_modifier
			years = 1
		}
		
		random_character_artifact = {
			limit = {
				has_variable = pot9
				}
			destroy_artifact = this
		}
	}
	ai_check_interval = 0
}



esoteric_training_decision = {
	desc = esoteric_training_decision_desc
	picture = {
		reference = "gfx/interface/illustrations/decisions/decision_personal_religious.dds"
	}
	is_shown = {
		OR = {
			AND = {
				exists = dynasty
				dynasty = {
					has_dynasty_perk = witchcraft_legacy_2
				}
			}
			has_trait = supernatural_hunter
		}
		
		is_adult = yes
	}
	is_valid_showing_failures_only = {
		custom_description = {
			text = is_incapable_custom
			NOT = { has_trait = incapable }
		}
	}
	cooldown = { years = 40 }
	ai_will_do = { base = 99 }
	cost = {
		gold = potion_gold_value
	}
	effect = {
		if = {
			limit = {
				has_trait = supernatural_hunter
				is_witch_trigger = no
			}
			send_interface_toast = {
				title = esoteric_training_decision
				give_witch_secret_or_trait_effect = yes
			}
			custom_tooltip = gain_mystic_perk
			hidden_effect = {
				add_magic_lifestyle_perk_points=1
			}
		}
		else = {
			random_list = {
				10 = {
					if = {
						limit = {
							has_trait = lifestyle_mystic
						}
						send_interface_toast = {
							title = esoteric_training_decision
							add_trait_xp = {
								trait = lifestyle_mystic
								value = 50
							}
						}
						
					}
					else = {
						add_trait_force_tooltip = lifestyle_mystic
						add_trait_xp = {
							trait = lifestyle_mystic
							value = 10
						}
					}
				}
				10 = {
					trigger = {
						has_trait = archmage
						has_trait_xp = {
							trait = archmage
							track = secret_knowledge
							value < 100
						}
					}
					send_interface_toast = {
						title = esoteric_training_decision
						add_trait_xp = {
							trait = archmage
							track = secret_knowledge
							value = 2
						}
						gain_cm_xp1_effect = yes
					}
				}
				10 = {
					trigger = {
						NAND = {
							has_trait = true_witch
							has_trait = archmage
						}
						NOR = {
							has_trait = supernatural_hunter
							has_character_modifier = novice_witch_hunter_modifier
						}
					}
					if = {
						limit = {
							NOR = {
								has_trait = witch
								any_secret = { secret_type = secret_witch }
							}
						}
						send_interface_toast = {
							title = esoteric_training_decision
							#add_secret = {
							#	type = secret_witch
							#	target = root
							#}
							give_witch_secret_or_trait_effect = yes
						}
						
						#if = {
						#	limit = {
						#		is_ai = yes
						#	}
						#	set_focus = witch_focus
						#}
					}
					custom_tooltip = gain_mystic_perk
					hidden_effect = {
						add_magic_lifestyle_perk_points=1
					}
					
				}
				10 = {
					trigger = {
						NAND = {
							has_trait = whole_of_body
							has_trait = scholar
							has_trait = theologian
						}
					}
					custom_tooltip = gain_learning_perk
					hidden_effect = {
						add_learning_lifestyle_perk_points=1
					}
					
				}
			}
		}
	}
	ai_check_interval = 60
}

press_court_mage_decision = {
	desc = press_court_mage_decision_desc
	picture = {
		reference = "gfx/interface/illustrations/decisions/decision_personal_religious.dds"
	}
	is_shown = {
		employs_court_position = mage_court_position
		NOT = {
			any_court_position_holder = {
				type = mage_court_position
				is_at_war_with = root
			}
		}
	}

	cooldown = { years = 6 }
	ai_will_do = {
		base = 40
		modifier = {
			add = -40
			any_court_position_holder = {
				type = mage_court_position
				has_strong_hook = root
			}
		}
	}

	effect = {
		#save_scope_as = pot_drinker
		custom_tooltip = press_court_mage_decision_ct
		random_court_position_holder = {
			type = mage_court_position
			trigger_event = magic_ev2.61
		}
		
	}
	ai_check_interval = 18
}

study_singularity_decision = {
	desc = study_singularity_decision_desc
	picture = {
		reference = "gfx/interface/illustrations/decisions/decision_personal_religious.dds"
	}
	is_shown = {
		any_character_artifact = { has_variable = singularity has_variable = singularity_sleeping }
		is_imprisoned = no
		is_adult = yes
		NOT = { has_character_flag = sing_end }
		#NOT = {
		#	any_living_character = {
		#		has_character_flag = sing_end
		#	}
		#}
	}
	is_valid_showing_failures_only = {
		
		custom_description = {
			text = is_incapable_custom
			NOT = { has_trait = incapable }
		}
		custom_description = {
			text = is_scholar_mage_custom
			OR = {
				AND = {
					has_trait = lifestyle_mystic
					has_trait_xp = {
						trait = lifestyle_mystic
						value > 49
					}
				}
				
				has_trait = scholar
				has_trait = archmage
			}
		}
	}
	cooldown = { years = 10 }
	cost = {
		gold = demon_gold_value
	}
	ai_will_do = {
		base = 0
	}

	effect = {
		#custom_tooltip = press_court_mage_decision_ct
		trigger_event = {
			id = magic_ev2.66
			days = 2
		}
		
	}
	ai_check_interval = 0
}

magic_epic_decision = {
	desc = magic_epic_decision_desc
	picture = {
		reference = "gfx/interface/illustrations/decisions/decision_personal_religious.dds"
	}
	is_shown = {
		#OR = {
		#	has_trait = archmage
		#	#has_character_flag = unlock_magical_research_flag
		#}
		has_trait = archmage
		is_imprisoned = no
		is_adult = yes
		NOT = {	has_character_flag = special_magic_character	}
	}

	is_valid_showing_failures_only = {
		custom_description = {
			text = is_scholar_custom
			OR = {
				has_trait = scholar
				#has_character_flag = unlock_magical_research_flag
				AND = {
					has_trait = archmage
					has_trait_xp = {
						trait = archmage
						track = secret_knowledge
						value > 24
					}
				}
			}
		}
	}
	decision_group_type = major
	cost = {
		gold = medium_gold_value
	}

	cooldown = { years = magical_research_cooldown_value }
	ai_will_do = {
		base = 0
		modifier = {
			add = 100
			gold > medium_gold_value
		}		
	}

	effect = {
		custom_tooltip = magic_epic_decision_ct
		stress_impact = {
			diligent = medium_stress_loss
			lazy = medium_stress_gain
		}
		trigger_event = magic_ev3.22
	}
	ai_check_interval = 12
}

magic_transmutation_decision = {
	desc = magic_transmutation_decision_desc
	picture = {
		reference = "gfx/interface/illustrations/decisions/decision_personal_religious.dds"
	}
	is_shown = {
		has_trait = archmage
		is_imprisoned = no
		is_adult = yes
		has_character_flag = magic_transmutation
	}

	is_valid_showing_failures_only = {
		custom_description = {
			text = power_needed_custom
			can_spend_standard_ps_trigger = yes
		}
		custom_description = {
			text = is_incapable_custom
			NOT = { has_trait = incapable }
		}
	}

	cooldown = { months = 6 }
	ai_will_do = {
		base = 10
		modifier = {
			add = 20
			#OR = {
			#	has_trait = source
			#	has_trait = source2
			#	has_trait = source3
			#	has_trait = source4
			#}
			has_trait = source
		}
	}

	effect = {
		set_spell_id = { ID = 22 }
		hidden_effect = {
			send_message_4_magic_sense_effect = yes
		}
		custom_tooltip = use_magic_custom_tooltip
		spend_standard_ps_effect = yes
		gain_sc_xp1_effect = yes
		add_gold = greedy_gold_value
		
	}
	ai_check_interval = 24
}

magic_defence_decision = {
	desc = magic_defence_decision_desc
	picture = {
		reference = "gfx/interface/illustrations/decisions/decision_personal_religious.dds"
	}
	is_shown = {
		has_trait = archmage
		is_imprisoned = no
		is_adult = yes
		has_character_flag = protection_ritual
	}

	is_valid_showing_failures_only = {
		custom_description = {
			text = power_needed_custom
			can_spend_standard_ps_trigger = yes
		}
		custom_description = {
			text = is_incapable_custom
			NOT = { has_trait = incapable }
		}
	}

	cooldown = { years = 10 }
	ai_will_do = {
		base = 50
		modifier = {
			add = -50
			has_character_modifier = amp_modifier
		}
	}

	effect = {
		set_spell_id = { ID = 23 }
		hidden_effect = {
			send_message_4_magic_sense_effect = yes
		}
		custom_tooltip = use_magic_custom_tooltip
		spend_standard_ps_effect = yes
		if = {
			limit = {
				any_character_artifact = {
					has_variable = catalyst
				}
			}
			custom_tooltip = magic_catalyst_spells_duration_ct
			add_character_modifier = {
				modifier = amp_modifier
				years = 20
			}
			add_character_modifier = {
				modifier = master_defence_modifier
				years = 20
			}
		}
		else = {
			add_character_modifier = {
				modifier = amp_modifier
				years = 10
			}
			add_character_modifier = {
				modifier = master_defence_modifier
				years = 10
			}
		}
		
		gain_cm_xp1_effect = yes
		gain_sc_xp1_effect = yes
		hidden_effect = {
			trigger_event = {
				id = magic_ev7.134
				days = { 4 8 }
			}
		}
	}
	ai_check_interval = 24
}

travel_to_stars_decision = {
	desc = travel_to_stars_decision_desc
	picture = {
		reference = "gfx/interface/illustrations/decisions/decision_personal_religious.dds"
	}
	is_shown = {
		has_trait = archmage
		is_imprisoned = no
		is_adult = yes
		has_character_flag = blorg_flag
	}

	is_valid_showing_failures_only = {
		custom_description = {
			text = power_needed_custom
			can_spend_standard_ps_trigger = yes
		}
		custom_description = {
			text = is_incapable_custom
			NOT = { has_trait = incapable }
		}
	}

	cooldown = { years = 1 }
	ai_will_do = {
		base = 50
	}

	effect = {
		custom_tooltip = use_magic_custom_tooltip
		spend_standard_ps_effect = yes
		depose = yes
		custom_tooltip = travel_to_stars_decision_ct
		hidden_effect = {
			death = {
				death_reason = death_disappearance
			}
		}
	}
	ai_check_interval = 0
}

call_witch_hunter_decision = {
	desc = call_witch_hunter_decision_desc
	picture = {
		reference = "gfx/interface/illustrations/decisions/decision_destiny_goal.dds"
	}
	is_shown = {
		is_imprisoned = no
		is_adult = yes
		trait_is_criminal_in_faith_trigger = { TRAIT = witch FAITH = root.faith GENDER_CHARACTER = root }
		NOR = {
			has_trait = witch
			any_secret = { secret_type = secret_witch }
			has_trait = witch_hunter
		}
		NOT = {
			any_courtier_or_guest = {
				has_trait = witch_hunter
			}
		}
		OR = {
			any_courtier_or_guest = {
				has_trait = witch
				is_ai = yes
			}
			any_vassal_or_below = {
				has_trait = witch
				is_ai = yes
			}
			any_known_secret = {
				secret_type = secret_witch
			}
		}
		
	}

	#is_valid_showing_failures_only = {
	#	
	#}

	cooldown = { years = 5 }
	ai_will_do = {
		base = 0
	}

	effect = {
		trigger_event = magic_ev3.341
		custom_tooltip = call_witch_hunter_decision_ct
	}
	ai_check_interval = 0
}

witch_hunting_decision = {
	desc = witch_hunting_decision_desc
	picture = {
		reference = "gfx/interface/illustrations/decisions/decision_recruitment.dds"
	}
	is_shown = {
		is_imprisoned = no
		is_adult = yes
		#trait_is_criminal_in_faith_trigger = { TRAIT = witch FAITH = root.faith GENDER_CHARACTER = root }
		has_trait = witch_hunter
		
	}

	#is_valid_showing_failures_only = {
	#	
	#}

	cooldown = { years = 3 }
	ai_will_do = {
		base = 0
	}

	effect = {
		
		custom_tooltip = witch_hunting_decision_ct
		hidden_effect = {
			random_list = {
				1 = { trigger_event = magic_ev3.63 }
				1 = { trigger_event = magic_ev3.65 }
			}
			random = {
				chance = 7
				trigger_event = {
					id = magic_ev8.3
					months = 1
				}
			}
		}
	}
	ai_check_interval = 0
}

#full_protection_decision = {
#	desc = full_protection_decision_desc
#	picture = {
#		reference = "gfx/interface/illustrations/decisions/decision_invite_knights.dds"
#	}
#	is_shown = {
#		is_imprisoned = no
#		is_adult = yes
#		any_targeting_scheme = {
#			is_scheme_exposed = yes
#		}
#	}
#
#	#is_valid_showing_failures_only = {
#	#	
#	#}
#	cost = {
#		gold = demon_gold_value
#		prestige = half_demon_gold_value
#	}
#	cooldown = { years = 1 }
#	ai_will_do = {
#		base = 0
#	}
#
#	effect = {
#		#gain_sc_xp1_effect = yes
#		hidden_effect = {
#			if = {
#				limit = {
#					has_character_modifier = double_guards_modifier
#				}
#				remove_character_modifier = double_guards_modifier
#			}
#		}
#		add_character_modifier = {
#			modifier = double_guards_modifier
#			years = 3
#		}
#		#scheme_type = murder
#		every_targeting_scheme = {
#			limit = {
#				scheme_type = steal_back_artifact
#				is_scheme_exposed = yes
#			}
#			hidden_effect = {
#				save_scope_as = hostile_scheme
#				scheme_owner = {
#					send_interface_toast = {
#						title = full_protection_decision
#						left_icon = THIS
#						right_icon = ROOT
#						show_as_tooltip = {
#							scope:hostile_scheme = {
#								end_scheme = yes
#							}
#						}
#					}
#				}
#			}
#			end_scheme = yes
#		}
#		if = {
#			limit = {
#					has_trait = paranoid
#					has_trait = trusting
#				}
#			}
#			#add_stress = minor_stress_loss
#			stress_impact = {
#				paranoid = minor_stress_loss
#				trusting = minor_stress_gain
#			}
#		}
#		else = {
#			#add_stress = minor_stress_gain
#			if = {
#				limit = {
#					number_of_personality_traits < 4
#					NOR = {
#						has_trait = paranoid
#						has_trait = trusting
#					}
#				}
#				random = {
#					chance = 5
#					add_trait = paranoid
#				}
#			}
#		}
#		
#	}
#	ai_check_interval = 0
#}

prepare_scrying_decision = {
	desc = prepare_scrying_decision_desc
	picture = {
		reference = "gfx/interface/illustrations/decisions/decision_personal_religious.dds"
	}
	is_shown = {
		has_perk = oneiromancy_perk
		is_adult = yes
		is_imprisoned = no
	}


	cost = {
		gold = potion_gold_value
	}

	cooldown = { years = 5 }
	#ai_will_do = {
	#	base = 0
	#}

	effect = {
		custom_tooltip = prepare_scrying_decision_ct
		hidden_effect = {
			random_list = {
				21 = {
					trigger_event = magic_ev4.45
				}
				9 = {
					trigger_event = magic_ev4.44
				}
				5 = {
					trigger_event = magic_ev4.46
				}
			}
		}
	}
	ai_check_interval = 0
}

claim_yaga_title_decision = {
	desc = claim_yaga_title_decision_desc
	picture = {
		reference = "gfx/interface/illustrations/decisions/decision_major_religion.dds"
	}
	decision_group_type = major
	is_shown = {
		OR = {
			has_trait = witch
			any_secret = { secret_type = secret_witch }
		}
		NOR = {	#Added NOR instead of NOT due to a error request in SPN Discord for being able to claim title as a supernatural
			has_trait = yaga
			has_trait = supernatural_vampire
			has_trait = supernatural_werewolf
			has_trait = supernatural_hybrid
			has_trait = supernatural_hunter
		}
		has_witch_house_trigger = yes
	}
	is_valid_showing_failures_only = {
		custom_description = {
			text = is_incapable_custom
			NOT = { has_trait = incapable }
		}
		custom_description = {
			text = is_alive_yaga_custom
			NOT = {
				any_living_character = {
					has_trait = yaga
				}
			}
		}
		custom_description = {
			text = true_witch_needed
			has_trait = true_witch
		}
	}
	cooldown = { years = 4 }
	ai_will_do = { base = 80 }
	cost = {
		piety = massive_piety_gain
	}
	effect = {
		add_trait = yaga
		add_prestige = massive_prestige_gain
		if = {
			limit = {
				has_trait = grandmaster_coven
				has_trait_xp = {
					trait = grandmaster_coven
					value < 99
				}
			}
			add_trait_xp = {
				trait = grandmaster_coven
				value = 50
			}
		}
	}
	ai_check_interval = 24
}

summon_demonic_knights_decision = {
	desc = summon_demonic_knights_decision_desc
	picture = {
		reference = "gfx/interface/illustrations/decisions/decision_invite_knights.dds"
	}
	is_shown = {
		is_imprisoned = no
		is_adult = yes
		is_landed_or_landless_administrative = yes
		OR = {
			has_dark_temple_trigger = yes
			AND = {
				has_trait = demon
				has_trait_xp = {
					trait = demon
					value > 99
				}
			}
		}
		
		
	}
	is_valid_showing_failures_only = {
		custom_description = {
			text = is_incapable_custom
			NOT = { has_trait = incapable }
		}
		custom_description = {
			text = power_needed_custom
			can_spend_standard_ps_trigger = yes
		}
		custom_description = {
			text = is_witch_or_demon
			OR = {
				has_trait = true_witch
				has_trait = demon
			}
		}
		custom_description = {
			text = magic_barrier_exists_custom
			NOT = {	exists = global_var:us_magic_barrier_var	}
		}
	}
	cooldown = { years = summon_demonic_knights_decision_cooldown_value }
	ai_will_do = { base = 80 }

	effect = {
		set_spell_id = { ID = 25 }
		spend_standard_ps_effect = yes
		if = {
			limit = {
				has_dark_temple_trigger = yes
				has_trait = demon
				has_trait_xp = {
					trait = demon
					value > 99
				}
			}
			spawn_army = {
				name = demonic_knights
				men_at_arms = {
					type = demonic_knights
					stacks = 10
				}
				inheritable = no
				uses_supply = no
				location = root.location
			}
		}
		else_if = {
			limit = {
				has_dark_temple_trigger = yes
			}
			spawn_army = {
				name = demonic_knights
				men_at_arms = {
					type = demonic_knights
					stacks = 5
				}
				inheritable = no
				uses_supply = no
				location = root.location
			}
		}
		else = {
			spawn_army = {
				name = demonic_knights
				men_at_arms = {
					type = demonic_knights
					stacks = 3
				}
				#men_at_arms = {
				#	type = skeletons
				#	stacks = 6
				#}
				#levies = {
				#	add = 400
				#}
				inheritable = no
				uses_supply = no
				location = root.location
			}
		}
		
		#if = {
		#	limit = {
		#		has_trait = demon
		#		has_trait_xp = {
		#			trait = demon
		#			value < 100
		#		}
		#	}
		#	add_trait_xp = {
		#		trait = demon
		#		value = 10
		#	}
		#}
	}
	ai_check_interval = 12
}
learn_new_spell_decision = {
	desc = learn_new_spell_decision_desc
	picture = {
		reference = "gfx/interface/illustrations/decisions/decision_misc.dds"
	}
	is_shown = {
		is_imprisoned = no
		is_adult = yes
		has_trait = archmage
		has_mage_academy_trigger = yes
		NAND = {
			has_character_flag = bless_land_flag
			has_character_flag = healing_spell_flag
			has_character_flag = shadowstep_flag
			has_character_flag = plague_spell_flag
			has_character_flag = hipercognition_flag
			has_character_flag = firestorm_spell_flag
			has_character_flag = aura_reading_spell
		}
		#NOT = {
		#	is_the_choosen_one_trigger = yes
		#}
	}

	cooldown = { years = 15 }
	ai_will_do = {
		base = 0
	}

	effect = {
			gain_sc_xp2_effect = yes
			custom_tooltip = study_blackgrimoire_decision_ct0
			hidden_effect = {
				random_list = {
					50 = {
						trigger = {
							NOT = {
								has_character_flag = bless_land_flag
							}
						}
						send_interface_toast = {
							title = learn_new_spell_decision
							custom_tooltip = ev5.1.0.a_ct
						}
						add_character_flag = bless_land_flag
					}
					50 = {
						trigger = {
							NOT = {
								has_character_flag = healing_spell_flag
							}
						}
						send_interface_toast = {
							title = learn_new_spell_decision
							custom_tooltip = healer_p9_perk_eff
						}
						add_character_flag = healing_spell_flag
					}
					50 = {
						trigger = {
							NOT = {
								has_character_flag = shadowstep_flag
							}
						}
						send_interface_toast = {
							title = learn_new_spell_decision
							custom_tooltip = ev5.1.0.e_ct
						}
						add_character_flag = shadowstep_flag
					}
					50 = {
						trigger = {
							NOT = {
								has_character_flag = plague_spell_flag
							}
						}
						send_interface_toast = {
							title = learn_new_spell_decision
							custom_tooltip = ev5.1.0.f_ct
						}
						add_character_flag = plague_spell_flag
					}
					50 = {
						trigger = {
							NOT = {
								has_character_flag = hipercognition_flag
							}
						}
						send_interface_toast = {
							title = learn_new_spell_decision
							custom_tooltip = ev5.1.0.h_ct
						}
						add_character_flag = hipercognition_flag
					}
					10 = {
						trigger = {
							NOR = {
								has_character_flag = firestorm_spell_flag
								has_trait = demon
							}
						}
						send_interface_toast = {
							title = learn_new_spell_decision
							custom_tooltip = ev5.1.0.k_ct
						}
						add_character_flag = firestorm_spell_flag
					}
					50 = {
						trigger = {
							NOT = {
								has_character_flag = aura_reading_spell
							}
						}
						send_interface_toast = {
							title = learn_new_spell_decision
							custom_tooltip = aura_reading_spell_got_it
						}
						add_character_flag = aura_reading_spell
					}
					1 = {

					}
				}
			}

	}
	ai_check_interval = 24
}
return_to_witchcraft_decision = {
	title = return_to_witchcraft_decision_title
	desc = return_to_witchcraft_decision_desc
	selection_tooltip = return_to_witchcraft_decision_desc
	confirm_text = return_to_witchcraft_decision_title
	
	picture = {
		reference = "gfx/interface/illustrations/decisions/decision_personal_religious.dds"
	}
	is_shown = {
		NOR = {
			has_trait = witch
			any_secret = { secret_type = secret_witch }
		}
		NOR = {
			has_trait = witch_hunter
			has_character_modifier = novice_witch_hunter_modifier
		}
		OR = {
			has_perk = protective_runes_perk
			has_perk = witch_familiar_perk
			has_perk = wisdom_of_nature_perk
			has_perk = magical_experiments_p1_perk
			has_perk = mage_tower_p2_perk
			#perks_in_magic_lifestyle > 0
		}
	}

	cooldown = { days = 1 }
	effect = {
		give_witch_secret_or_trait_effect = yes
	}
	ai_check_interval = 0
}
grand_spell_decision = {
	title = grand_spell_decision_title
	desc = grand_spell_decision_desc
	selection_tooltip = grand_spell_decision_desc
	confirm_text = grand_spell_decision_title
	picture = {
		reference = "gfx/interface/illustrations/decisions/decision_personal_religious.dds"
	}

	is_shown = {
		OR = {
			has_trait = witch
			any_secret = { secret_type = secret_witch }
		}
		OR = {
			has_character_flag = ready_for_grand_spell_flag
			AND = {
				has_trait = source
				has_trait_xp = {
					trait = source
					track = magic_potential
					value > 99
				}
			}
		}
		
	}
	is_valid_showing_failures_only = {
		custom_description = {
			text = power_needed_custom2
			has_trait = archmage
			has_trait_xp = {
				trait = archmage
				track = power_saturation
				value > 99
			}
		}
		custom_description = {
			text = is_incapable_custom
			NOT = { has_trait = incapable }
		}
	}
	decision_group_type = major
	cooldown = { years = 5 }
	effect = {
		set_spell_id = { ID = 26 }
		add_trait_xp = {
			trait = archmage
			track = power_saturation
			value = -100
		}
		#custom_tooltip = ev7.11.0.d_ct
		gain_sc_xp5_effect = yes
		custom_tooltip = grand_spell_decision_ct
		hidden_effect = {
			#remove_character_flag = ready_for_grand_spell_flag
			trigger_event = magic_ev7.129
		}
	}
	ai_will_do = {
		base = 50
		modifier = {
			add = -50
			has_character_flag = abdul_dude
		}
	}
	ai_check_interval = 12
}
change_the_future_decision = {
	title = change_the_future_title
	desc = change_the_future_desc
	selection_tooltip = change_the_future_desc
	confirm_text = magic_transmutation_decision_confirm
	picture = {
		reference = "gfx/interface/illustrations/decisions/decision_personal_religious.dds"
	}
	is_shown = {
		has_character_flag = fighting_planes_flag2		
	}
	is_valid_showing_failures_only = {
		custom_description = {
			text = power_needed_custom
			can_spend_standard_ps_trigger = yes
		}
		custom_description = {
			text = is_incapable_custom
			NOT = { has_trait = incapable }
		}
	}
	decision_group_type = major
	cooldown = { years = 5 }
	effect = {
		spend_standard_ps_effect = yes
		set_spell_id = { ID = 29 }
		custom_tooltip = grand_spell_decision_ct
		hidden_effect = {
			remove_character_flag = fighting_planes_flag2
			trigger_event = magic_ev8.13
		}
	}
	ai_check_interval = 0
}

become_fallen_hunter_decision = {
	title = become_fallen_hunter_decision_title
	desc = become_fallen_hunter_decision_desc
	selection_tooltip = become_fallen_hunter_decision_desc
	confirm_text = become_fallen_hunter_decision_confirm
	picture = {
		reference = "gfx/interface/illustrations/decisions/decision_personal_religious.dds"
	}
	is_shown = {
		has_trait = supernatural_hunter
		any_character_artifact = {
			has_variable = magic1
		}
		is_imprisoned = no
	}
	decision_group_type = major
	cooldown = { years = 5 }
	effect = {
		remove_trait = supernatural_hunter
		#add_trait_force_tooltip = witch_hunter2
		give_witch_secret_or_trait_effect = yes
		hidden_effect = {
			if = {
				limit = {
					has_character_modifier = inq_modifier
				}
				remove_character_modifier = inq_modifier
			}
		}
	}
	ai_check_interval = 36
	ai_will_do = {
		base = 1
		modifier = {
			has_trait = ambitious
			add = 49
		}
		modifier = {
			has_trait = cynical
			add = 20
		}
	}
}

#test_test_decision = {
#	desc = test_test_decision_desc
#	picture = {
#		reference = "gfx/interface/illustrations/decisions/decision_personal_religious.dds"
#	}
#	is_shown = {
#		is_ai = no
#	}
#
#	cooldown = { days = 1 }
#	effect = {
#		#random_ruler = {
#		#	save_scope_as = recipient
#		#}
#		#configure_start_mage_duel_effect = {
#		#	MD_ATTACKER = ROOT
#		#	MD_DEFENDER = scope:recipient
#		#}
#		if = {
#			limit = {
#				is_ruler = yes
#			}
#			add_prestige_level = 4
#		}
#		turn_into_mage_effect = yes
#		create_crown_shadows_artifact_effect = { OWNER = root }
#	}
#	ai_check_interval = 0
#}

#spawns_horned_god_temple = {
#	title = building_horned_god_house
#	desc = building_horned_god_house_desc
#	selection_tooltip = building_horned_god_house_desc
#	confirm_text = CONSTRUCT
#	picture = {
#	reference = "gfx/interface/illustrations/decisions/decision_personal_religious.dds"
#	}
#	is_shown = {
#		is_ai = no
#		has_dark_temple_trigger = no
#	}
#
#	cooldown = { days = 1 }
#	effect = {
#		ordered_held_county = {
#			limit = {
#				any_county_province = { has_special_building_slot = no }
#			}
#			order_by = {
#				value = development_level
#				multiply = 1
#			}
#			save_scope_as = most_developed_county
#		}
#		scope:most_developed_county = {
#			title_province = {
#				add_special_building = horned_god_house
#			}
#		}
#	}
#	ai_check_interval = 0
#}

#asmodeus_debug_decision = {
#	desc = test_test_decision_desc
#	picture = {
#	reference = "gfx/interface/illustrations/decisions/decision_personal_religious.dds"
#	}
#	is_shown = {
#		is_ai = no
#	}
#
#	cooldown = { days = 1 }
#	effect = {
#		save_scope_as = this0
#		ms_asmodeus_demon_effect = yes
#	}
#	ai_check_interval = 0
#}