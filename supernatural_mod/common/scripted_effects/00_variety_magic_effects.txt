gain_standard_ps_effect = {
	if = {
		limit = {
			has_trait = archmage
		}
		add_trait_xp = {
			trait = archmage
			track = power_saturation
			value = gain_standard_ps_value
		}
	}
	else_if = {
		limit = {
			NOR = {
				has_character_modifier = power_saturated1
				has_character_modifier = power_saturated2
			}
		}
		add_character_modifier = power_saturated1
	}
}

gain_source_ps_effect = {
	if = {
		limit = {
			has_trait = archmage
		}
		add_trait_xp = {
			trait = archmage
			track = power_saturation
			value = { gain_source_ps_value gain_huge_ps_value }
		}
	}
	else_if = {
		limit = {
			NOR = {
				has_character_modifier = power_saturated1
				has_character_modifier = power_saturated2
			}
		}
		add_character_modifier = power_saturated1
	}
}

gain_huge_ps_effect = {
	if = {
		limit = {
			has_trait = archmage
		}
		add_trait_xp = {
			trait = archmage
			track = power_saturation
			value = gain_huge_ps_value
		}
	}
	else_if = {
		limit = {
			NOR = {
				has_character_modifier = power_saturated1
				has_character_modifier = power_saturated2
			}
		}
		add_character_modifier = power_saturated1
	}
}

spend_standard_ps_effect = {
	if = {
		limit = {
			OR = {
				has_character_modifier = power_saturated1
				has_character_modifier = power_saturated2
			}
		}
		if = { limit = { has_character_modifier = power_saturated1 }
			remove_character_modifier = power_saturated1
		}
		if = { limit = { has_character_modifier = power_saturated2 }
			remove_character_modifier = power_saturated2
		}
	}
	else_if = {
		limit = {
			has_trait = archmage
		}
		custom_tooltip = mana_loss_ct
		hidden_effect = {
			add_trait_xp = {
				trait = archmage
				track = power_saturation
				value = -10
			}
		}
	}
}

spend_minor_ps_effect = {
	if = {
		limit = {
			OR = {
				has_character_modifier = power_saturated1
				has_character_modifier = power_saturated2
			}
		}
		if = { limit = { has_character_modifier = power_saturated1 }
			remove_character_modifier = power_saturated1
		}
		if = { limit = { has_character_modifier = power_saturated2 }
			remove_character_modifier = power_saturated2
		}
	}
	else_if = {
		limit = {
			has_trait = archmage
		}
		custom_tooltip = mana_minor_loss_ct
		hidden_effect = {
			add_trait_xp = {
				trait = archmage
				track = power_saturation
				value = -5
			}
		}
	}
}

gain_cm_xp1_effect = {
	if = {
		limit = {
			has_trait = archmage
			has_trait_xp = {
				trait = archmage
				track = combat_magic
				value < 100
			}
		}
		add_trait_xp = {
			trait = archmage
			track = combat_magic
			value = 1
		}
	}
}
gain_cm_xp5_effect = {
	if = {
		limit = {
			has_trait = archmage
			has_trait_xp = {
				trait = archmage
				track = combat_magic
				value < 100
			}
		}
		add_trait_xp = {
			trait = archmage
			track = combat_magic
			value = 5
		}
	}
}
gain_cm_xp20_effect = {
	if = {
		limit = {
			has_trait = archmage
			has_trait_xp = {
				trait = archmage
				track = combat_magic
				value < 100
			}
		}
		add_trait_xp = {
			trait = archmage
			track = combat_magic
			value = 20
		}
	}
}

gain_sc_xp1_effect = {
	if = {
		limit = {
			has_trait = archmage
			has_trait_xp = {
				trait = archmage
				track = secret_knowledge
				value < 100
			}
		}
		add_trait_xp = {
			trait = archmage
			track = secret_knowledge
			value = 1
		}
	}
}

gain_sc_xp2_effect = {
	if = {
		limit = {
			has_trait = archmage
			has_trait_xp = {
				trait = archmage
				track = secret_knowledge
				value < 100
			}
		}
		add_trait_xp = {
			trait = archmage
			track = secret_knowledge
			value = 2
		}
	}
}

gain_sc_xp5_effect = {
	if = {
		limit = {
			has_trait = archmage
			has_trait_xp = {
				trait = archmage
				track = secret_knowledge
				value < 100
			}
		}
		add_trait_xp = {
			trait = archmage
			track = secret_knowledge
			value = 5
		}
	}
}

gain_sc_xp10_effect = {
	if = {
		limit = {
			has_trait = archmage
			has_trait_xp = {
				trait = archmage
				track = secret_knowledge
				value < 100
			}
		}
		add_trait_xp = {
			trait = archmage
			track = secret_knowledge
			value = 10
		}
	}
}

gain_sc_xp20_effect = {
	if = {
		limit = {
			has_trait = archmage
			has_trait_xp = {
				trait = archmage
				track = secret_knowledge
				value < 100
			}
		}
		add_trait_xp = {
			trait = archmage
			track = secret_knowledge
			value = 20
		}
	}
}

gain_demonology_standard_effect = {
	if = {
		limit = {
			has_trait = archmage
			has_trait_xp = {
				trait = archmage
				track = demonology
				value < 100
			}
		}
		add_trait_xp = {
			trait = archmage
			track = demonology
			value = gain_standard_demonology_value
		}
	}
}
gain_demonology_or_sc_standard_effect = {
	if = {
		limit = {
			has_trait = archmage
			has_trait_xp = {
				trait = archmage
				track = demonology
				value < 100
			}
		}
		add_trait_xp = {
			trait = archmage
			track = demonology
			value = gain_standard_demonology_value
		}
	}
	else_if = {
		limit = {
			has_trait = archmage
			has_trait_xp = {
				trait = archmage
				track = secret_knowledge
				value < 100
			}
			NAND = {
				has_character_flag = ms_met_belial
				has_character_flag = ms_met_mammon
				has_character_flag = ms_met_samael
				has_character_flag = ms_met_hecate
				has_character_flag = ms_met_nyx
			}
		}
		add_trait_xp = {
			trait = archmage
			track = secret_knowledge
			value = 1
		}
	}
}

send_message_4_magic_sense_effect = {
	hidden_effect = {
		if = {
			limit = {
				NOT = {
					exists = scope:magic_user
				}
			}
			save_scope_as = magic_user
		}
		random = {
			chance = 75
			every_courtier_or_guest = {
				limit = { has_perk = magical_senses_perk }
				trigger_event = magic_ev.4
			}
			every_vassal = {
				limit = { has_perk = magical_senses_perk }
				trigger_event = magic_ev.4
				every_courtier_or_guest = {
					limit = { has_perk = magical_senses_perk }
					trigger_event = magic_ev.4
				}
			}
			if = {
				limit = {
					is_independent_ruler = no
				}
				liege = {
					if = {
						limit = { has_perk = magical_senses_perk }
						trigger_event = magic_ev.4
					}
					
					every_courtier_or_guest = {
						limit = { has_perk = magical_senses_perk }
						trigger_event = magic_ev.4
					}
				}
			}
			if = {
				limit = {
					is_ruler = yes
					any_held_title = {
						tier > tier_barony
					}
				}
				every_neighboring_realm_same_rank_owner = {
					limit = { has_perk = magical_senses_perk }
					trigger_event = magic_ev.4
				}
			}
			else_if = {
				limit = {
					is_ruler = yes
					any_held_title = {
						tier = tier_barony
					}
					exists = liege
				}
				liege = {
					every_neighboring_realm_same_rank_owner = {
						limit = { has_perk = magical_senses_perk }
						trigger_event = magic_ev.4
					}
				}
			}
		}
		
	}
	
	#location = {
	#	duchy = {
	#		every_de_jure_county_holder = {
	#			limit = { 
	#				AND = {
	#					NOT = { this = scope:actor }
	#					has_perk = magical_senses_perk
	#				}
	#			}
	#				trigger_event = magic_ev.4
	#		}
	#
	#	}
	#}
}

send_message_4all_magic_sense_effect = {
	hidden_effect = {
		every_living_character = {
			limit = {
				has_perk = magical_senses_perk
				NOT = { this = scope:actor }
			}
			trigger_event = magic_ev.4
		}
	}
}

metamagic_effect = {
	hidden_effect = {
		if = {
			limit = {
				can_be_power_saturated_trigger = yes
				has_character_flag = master_metamagic
			}
			random = {
				chance = 50
				send_interface_toast = {
					title=metamagic_title
					#gain_standard_ps_effect = yes
					if = {
						limit = {
							has_trait = archmage
						}
						add_trait_xp = {
							trait = archmage
							track = power_saturation
							value = 10
						}
					}
					else_if = {
						limit = {
							NOR = {
								has_character_modifier = power_saturated1
								has_character_modifier = power_saturated2
							}
						}
						add_character_modifier = power_saturated1
					}
				}
			}
		}
	}
}

send_message_4_child_missing_effect = {
	hidden_effect = {
		if = {
			limit = {
				is_landed_or_landless_administrative = yes
			}
			save_scope_as = sender
			every_courtier_or_guest = {
				trigger_event = magic_ev2.40
			}
			every_vassal = {
				trigger_event = magic_ev2.40
				every_courtier_or_guest = {
					trigger_event = magic_ev2.40
				}
			}
			random_neighboring_realm_same_rank_owner = {
				trigger_event = magic_ev2.40
				every_courtier_or_guest = {
					trigger_event = magic_ev2.40
				}
			}
		}
		else = {
			save_scope_as = actor
			liege = {
				save_scope_as = sender
				every_courtier_or_guest = {
					limit = {
						NOT = { this = scope:actor }
					}
					trigger_event = magic_ev2.40
				}
				every_vassal = {
					trigger_event = magic_ev2.40
					every_courtier_or_guest = {
						trigger_event = magic_ev2.40
					}
				}
				random_neighboring_realm_same_rank_owner = {
					trigger_event = magic_ev2.40
					every_courtier_or_guest = {
						trigger_event = magic_ev2.40
					}
				}
			}
		}
	}
}

create_common_witch_effect = {
	create_character = {
		employer = root
		template = witchy_template
		random_traits = no
		save_temporary_scope_as = created_witch
	}
}
create_common_witch_effect2 = {
	create_character = {
		location = root.location
		template = witchy_template
		culture = root.culture
		faith = root.faith
		random_traits = no
		save_scope_as = created_witch
	}
}
create_common_witch_effect3 = {
	create_character = {
		employer = scope:recipient
		template = witchy_template2
		random_traits = no
		save_scope_as = created_witch
	}
}

create_merlin_effect = {
	if = {
		limit = {
			NOT = {
				any_living_character = {
					has_character_flag = merlin_dude
				}
			}
		}
		create_character = {
			save_temporary_scope_as = merlin_dude
			employer = root
			template = merlin_character
			name = merlins_name
			dynasty = none
			after_creation = {
				add_perk = protective_runes_perk
				add_perk = magical_senses_perk
				add_character_modifier = mind_reader_modifier
				add_perk = magical_experiments_p1_perk
				add_perk = mage_tower_p2_perk
				add_perk = mind_control_p6_perk
				add_perk = forbidden_ritual_p7_perk
				add_perk = fate_weaver_p10_perk
				add_perk = magic_triangulation_p5_perk
				add_perk = combat_spells_p3_perk
				add_perk = healer_p9_perk
				add_perk = summoner_p8_perk
				add_perk = pedagogy_perk
				add_perk = open_minded_perk
				add_perk = apostate_perk
				add_perk = scientific_perk
				add_perk = planned_cultivation_perk
				add_perk = scholarly_circles_perk
				add_perk = learn_on_the_job_perk
				add_perk = sanctioned_loopholes_perk
				add_perk = mage_p4_perk
				add_perk = carefree_perk
				if = {
					limit = {
						NOT = {	has_trait = archmage	}
					}
					add_trait = archmage
				}
				add_trait_xp = {
					trait = archmage
					track = secret_knowledge
					value = 100
				}
				add_trait_xp = {
					trait = archmage
					track = combat_magic
					value = 80
				}
				add_trait_xp = {
					trait = source
					track = magic_potential
					value = 75
				}
				add_character_modifier = amp_modifier
				add_character_modifier = master_alteration_modifier
				add_character_modifier = master_metamagic_modifier
				add_character_modifier = master_defence_modifier
				add_character_modifier = infertile_modifier
				add_character_modifier = master_magic_modifier
				add_trait = lifestyle_traveler
				#set_immortal_age = 81
				#add_secret = {
				#	type = secret_witch
				#	target = root
				#}
				give_witch_secret_or_trait_effect = yes
				add_character_flag = merlin_dude
				add_character_flag = special_magic_character
				
				#add_hook = {
				#	type = magic_domination_hook
				#	target = liege
				#}
				set_spell_id = { ID = 4 }
			}
		}
		clear_saved_scope = merlin_dude
	}
}

create_abdul_alhazred_effect = {
	if = {
		limit = {
			NOT = {
				any_living_character = {
					has_character_flag = abdul_dude
				}
			}
		}
		create_character = {
			save_scope_as = abdul
			location = root.location
			template = abdul_alhazred_character
			name = Abdul
			#dynasty_house = house_alhazred
			culture = culture:persian
			faith = faith:ismaili
			after_creation = {
				give_witch_secret_or_trait_effect = yes
				
				add_trait = disfigured

				add_perk = magical_experiments_p1_perk
				add_perk = mage_tower_p2_perk
				add_perk = mind_control_p6_perk
				add_perk = forbidden_ritual_p7_perk
				add_perk = fate_weaver_p10_perk
				add_perk = magic_triangulation_p5_perk
				add_perk = combat_spells_p3_perk
				add_perk = healer_p9_perk
				add_perk = summoner_p8_perk
				add_perk = mage_p4_perk

				add_perk = protective_runes_perk
				add_perk = magical_senses_perk
				add_perk = witch_familiar_perk
				add_perk = oneiromancy_perk
				add_perk = wisdom_of_nature_perk
				add_perk = love_potions_perk
				add_perk = mistical_insight_perk
				add_perk = evil_eye_perk
				add_perk = lifestealer_perk
				add_perk = true_witch_perk

				add_perk = pedagogy_perk
				add_perk = open_minded_perk
				add_perk = apostate_perk
				add_perk = scientific_perk
				add_perk = planned_cultivation_perk
				add_perk = scholarly_circles_perk
				add_perk = learn_on_the_job_perk
				add_perk = sanctioned_loopholes_perk
				add_perk = carefree_perk
				add_perk = scholar_perk
				if = {
					limit = {
						NOT = {
							has_perk = truth_is_relative_perk
						}
					}
					add_perk = truth_is_relative_perk
				}
				if = {
					limit = {
						NOT = {
							has_perk = twice_schemed_perk
						}
					}
					add_perk = twice_schemed_perk
				}
				if = {
					limit = {
						NOT = {
							has_perk = a_job_done_right_perk
						}
					}
					add_perk = a_job_done_right_perk
				}
				if = {
					limit = {
						NOT = {
							has_perk = digging_for_dirt_perk
						}
					}
					add_perk = digging_for_dirt_perk
				}
				if = {
					limit = {
						NOT = {
							has_perk = court_of_shadows_perk
						}
					}
					add_perk = court_of_shadows_perk
				}
				if = {
					limit = {
						NOT = {
							has_perk = swift_execution_perk
						}
					}
					add_perk = swift_execution_perk
				}
				if = {
					limit = {
						NOT = {
							has_perk = kidnapper_perk
						}
					}
					add_perk = kidnapper_perk
				}
				if = {
					limit = {
						NOT = {
							has_perk = prepared_for_anything_perk
						}
					}
					add_perk = prepared_for_anything_perk
				}
				#if = {
				#	limit = {
				#		NOT = {
				#			has_perk = prison_feudal_complex_perk
				#		}
				#	}
				#	add_perk = prison_feudal_complex_perk
				#}
				#if = {
				#	limit = {
				#		NOT = {
				#			has_perk = forever_infamous_perk
				#		}
				#	}
				#	add_perk = forever_infamous_perk
				#}
				if = {
					limit = {
						NOT = {
							has_perk = serve_the_crown_perk
						}
					}
					add_perk = serve_the_crown_perk
				}
				if = {
					limit = {
						NOT = {
							has_trait = schemer
						}
					}
					add_perk = schemer_perk
				}

				if = {
					limit = {
						NOT = {	has_trait = archmage	}
					}
					add_trait = archmage
				}
				add_trait_xp = {
					trait = archmage
					track = secret_knowledge
					value = 100
				}
				add_trait_xp = {
					trait = archmage
					track = combat_magic
					value = 100
				}
				add_trait_xp = {
					trait = archmage
					track = demonology
					value = 100
				}
				add_trait_xp = {
					trait = archmage
					track = power_saturation
					value = 100
				}
				add_trait_xp = {
					trait = source
					track = magic_potential
					value = 100
				}
				set_spell_id = { ID = 25 }
				add_character_modifier = amp_modifier
				add_character_modifier = master_alteration_modifier
				add_character_modifier = master_metamagic_modifier
				add_character_modifier = master_defence_modifier
				add_character_modifier = mind_reader_modifier
				add_character_modifier = master_psionic_modifier
				add_character_modifier = peaceful_dreams_modifier
				#add_character_modifier = greedy_power_modifier
				add_character_modifier = upgraded_body_modifier
				add_character_modifier = contact_other_worlds_modifier
				add_character_modifier = master_magic_modifier
				add_trait = necromancer
				
			}
		}
		scope:abdul = {
			add_character_flag = abdul_dude
			add_character_flag = special_magic_character
			add_character_flag = skeleton_warriors
			add_character_flag = shadowstep_flag
			add_character_flag = banish_spell_flag
			#add_character_flag = plague_spell_flag
			#add_character_flag = firestorm_spell_flag
			
			give_nickname = mad_arab_nickname
			
			add_dread = 80
			dynasty = {
				add_dynasty_prestige = 10000
				add_dynasty_perk = witchcraft_legacy_1
				add_dynasty_perk = witchcraft_legacy_2
				add_dynasty_perk = witchcraft_legacy_3
				add_dynasty_perk = witchcraft_legacy_4
				add_dynasty_perk = witchcraft_legacy_5
			}
			#if = {
			#	limit = {
			#		ROOT = {
			#			OR = {
			#				#has_character_modifier = alchemical_enhancement
			#				is_the_choosen_one_trigger = yes
			#				any_character_artifact = {
			#					has_artifact_modifier = singularity_modifierX
			#				}
			#				#any_character_artifact = { has_variable = pot8 }
			#			}
			#		}
			#	}
			#	create_artifact = {	
			#		name = pot8
			#		description = pot8_desc
			#		template=general_unique_template
			#		type = miscellaneous
			#		#type = elixir
			#		visuals = flask
			#		#visuals = fp2_armillary_sphere
			#		modifier = elixir_modifier
			#		#wealth = scope:wealth
			#		#quality = scope:quality
			#		rarity=illustrious
			#		decaying = no
			#		save_scope_as = newly_created_artifact
			#		#custom_tooltip = magic_catalyst_tooltip
			#	}
			#	scope:newly_created_artifact={
			#		set_variable=pot8
			#	}
			#}
		}
	}
}

create_yaga_family_effect = {
	hidden_effect = {
		random_ruler = {
			limit = {
				is_landed_or_landless_administrative = yes
				is_ai = yes
				primary_title = { is_mercenary_company = no }	
				highest_held_title_tier = 2
				capital_province = {
					geographical_region = world_europe_east
					has_special_building_slot = no
				}
				trait_is_criminal_in_faith_trigger = { TRAIT = witch FAITH = this.faith GENDER_CHARACTER = this }
			}
			save_scope_as = unlucky_guy
			add_trait = incapable
			capital_province = {
				add_special_building = witch_house
			}
		}
		create_character = {
			employer = scope:unlucky_guy
			gender = female
			template = yaga_character
			name = yaga_name
			dynasty_house = scope:unlucky_guy.house
			save_scope_as = yaga
		}
		scope:yaga = {
			add_character_flag = yaga_flag
			add_secret = {
				type = secret_witch
				target = scope:yaga
			}
			#give_witch_secret_or_trait_effect = yes
			add_secret = {
				type = secret_cannibal
				target = scope:yaga
			}
			add_perk = protective_runes_perk
			add_perk = magical_senses_perk
			add_perk = witch_familiar_perk
			add_perk = oneiromancy_perk
			add_perk = wisdom_of_nature_perk
			add_perk = love_potions_perk
			add_perk = mistical_insight_perk
			add_perk = evil_eye_perk
			add_perk = lifestealer_perk
			add_perk = true_witch_perk

			add_perk = truth_is_relative_perk
			add_perk = digging_for_dirt_perk
			add_perk = kidnapper_perk

			every_ruler = {
				limit = {
					is_ai = no
				}
				reverse_add_opinion = {
					target = scope:yaga
					modifier = suspicious_opinion
					opinion = -200
				}
			}

			add_character_modifier = mind_reader_modifier
			add_character_modifier = amp_modifier
			add_character_modifier = master_defence_modifier
			add_character_modifier = master_magic_modifier
			add_trait_xp = {
				trait = source
				track = magic_potential
				value = 80
			}
			house = {
				add_house_modifier = witch_coven
			}
			add_character_flag = special_magic_character
		}
		scope:unlucky_guy = {
			create_title_and_vassal_change = {
				type = conquest
				save_scope_as = change
				add_claim_on_loss = no
			}
			random_held_title = {
				limit = {
					tier = tier_county
					title_province = scope:unlucky_guy.capital_province
				}
				change_title_holder_include_vassals = {
					holder = scope:yaga
					change = scope:change
				}
			}
			resolve_title_and_vassal_change = scope:change
		}
		#scope:yaga.capital_province = {
		#	add_special_building = witch_house
		#}
		create_character = {
			employer = scope:yaga
			gender = female
			template = yaga_d_character
			mother = scope:yaga
			dynasty_house = scope:unlucky_guy.house
			save_scope_as = dou
		}
		scope:dou = {
			add_secret = {
				type = secret_witch
				target = scope:dou
			}
			add_trait = source
			add_trait_xp = {
				trait = source
				track = magic_potential
				value = 51
			}
			#add_character_modifier = yagas_blood_modifier
			random_secret = {
				limit = {
					secret_type = secret_witch
				}
				reveal_to = scope:yaga
			}
			scope:yaga = {
				random_secret = {
					limit = {
						secret_type = secret_witch
					}
					reveal_to = scope:dou
				}
			}
		}
		create_character = {
			employer = scope:yaga
			gender = female
			template = yaga_d_character
			mother = scope:yaga
			dynasty_house = scope:unlucky_guy.house
			save_scope_as = dou
		}
		scope:dou = {
			add_secret = {
				type = secret_witch
				target = scope:dou
			}
			add_trait = source
			add_trait_xp = {
				trait = source
				track = magic_potential
				value = 14
			}
			#add_character_modifier = yagas_blood_modifier
			random_secret = {
				limit = {
					secret_type = secret_witch
				}
				reveal_to = scope:yaga
			}
			scope:yaga = {
				random_secret = {
					limit = {
						secret_type = secret_witch
					}
					reveal_to = scope:dou
				}
			}
		}
		create_character = {
			employer = scope:yaga
			gender = female
			template = yaga_d_character
			mother = scope:yaga
			dynasty_house = scope:unlucky_guy.house
			save_scope_as = dou
		}
		scope:dou = {
			add_secret = {
				type = secret_witch
				target = scope:dou
			}
			#add_character_modifier = yagas_blood_modifier
			random_secret = {
				limit = {
					secret_type = secret_witch
				}
				reveal_to = scope:yaga
			}
			scope:yaga = {
				random_secret = {
					limit = {
						secret_type = secret_witch
					}
					reveal_to = scope:dou
				}
			}
		}
		scope:yaga = {
			#add_trait = source
			change_current_weight = 200
			spawn_army = {
				name = demonic_knights
				men_at_arms = {
					type = special_magic_hut_lol
					stacks = 1
				}
				men_at_arms = {
					type = demonic_knights
					stacks = 4
				}
				men_at_arms = {
					type = skeletons
					stacks = 6
				}
				inheritable = no
				uses_supply = no
				location = scope:yaga.location
			}
			add_character_modifier = yaga_modifier
		}
		clear_saved_scope = dou
		clear_saved_scope = yaga
	}
}

create_yaga_family_effect2 = {
	hidden_effect = {
		random_ruler = {
			limit = {
				is_landed_or_landless_administrative = yes
				is_ai = yes
				primary_title = { is_mercenary_company = no }	
				highest_held_title_tier=2
				capital_province = {
					geographical_region = world_europe_east
					has_special_building_slot = no
				}
				NOT = {
					trait_is_criminal_in_faith_trigger = { TRAIT = witch FAITH = this.faith GENDER_CHARACTER = this }
				}
			}
			save_scope_as = unlucky_guy
			capital_province = {
				add_special_building = witch_house
			}
		}
		create_character = {
			employer = scope:unlucky_guy
			gender = female
			template = yaga_character
			name = yaga_name
			dynasty_house = scope:unlucky_guy.house
			save_scope_as = yaga
		}
		scope:yaga = {
			add_character_flag = yaga_flag
			add_trait = witch
			#give_witch_secret_or_trait_effect = yes
			add_secret = {
				type = secret_cannibal
				target = scope:yaga
			}
			add_perk = protective_runes_perk
			add_perk = magical_senses_perk
			add_perk = witch_familiar_perk
			add_perk = oneiromancy_perk
			add_perk = wisdom_of_nature_perk
			add_perk = love_potions_perk
			add_perk = mistical_insight_perk
			add_perk = evil_eye_perk
			add_perk = lifestealer_perk
			add_perk = true_witch_perk

			#add_perk = fate_weaver_p10_perk
			#add_perk = healer_p9_perk

			add_perk = truth_is_relative_perk
			add_perk = digging_for_dirt_perk
			add_perk = kidnapper_perk

			every_ruler = {
				limit = {
					is_ai = no
				}
				reverse_add_opinion = {
					target = scope:yaga
					modifier = suspicious_opinion
					opinion = -200
				}
			}

			add_character_modifier = mind_reader_modifier
			add_character_modifier = amp_modifier
			add_character_modifier = master_defence_modifier
			add_character_modifier = master_magic_modifier
			add_trait_xp = {
				trait = source
				track = magic_potential
				value = 80
			}
			add_character_flag = special_magic_character
			house = {
				add_house_modifier = witch_coven
			}
		}
		scope:unlucky_guy = {
			create_title_and_vassal_change = {
				type = conquest
				save_scope_as = change
				add_claim_on_loss = no
			}
			random_held_title = {
				limit = {
					tier = tier_county
					title_province = scope:unlucky_guy.capital_province
				}
				change_title_holder_include_vassals = {
					holder = scope:yaga
					change = scope:change
				}
			}
			resolve_title_and_vassal_change = scope:change
		}
		#scope:yaga.capital_province = {
		#	add_special_building = witch_house
		#}
		create_character = {
			employer = scope:yaga
			gender = female
			template = yaga_d_character
			mother = scope:yaga
			dynasty_house = scope:unlucky_guy.house
			save_scope_as = dou
		}
		scope:dou = {
			add_trait = witch
			add_trait = source
			add_trait_xp = {
				trait = source
				track = magic_potential
				value = 51
			}
		}
		create_character = {
			employer = scope:yaga
			gender = female
			template = yaga_d_character
			mother = scope:yaga
			dynasty_house = scope:unlucky_guy.house
			save_scope_as = dou
		}
		scope:dou = {
			add_trait = witch
			add_trait = source
			add_trait_xp = {
				trait = source
				track = magic_potential
				value = 14
			}
		}
		create_character = {
			employer = scope:yaga
			gender = female
			template = yaga_d_character
			mother = scope:yaga
			dynasty_house = scope:unlucky_guy.house
			save_scope_as = dou
		}
		scope:dou = {
			add_trait = witch
		}
		scope:yaga = {
			#add_trait = source
			change_current_weight = 200
			spawn_army = {
				name = demonic_knights
				men_at_arms = {
					type = special_magic_hut_lol
					stacks = 1
				}
				men_at_arms = {
					type = demonic_knights
					stacks = 4
				}
				men_at_arms = {
					type = skeletons
					stacks = 6
				}
				inheritable = no
				uses_supply = no
				location = scope:yaga.location
			}
			add_character_modifier = yaga_modifier
		}
		clear_saved_scope = dou
		clear_saved_scope = yaga
	}
}
#AR version - will run when the game does not detect a matching geographic region (in case other mods change the map geography)
create_yaga_family_effectAR = {
	hidden_effect = {
		random_ruler = {
			limit = {
				is_landed_or_landless_administrative = yes
				is_ai = yes
				primary_title = { is_mercenary_company = no }	
				highest_held_title_tier = 2
				trait_is_criminal_in_faith_trigger = { TRAIT = witch FAITH = this.faith GENDER_CHARACTER = this }
			}
			save_scope_as = unlucky_guy
			add_trait = incapable
			capital_province = {
				add_special_building = witch_house
			}
		}
		create_character = {
			employer = scope:unlucky_guy
			gender = female
			template = yaga_character
			name = yaga_name
			dynasty_house = scope:unlucky_guy.house
			save_scope_as = yaga
		}
		scope:yaga = {
			add_character_flag = yaga_flag
			add_secret = {
				type = secret_witch
				target = scope:yaga
			}
			#give_witch_secret_or_trait_effect = yes
			add_secret = {
				type = secret_cannibal
				target = scope:yaga
			}
			add_perk = protective_runes_perk
			add_perk = magical_senses_perk
			add_perk = witch_familiar_perk
			add_perk = oneiromancy_perk
			add_perk = wisdom_of_nature_perk
			add_perk = love_potions_perk
			add_perk = mistical_insight_perk
			add_perk = evil_eye_perk
			add_perk = lifestealer_perk
			add_perk = true_witch_perk

			add_perk = truth_is_relative_perk
			add_perk = digging_for_dirt_perk
			add_perk = kidnapper_perk

			every_ruler = {
				limit = {
					is_ai = no
				}
				reverse_add_opinion = {
					target = scope:yaga
					modifier = suspicious_opinion
					opinion = -200
				}
			}

			add_character_modifier = mind_reader_modifier
			add_character_modifier = amp_modifier
			add_character_modifier = master_defence_modifier
			add_character_modifier = master_magic_modifier
			add_trait_xp = {
				trait = source
				track = magic_potential
				value = 80
			}
			house = {
				add_house_modifier = witch_coven
			}
			add_character_flag = special_magic_character
		}
		scope:unlucky_guy = {
			create_title_and_vassal_change = {
				type = conquest
				save_scope_as = change
				add_claim_on_loss = no
			}
			random_held_title = {
				limit = {
					tier = tier_county
					title_province = scope:unlucky_guy.capital_province
				}
				change_title_holder_include_vassals = {
					holder = scope:yaga
					change = scope:change
				}
			}
			resolve_title_and_vassal_change = scope:change
		}
		#scope:yaga.capital_province = {
		#	add_special_building = witch_house
		#}
		create_character = {
			employer = scope:yaga
			gender = female
			template = yaga_d_character
			mother = scope:yaga
			dynasty_house = scope:unlucky_guy.house
			save_scope_as = dou
		}
		scope:dou = {
			add_secret = {
				type = secret_witch
				target = scope:dou
			}
			add_trait = source
			add_trait_xp = {
				trait = source
				track = magic_potential
				value = 51
			}
			#add_character_modifier = yagas_blood_modifier
			random_secret = {
				limit = {
					secret_type = secret_witch
				}
				reveal_to = scope:yaga
			}
			scope:yaga = {
				random_secret = {
					limit = {
						secret_type = secret_witch
					}
					reveal_to = scope:dou
				}
			}
		}
		create_character = {
			employer = scope:yaga
			gender = female
			template = yaga_d_character
			mother = scope:yaga
			dynasty_house = scope:unlucky_guy.house
			save_scope_as = dou
		}
		scope:dou = {
			add_secret = {
				type = secret_witch
				target = scope:dou
			}
			add_trait = source
			add_trait_xp = {
				trait = source
				track = magic_potential
				value = 14
			}
			#add_character_modifier = yagas_blood_modifier
			random_secret = {
				limit = {
					secret_type = secret_witch
				}
				reveal_to = scope:yaga
			}
			scope:yaga = {
				random_secret = {
					limit = {
						secret_type = secret_witch
					}
					reveal_to = scope:dou
				}
			}
		}
		create_character = {
			employer = scope:yaga
			gender = female
			template = yaga_d_character
			mother = scope:yaga
			dynasty_house = scope:unlucky_guy.house
			save_scope_as = dou
		}
		scope:dou = {
			add_secret = {
				type = secret_witch
				target = scope:dou
			}
			#add_character_modifier = yagas_blood_modifier
			random_secret = {
				limit = {
					secret_type = secret_witch
				}
				reveal_to = scope:yaga
			}
			scope:yaga = {
				random_secret = {
					limit = {
						secret_type = secret_witch
					}
					reveal_to = scope:dou
				}
			}
		}
		scope:yaga = {
			#add_trait = source
			change_current_weight = 200
			spawn_army = {
				name = demonic_knights
				men_at_arms = {
					type = special_magic_hut_lol
					stacks = 1
				}
				men_at_arms = {
					type = demonic_knights
					stacks = 4
				}
				men_at_arms = {
					type = skeletons
					stacks = 6
				}
				inheritable = no
				uses_supply = no
				location = scope:yaga.location
			}
			add_character_modifier = yaga_modifier
		}
		clear_saved_scope = dou
		clear_saved_scope = yaga
	}
}

create_yaga_family_effect2AR = {
	hidden_effect = {
		random_ruler = {
			limit = {
				is_landed_or_landless_administrative = yes
				is_ai = yes
				primary_title = { is_mercenary_company = no }	
				highest_held_title_tier=2
				NOT = {
					trait_is_criminal_in_faith_trigger = { TRAIT = witch FAITH = this.faith GENDER_CHARACTER = this }
				}
			}
			save_scope_as = unlucky_guy
			capital_province = {
				add_special_building = witch_house
			}
		}
		create_character = {
			employer = scope:unlucky_guy
			gender = female
			template = yaga_character
			name = yaga_name
			dynasty_house = scope:unlucky_guy.house
			save_scope_as = yaga
		}
		scope:yaga = {
			add_character_flag = yaga_flag
			add_trait = witch
			#give_witch_secret_or_trait_effect = yes
			add_secret = {
				type = secret_cannibal
				target = scope:yaga
			}
			add_perk = protective_runes_perk
			add_perk = magical_senses_perk
			add_perk = witch_familiar_perk
			add_perk = oneiromancy_perk
			add_perk = wisdom_of_nature_perk
			add_perk = love_potions_perk
			add_perk = mistical_insight_perk
			add_perk = evil_eye_perk
			add_perk = lifestealer_perk
			add_perk = true_witch_perk

			#add_perk = fate_weaver_p10_perk
			#add_perk = healer_p9_perk

			add_perk = truth_is_relative_perk
			add_perk = digging_for_dirt_perk
			add_perk = kidnapper_perk

			every_ruler = {
				limit = {
					is_ai = no
				}
				reverse_add_opinion = {
					target = scope:yaga
					modifier = suspicious_opinion
					opinion = -200
				}
			}

			add_character_modifier = mind_reader_modifier
			add_character_modifier = amp_modifier
			add_character_modifier = master_defence_modifier
			add_character_modifier = master_magic_modifier
			add_trait_xp = {
				trait = source
				track = magic_potential
				value = 80
			}
			add_character_flag = special_magic_character
			house = {
				add_house_modifier = witch_coven
			}
		}
		scope:unlucky_guy = {
			create_title_and_vassal_change = {
				type = conquest
				save_scope_as = change
				add_claim_on_loss = no
			}
			random_held_title = {
				limit = {
					tier = tier_county
					title_province = scope:unlucky_guy.capital_province
				}
				change_title_holder_include_vassals = {
					holder = scope:yaga
					change = scope:change
				}
			}
			resolve_title_and_vassal_change = scope:change
		}
		#scope:yaga.capital_province = {
		#	add_special_building = witch_house
		#}
		create_character = {
			employer = scope:yaga
			gender = female
			template = yaga_d_character
			mother = scope:yaga
			dynasty_house = scope:unlucky_guy.house
			save_scope_as = dou
		}
		scope:dou = {
			add_trait = witch
			add_trait = source
			add_trait_xp = {
				trait = source
				track = magic_potential
				value = 51
			}
		}
		create_character = {
			employer = scope:yaga
			gender = female
			template = yaga_d_character
			mother = scope:yaga
			dynasty_house = scope:unlucky_guy.house
			save_scope_as = dou
		}
		scope:dou = {
			add_trait = witch
			add_trait = source
			add_trait_xp = {
				trait = source
				track = magic_potential
				value = 14
			}
		}
		create_character = {
			employer = scope:yaga
			gender = female
			template = yaga_d_character
			mother = scope:yaga
			dynasty_house = scope:unlucky_guy.house
			save_scope_as = dou
		}
		scope:dou = {
			add_trait = witch
		}
		scope:yaga = {
			#add_trait = source
			change_current_weight = 200
			spawn_army = {
				name = demonic_knights
				men_at_arms = {
					type = special_magic_hut_lol
					stacks = 1
				}
				men_at_arms = {
					type = demonic_knights
					stacks = 4
				}
				men_at_arms = {
					type = skeletons
					stacks = 6
				}
				inheritable = no
				uses_supply = no
				location = scope:yaga.location
			}
			add_character_modifier = yaga_modifier
		}
		clear_saved_scope = dou
		clear_saved_scope = yaga
	}
}

create_dark_temple = {
	hidden_effect = {
		random_ruler = {
			limit = {
				is_landed_or_landless_administrative = yes
				is_ai = yes
				primary_title = { is_mercenary_company = no }	
				capital_province = {
					has_special_building_slot = no
				}
			}
			capital_province = {
				add_special_building = horned_god_house
			}
			give_witch_secret_or_trait_effect = yes
		}
	}
}

create_magic_academy = {
	hidden_effect = {
		random_ruler = {
			limit = {
				is_landed_or_landless_administrative = yes
				is_ai = yes
				primary_title = { is_mercenary_company = no }	
				capital_province = {
					has_special_building_slot = no
				}
			}
			capital_province = {
				add_special_building = mage_house
			}
			#give_witch_secret_or_trait_effect = yes
		}
	}
}
create_houska = {
	hidden_effect = {
		#title:b_slany.title_province = {
		if = {
			limit = {
				exists = title:c_litomerice
			}
			title:c_litomerice = {
				title_province = {
					if = {
						limit = {
							has_special_building_slot = no
						}
						add_special_building_slot = houska
					}
				}
			}
		}
	}
}

create_extra_coven = {
	random_ruler = {
		limit = {
			is_landed_or_landless_administrative = yes
			is_ai = yes
			is_adult = yes
			exists = house
			house = {
				house_head = PREV
				any_house_member = {
					is_adult = yes
					count > 3
				}
				NOT = {
					any_house_member = {
						OR = {
							is_ai = no
							has_trait = witch_hunter
						}
					}
				}
			}
		}
		house = {
			every_house_member = {
				limit = {
					is_adult = yes
					NOR = {
						has_trait = witch
						any_secret = { secret_type = secret_witch }
					}
				}
				give_witch_secret_or_trait_effect = yes
			}
			add_house_modifier = {
				modifier = witch_coven
			}
			every_house_member = {
				limit = {
					is_adult = yes
				}
				save_scope_as = w1
				house = {
					every_house_member = {
						limit = {
							is_adult = yes
							NOT = { THIS = scope:w1 }
						}
						random_secret = {
							limit = { secret_type = secret_witch }
							reveal_to = scope:w1
						}
					}
				}
				clear_saved_scope = w1
			}
		}
		add_trait = grandmaster_coven
		add_perk = protective_runes_perk
		add_perk = witch_familiar_perk
		add_perk = oneiromancy_perk
		add_perk = wisdom_of_nature_perk
		add_perk = love_potions_perk
		add_perk = mistical_insight_perk
		add_perk = evil_eye_perk
		add_perk = magical_senses_perk
		add_perk = lifestealer_perk
		add_perk = true_witch_perk
	}
}

create_true_witch_effect = {
	hidden_effect = {
		#random_artifact = {
		#	limit = {
		#		has_variable = magic1
		#	}
		#	save_scope_as = art0
		#}
		random_living_character = {
			limit = {
				any_character_artifact = { has_variable = magic1 }
			}
			random_character_artifact = {
				limit = {
					has_variable = magic1
				}
				save_scope_as = art0
			}
		}
		random_ruler = {
			limit = {
				NOR = {
					any_character_artifact = { has_variable = magic1 }
					has_trait = zealous
					has_trait = source
					#has_trait = source2
					#has_trait = source3
					#has_trait = source4
					has_trait = compassionate
					has_trait = true_witch
				}
				is_male = no
				is_landed_or_landless_administrative = yes
				is_ai = yes
				is_adult = yes
				#capital_province = {
				#	OR = {
				#		geographical_region = world_asia_minor
				#		geographical_region = world_europe
				#	}	
				#}
				is_imprisoned = no
			}
			#add_secret = {
			#	type = secret_witch
			#	target = THIS
			#}
			give_witch_secret_or_trait_effect = yes
			add_character_modifier = {
				modifier = yaga_modifier
				days = 3
			}
			add_perk = protective_runes_perk
			add_perk = witch_familiar_perk
			add_perk = oneiromancy_perk
			add_perk = wisdom_of_nature_perk
			add_perk = love_potions_perk
			add_perk = mistical_insight_perk
			add_perk = evil_eye_perk
			add_perk = magical_senses_perk
			add_perk = lifestealer_perk
			add_perk = true_witch_perk
			
			if = {
				limit = {
					exists = scope:art0
				}
				add_personal_artifact_claim = scope:art0
				clear_saved_scope = art0
			}
			
		}
	}
}

create_wandering_mage_effect = {
	hidden_effect = {
		if = {
			limit = {
				any_living_character = {
					has_trait = archmage
					is_ai = yes
					count < 4
				}
			}
			create_pure_wandering_mage_effect = yes
			random_list = {
				1 = {
					create_mage_effect = yes
				}
				3 = {
					create_true_witch_effect = yes
				}
				3 = {

				}
			}
		}
		#if = {
		#	limit = {
		#		any_living_character = {
		#			is_ai = no
		#			OR = {
		#				has_focus = magic_focus
		#				has_trait = true_witch
		#				has_trait = archmage
		#			}
		#		}
		#	}
		#	if = {
		#		limit = {
		#			any_living_character = {
		#				has_trait = archmage
		#				count < 5
		#			}
		#		}
		#		create_pure_wandering_mage_effect = yes
		#		random_list = {
		#			1 = {
		#				create_mage_effect = yes
		#			}
		#			3 = {
		#				create_true_witch_effect = yes
		#			}
		#			3 = {
		#
		#			}
		#		}
		#	}
		#}
		#else = {
		#	if = {
		#		limit = {
		#			any_living_character = {
		#				has_trait = archmage
		#				count < 4
		#			}
		#		}
		#		create_pure_wandering_mage_effect = yes
		#		random_list = {
		#			1 = {
		#				create_mage_effect = yes
		#			}
		#			3 = {
		#				create_true_witch_effect = yes
		#			}
		#			3 = {
		#
		#			}
		#		}
		#	}
		#}
	}
}
create_pure_wandering_mage_effect = {
	random_ruler = {
		limit = {
			is_ai = no
		}
		save_scope_as = pruler
	}
	create_character = {
		location = scope:pruler.location
		template = wandering_mage_character
		faith =scope:pruler.faith
		culture = scope:pruler.culture
		save_scope_as = wmage0
		after_creation = {
			give_witch_secret_or_trait_effect = yes
			add_trait_xp = {
				trait = lifestyle_traveler
				track = travel
				value = { 40 80 }
			}
			add_trait_xp = {
				trait = lifestyle_traveler
				track = danger
				value = { 40 80 }
			}
			add_perk = protective_runes_perk
			add_perk = magical_senses_perk
			add_perk = magical_experiments_p1_perk
			add_perk = mage_tower_p2_perk
			add_perk = mind_control_p6_perk
			add_perk = forbidden_ritual_p7_perk
			add_perk = fate_weaver_p10_perk
			add_perk = magic_triangulation_p5_perk
			add_perk = combat_spells_p3_perk
			add_perk = healer_p9_perk
			add_perk = summoner_p8_perk
			add_perk = mage_p4_perk
			add_character_flag = special_magic_character
			set_random_spell_id = yes
			if = {
				limit = {
					NOT = {	has_trait = archmage	}
				}
				add_trait = archmage
			}
			add_trait_xp = {
				trait = archmage
				track = secret_knowledge
				value = { 1 25 }
			}
			add_trait_xp = {
				trait = archmage
				track = combat_magic
				value = 25
			}
			add_trait_xp = {
				trait = archmage
				track = power_saturation
				value = 50
			}
		}
	}
}
turn_into_mage_effect = {
	if = {
		limit = {
			NOR = {
				has_trait = witch_hunter
				has_character_modifier = novice_witch_hunter_modifier
			}
		}
		if = {
			limit = {
				NOT = {
					has_trait = archmage
				}
			}
			show_as_tooltip = {
				add_trait = archmage
			}
		}
		hidden_effect = {
			if = {
				limit = {
					NOR = {
						has_trait = witch
						any_secret = { secret_type = secret_witch }
					}
				}
				give_witch_secret_or_trait_effect = yes
			}
			if = {
				limit = {
					NOT = {
						has_perk = magical_experiments_p1_perk
					}
				}
				add_perk = magical_experiments_p1_perk
			}
			if = {
				limit = {
					NOT = {
						has_perk = mage_tower_p2_perk
					}
				}
				add_perk = mage_tower_p2_perk
			}
			if = {
				limit = {
					NOT = {
						has_perk = mind_control_p6_perk
					}
				}
				add_perk = mind_control_p6_perk
			}
			if = {
				limit = {
					NOT = {
						has_perk = forbidden_ritual_p7_perk
					}
				}
				add_perk = forbidden_ritual_p7_perk
			}
			if = {
				limit = {
					NOT = {
						has_perk = fate_weaver_p10_perk
					}
				}
				add_perk = fate_weaver_p10_perk
			}
			if = {
				limit = {
					NOT = {
						has_perk = magic_triangulation_p5_perk
					}
				}
				add_perk = magic_triangulation_p5_perk
			}
			if = {
				limit = {
					NOT = {
						has_perk = combat_spells_p3_perk
					}
				}
				add_perk = combat_spells_p3_perk
			}
			if = {
				limit = {
					NOT = {
						has_perk = healer_p9_perk
					}
				}
				add_perk = healer_p9_perk
			}
			if = {
				limit = {
					NOT = {
						has_perk = summoner_p8_perk
					}
				}
				add_perk = summoner_p8_perk
			}
			if = {
				limit = {
					NOT = {
						has_perk = mage_p4_perk
					}
				}
				add_perk = mage_p4_perk
			}
		}
	}
	
}
turn_into_mage_progress_effect = {
	if = {
		limit = {
			NOT = {
				has_perk = magical_experiments_p1_perk
			}
		}
		add_perk = magical_experiments_p1_perk
	}
	else_if = {
		limit = {
			NOT = {
				has_perk = mage_tower_p2_perk
			}
		}
		add_perk = mage_tower_p2_perk
	}
	else_if = {
		limit = {
			NOT = {
				has_perk = mind_control_p6_perk
			}
		}
		add_perk = mind_control_p6_perk
	}
	else_if = {
		limit = {
			NOT = {
				has_perk = forbidden_ritual_p7_perk
			}
		}
		add_perk = forbidden_ritual_p7_perk
	}
	else_if = {
		limit = {
			NOT = {
				has_perk = fate_weaver_p10_perk
			}
		}
		add_perk = fate_weaver_p10_perk
	}
	else_if = {
		limit = {
			NOT = {
				has_perk = magic_triangulation_p5_perk
			}
		}
		add_perk = magic_triangulation_p5_perk
	}
	else_if = {
		limit = {
			NOT = {
				has_perk = combat_spells_p3_perk
			}
		}
		add_perk = combat_spells_p3_perk
	}
	else_if = {
		limit = {
			NOT = {
				has_perk = healer_p9_perk
			}
		}
		add_perk = healer_p9_perk
	}
	else_if = {
		limit = {
			NOT = {
				has_perk = summoner_p8_perk
			}
		}
		add_perk = summoner_p8_perk
	}
	else_if = {
		limit = {
			NOT = {
				has_perk = mage_p4_perk
			}
		}
		add_perk = mage_p4_perk
		add_trait_xp = {
			trait = archmage
			track = secret_knowledge
			value = { 1 11 }
		}
	}
}

create_mage_effect = {
	hidden_effect = {
		random_ruler = {
			limit = {
				is_ai = no
			}
			save_scope_as = hplayer1
		}
		random_ruler = {
			limit = {
				is_landed_or_landless_administrative = yes	
				is_ruler = yes
				is_independent_ruler = yes
				primary_title = { is_mercenary_company = no }	
				highest_held_title_tier > 2
				exists = dynasty		
				dynasty={
					NOT={
						has_variable=ev1used
					}
				}
				in_diplomatic_range = scope:hplayer1
				#capital_province = {
				#	OR = {
				#		geographical_region = world_asia_minor
				#		geographical_region = world_europe
				#	}	
				#}
				is_ai = yes
				NOT = { has_trait = zealous }
				NOT = { has_trait = source }
				#NOT = { has_trait = source2 }
				#NOT = { has_trait = source3 }
				#NOT = { has_trait = source4 }
				OR = {
					has_trait = education_learning_1
					has_trait = education_learning_2
					has_trait = education_learning_3
					has_trait = education_learning_4
					has_trait = education_learning_5
					has_trait = education_martial_3
					has_trait = education_martial_4
					has_trait = education_martial_5
					has_trait = education_diplomacy_4
					has_trait = education_diplomacy_5
					has_trait = education_intrigue_3
					has_trait = education_intrigue_4
					has_trait = education_intrigue_5
				}
			}
			#save_temporary_scope_as = new_mage
			save_scope_as = new_mage
			#add_secret = {
			#	type = secret_witch
			#	target = this
			#}
			give_witch_secret_or_trait_effect = yes
			#random = {
			#	chance = 50
			#	add_trait = source
			#}
			add_learning_skill = 2
			#add_intrigue_skill = 2
			
			add_perk = protective_runes_perk
			add_perk = magical_experiments_p1_perk
			add_perk = mage_tower_p2_perk
			add_perk = mind_control_p6_perk
			add_perk = forbidden_ritual_p7_perk
			add_perk = fate_weaver_p10_perk
			add_perk = magic_triangulation_p5_perk
			add_perk = combat_spells_p3_perk
			add_perk = healer_p9_perk
			add_perk = summoner_p8_perk
			add_perk = mage_p4_perk
			set_random_spell_id = yes
			random = {
				chance = 50
				add_trait_xp = {
					trait = archmage
					track = demonology
					value = 30
				}
			}
			set_random_spell_id = yes
			random_list = {
				55 = {
					add_min_source_trait = yes
					add_trait_xp = {
						trait = archmage
						track = secret_knowledge
						value = 5
					}
				}
				10 = {
					gain_huge_ps_effect = yes
					add_trait = source
					add_trait_xp = {
						trait = source
						track = magic_potential
						value = { 0 50 }
					}
					add_trait_xp = {
						trait = archmage
						track = secret_knowledge
						value = { 5 20 }
					}
					add_trait_xp = {
						trait = archmage
						track = combat_magic
						value = { 1 60 }
					}
				}
				25 = {
					gain_huge_ps_effect = yes
					add_trait_xp = {
						trait = archmage
						track = secret_knowledge
						value = { 15 30 }
					}
					add_trait_xp = {
						trait = archmage
						track = demonology
						value = { 25 65 }
					}
				}
				10 = {	#badass
					trigger = {
						age > 50
					}
					add_trait = source
					add_trait_xp = {
						trait = source
						track = magic_potential
						value = 70
					}
					add_learning_skill = 6
					add_trait_xp = {
						trait = archmage
						track = secret_knowledge
						value = { 40 90 }
					}
					add_trait_xp = {
						trait = archmage
						track = demonology
						value = { 35 85 }
					}
					add_trait_xp = {
						trait = archmage
						track = combat_magic
						value = 100
					}
					add_trait_xp = {
						trait = archmage
						track = power_saturation
						value = 70
					}
					random_artifact = {
						limit = {
							has_variable = magic1
							NOT = {
								artifact_owner = scope:new_mage
							}
						}
						save_scope_as = mart2
					}
					if = {
						limit = {
							exists = scope:mart2
							NOT = {
								has_personal_artifact_claim = scope:mart2
							}
						}
						add_personal_artifact_claim = scope:mart2
						add_character_modifier = {
							modifier = preparation_for_stealing_modifier
							years = 5
						}
					}
					if = {
						limit = {
							exists = scope:mart2
							in_diplomatic_range = scope:mart2.artifact_owner
						}
						#start_scheme = {
						#	type = steal_back_artifact
						#	target_character = scope:mart2.artifact_owner
						#	artifact = scope:mart2
						#}
						begin_scheme_with_agents_effect = {
							SCHEME_TYPE = steal_back_artifact
							TARGET_TYPE = target_character
							TARGET_SCOPE = scope:mart2.artifact_owner
							# Success.
							AGENT_1 = agent_thief
							AGENT_2 = agent_thief
							# Speed.
							AGENT_3 = agent_infiltrator
							AGENT_4 = agent_infiltrator
							# Secrecy.
							AGENT_5 = agent_lookout
						}
						scope:new_scheme ?= {
							set_variable = {
								name = target_artifact
								value = scope:mart2
							}
						}
					}
					random = {
						chance = 40
						add_character_modifier = {
							modifier = master_alteration_modifier
						}
						add_character_flag = magic_transmutation
					}
					random = {
						chance = 40
						add_character_modifier = {
							modifier = master_necromancer_modifier
						}
						add_trait = necromancer
						spawn_army = {
							name = undead_army_loc
							men_at_arms = {
								type = skeletons
								stacks = 10
							}
							inheritable = no
							uses_supply = no
							location = scope:new_mage.location
						}
						add_character_flag = skeleton_warriors
					}
					random = {
						chance = 40
						add_character_modifier = {
							modifier = master_metamagic_modifier
						}
					}
					random = {
						chance = 40
						add_character_modifier = {
							modifier = upgraded_body_modifier
						}
					}
					random = {
						chance = 40
						add_character_modifier = {
							modifier = master_psionic_modifier
						}
						add_character_modifier = {
							modifier = mind_reader_modifier
						}
					}
					random = {
						chance = 40
						add_character_modifier = {
							modifier = strength_ohm_modifier
						}
					}
					random = {
						chance = 40
						add_character_modifier = {
							modifier = demonic_charm_modifier
						}
					}
					random = {
						chance = 40
						add_character_flag = protection_ritual
					}
					random = {
						chance = 40
						add_character_modifier = {
							modifier = financial_knowledge_modifier
							years = 5
						}
					}
					random_list = {
						1 = {
							trigger = {
								NOT = { has_character_flag = shadowstep_flag }
							}
							add_character_flag = shadowstep_flag
						}
						1 = {
							trigger = {
								NOT = { has_character_flag = hipercognition_flag }
							}
							add_character_flag = hipercognition_flag
						}
						1 = {
							trigger = {
								NOT = { has_character_flag = firestorm_spell_flag }
							}
							add_character_flag = firestorm_spell_flag
						}
						1 = {
							trigger = {
								NOT = { has_character_flag = plague_spell_flag }
							}
							add_character_flag = plague_spell_flag
						}
						1 = {
							trigger = {
								NOT = { has_character_flag = healing_spell_flag }
							}
							add_character_flag = healing_spell_flag
						}
					}
					random_vassal = {
						limit = {
							is_powerful_vassal = yes
						}
						save_scope_as = some_vassal
						
					}
					if = {
						limit = {
							exists = scope:some_vassal
						}
						set_relation_mminion = scope:some_vassal
						add_hook = {
							type = magic_domination_hook
							target = scope:some_vassal
						}
					}
				}
				#1= {
				#	trigger = {
				#		NOT = {
				#			any_living_character = {
				#				has_trait = source3
				#			}
				#		}
				#	}
				#	add_trait = source3
				#}
			}
			random_list = {
				10 = {
					spawn_army = {
						name = demonic_knights
						men_at_arms = {
							type = demonic_knights
							stacks = 2
						}
						levies = {
							add = 600
						}
						inheritable = no
						uses_supply = no
						location = scope:new_mage.location
					}
					add_martial_skill = 4
				}
				10 = {
					if = {
						limit = {
							NOT = {
								has_perk = prepared_for_anything_perk
							}
						}
						add_perk = prepared_for_anything_perk
					}
					if = {
						limit = {
							NOT = {
								has_perk = a_job_done_right_perk
							}
						}
						add_perk = a_job_done_right_perk
					}
					add_intrigue_skill = 2
					add_martial_skill = 4
				}
				10 = {
					gain_huge_ps_effect = yes
					add_intrigue_skill = 3
					add_learning_skill = 3
					add_trait_xp = {
						trait = archmage
						track = secret_knowledge
						value = 8
					}
				}
			}
			add_stress = major_stress_loss
			random_ruler = {
				limit = {
					is_ai = no
					OR = {
						has_trait = witch_hunter
						has_trait = supernatural_hunter
						has_trait = archmage
						has_trait = demon
						has_perk = magical_experiments_p1_perk
					}
				}
				save_scope_as = ppplayer
			}
			if = {
				limit = {
					exists = scope:ppplayer
				}
				random = {
					chance = 30
					add_pressed_claim = scope:ppplayer.primary_title
				}
			}
			
			if = {
				limit = {
					any_artifact = {
						has_variable = catalyst
						artifact_owner = {
							is_ai = no
						}
					}
				}
				random = {
					chance = 50
					add_character_modifier = {
						modifier = amp_modifier
						years = 20
					}
				}
			}
			else = {
				random = {
					chance = 2
					add_character_modifier = {
						modifier = amp_modifier
						years = 20
					}
				}
			}
			random = {
				chance = 50
				random_artifact = {
					limit = {
						has_variable = magic1
						NOT = {
							artifact_owner = scope:new_mage
						}
					}
					save_scope_as = mart
				}
				if = {
					limit = {
						exists = scope:mart
						NOT = {
							has_personal_artifact_claim = scope:mart
						}
					}
					add_personal_artifact_claim = scope:mart
					#add_intrigue_skill = 1
				}
			}
			
			random = {
				chance = 10
				add_character_modifier = master_defence_modifier
			}
			if = {
				limit = {
					NOT = {
						has_trait = compassionate
						has_trait = just
					}
					any_vassal = {
						is_powerful_vassal = yes
						is_ai = yes
					}
				}
				random_vassal = {
					limit = {
						is_powerful_vassal = yes
						is_ai = yes
					}
					save_scope_as = vvvasal
				}
				set_relation_mminion = scope:vvvasal
				add_hook = {
					type = magic_domination_hook
					target = scope:vvvasal
				}
			}
			if = {
				limit = {
					exists = primary_heir
					primary_heir = {
						NOR = {
							has_trait = witch
							any_secret = { secret_type = secret_witch }
						}
					}
				}
				primary_heir = {
					give_witch_secret_or_trait_effect = yes
				}
			}
			random_living_character = {
				limit = {
					NOT = { THIS = scope:new_mage }
					any_character_artifact = {
						has_variable = magic1
					}
					NOT = {
						has_character_flag = magic_item_offer_already_flag
					}
					is_adult = yes
					is_imprisoned = no
				}
				random = {
					chance = 70
					trigger_event = magic_ev7.136
				}
			}
		}
	}
}



burn_witch_effect = {
	$RWITCH$ = { save_scope_as = rwitch }
	
	scope:rwitch = {
		death = {
			killer = root
			death_reason = death_burned_witch
		}
	}
	if = {
		limit = {
			scope:rwitch = {
				OR = {
					OR = {
						has_trait = witch
						any_secret = { secret_type = secret_witch }
					}
				}
			}
		}
		#add_character_flag = killed_real_witch_flag
		if = {
			limit = {
				OR = {
					AND = {
						exists = scope:rwitch.house
						scope:rwitch.house = {
							has_house_modifier = witch_coven
						}
						scope:rwitch.house.house_head = scope:rwitch
					}
					AND = {
						scope:rwitch = {
							OR = {
								has_trait = archmage
								has_trait = grandmaster_coven
							}
						}
					}
					AND = {
						scope:rwitch = {
							has_trait = demon
						}
					}
				}
			}
			add_prestige = 1000
			#add_trait_xp = {
			#	trait = witch_hunter
			#	value = 100
			#}
			if = {
				limit = {
					trait_is_criminal_in_faith_trigger = { TRAIT = witch FAITH = root.faith GENDER_CHARACTER = scope:rwitch }
				}
				add_piety = 1000
			}
		}
		else_if = {
			limit = {
				scope:rwitch = {
					highest_held_title_tier >4
				}
			}
			add_prestige = 800
			#add_trait_xp = {
			#	trait = witch_hunter
			#	value = 80
			#}
			if = {
				limit = {
					trait_is_criminal_in_faith_trigger = { TRAIT = witch FAITH = root.faith GENDER_CHARACTER = scope:rwitch }
				}
				add_piety = 800
			}
		}
		else_if = {
			limit = {
				scope:rwitch = {
					OR = {
						highest_held_title_tier >3
						has_trait = true_witch
					}
				}
			}
			add_prestige = 500
			#add_trait_xp = {
			#	trait = witch_hunter
			#	value = 50
			#}
			if = {
				limit = {
					trait_is_criminal_in_faith_trigger = { TRAIT = witch FAITH = root.faith GENDER_CHARACTER = scope:rwitch }
				}
				add_piety = 500
			}
		}
		else_if = {
			limit = {
				scope:rwitch = {
					highest_held_title_tier >2
				}
			}
			add_prestige = 300
			#add_trait_xp = {
			#	trait = witch_hunter
			#	value = 30
			#}
			if = {
				limit = {
					trait_is_criminal_in_faith_trigger = { TRAIT = witch FAITH = root.faith GENDER_CHARACTER = scope:rwitch }
				}
				add_piety = 300
			}
		}
		else = {
			add_prestige = 100
			#add_trait_xp = {
			#	trait = witch_hunter
			#	value = 10
			#}
			if = {
				limit = {
					trait_is_criminal_in_faith_trigger = { TRAIT = witch FAITH = root.faith GENDER_CHARACTER = scope:rwitch }
				}
				add_piety = 100
			}
		}
		add_stress = medium_stress_loss
		
	}
	else = {
		add_stress = medium_stress_gain
		add_prestige = -100
		add_piety = -100
	}
	add_dread = 5
	clear_saved_scope = rwitch
}
#give_magic_sat_effect = {
#	if = {
#		limit = { has_perk = combat_spells_p3_perk }
#		add_character_modifier = {
#			modifier = power_saturated2
#		}
#	}
#	else = {
#			add_character_modifier = {
#				modifier = power_saturated1
#			}
#		
#	}
#}

#remove_magic_sat_effect = {
#	if = {
#		limit = { has_character_modifier = power_saturated2 }
#		remove_character_modifier = {
#			modifier = power_saturated2
#		}
#		
#	}
#	if = { limit = { has_character_modifier = power_saturated1 }
#		remove_character_modifier = {
#			modifier = power_saturated1
#		}
#		
#	}
#}

cgrandmaster_has_been_chosen_effect = {
	involved_activity = {
		add_activity_log_entry = {
			key = cgrandmaster_chosen
			tags = { good major completed }
			#tags = { completed }
			show_in_conclusion = yes
			character = root
			prev = {
				save_scope_as = i_am_new_cmg
				add_trait = grandmaster_coven
				if = {
					limit = {
						is_valid_for_legitimacy_change = yes
						culture = {
							has_cultural_tradition = coven_rule_tradition
						}
					}
					add_legitimacy = medium_legitimacy_gain
				}
				add_xp_2_grandmaster_inheriting = yes
				add_prestige = medium_prestige_gain
				complete_activity_intent = yes
				hidden_effect = {
					random_secret = {
						limit = {
							secret_type = secret_witch
						}
						save_scope_as = master_secret
					}
					house = {
						every_house_member = {
							limit = {
								NOR = {
									THIS = scope:i_am_new_cmg
									has_trait = witch
								}
								any_secret = {
									secret_type = secret_witch
									NOT = {	is_known_by = scope:i_am_new_cmg	}
								}
							}
							random_secret = {
								limit = {
									secret_type = secret_witch
								}
								reveal_to = scope:i_am_new_cmg
							}
							
							if = {
								limit = {
									has_trait = grandmaster_coven
								}
								remove_trait = grandmaster_coven
							}
						}
						if = {
							limit = {
								exists = scope:master_secret
							}
							every_house_member = {
								limit = {
									OR = {
										has_trait = witch
										any_secret = { secret_type = secret_witch }
									}
									NOT = { THIS = scope:i_am_new_cmg }
								}
								if = {
									limit = {
										scope:master_secret = {
											NOT = {	is_known_by = PREV	}
										}
									}
									scope:master_secret = {
										reveal_to = PREV
									}
								}
							}
						}
					}
				}
				clear_saved_scope = i_am_new_cmg
			}
		}
	}
}

seek_the_power1_effect = {
	involved_activity = {
		add_activity_log_entry = {
			key = seek_the_power1_key
			#tags = { good major completed }
			#tags = { completed }
			show_in_conclusion = yes
			character = root
			prev = {
				custom_tooltip = seek_the_power1_ct
			}
		}
	}
}

seek_the_power2_effect = {
	involved_activity = {
		add_activity_log_entry = {
			key = seek_the_power2_key
			#tags = { good major completed }
			#tags = { completed }
			show_in_conclusion = yes
			character = root
			prev = {
				show_as_tooltip = {
					add_character_modifier = {
						modifier = ancient_tomes_modifier
						years = 3
					}
				}
			}
		}
	}
}

seek_the_power3a_effect = {
	involved_activity = {
		add_activity_log_entry = {
			key = seek_the_power2_key
			#tags = { good major completed }
			#tags = { completed }
			show_in_conclusion = yes
			character = root
			prev = {
				show_as_tooltip = {
					gain_huge_ps_effect = yes
				}
			}
		}
	}
}

seek_the_power3b_effect = {
	involved_activity = {
		add_activity_log_entry = {
			key = seek_the_power2_key
			#tags = { good major completed }
			#tags = { completed }
			show_in_conclusion = yes
			character = root
			prev = {
				show_as_tooltip = {
					add_stress = minor_stress_loss
				}
			}
		}
	}
}

seek_the_power4a_effect = {
	involved_activity = {
		add_activity_log_entry = {
			key = seek_the_power2_key
			#tags = { good major completed }
			#tags = { completed }
			show_in_conclusion = yes
			character = root
			prev = {
				custom_tooltip = ev2.47.a_ct
			}
		}
	}
}

seek_the_power4b_effect = {
	involved_activity = {
		add_activity_log_entry = {
			key = seek_the_power2_key
			#tags = { good major completed }
			#tags = { completed }
			show_in_conclusion = yes
			character = root
			prev = {
				show_as_tooltip = {
					add_stress = medium_stress_loss
					#add_learning_skill = 1
				}
			}
		}
	}
}

seek_the_power4c_effect = {
	involved_activity = {
		add_activity_log_entry = {
			key = seek_the_power2_key
			#tags = { good major completed }
			#tags = { completed }
			show_in_conclusion = yes
			character = root
			prev = {
				show_as_tooltip = {
					gain_sc_xp1_effect = yes
				}
			}
		}
	}
}

seek_the_power5_effect = {
	involved_activity = {
		add_activity_log_entry = {
			key = seek_the_power2_key
			#tags = { good major completed }
			#tags = { completed }
			show_in_conclusion = yes
			character = root
			prev = {
				custom_tooltip = seek_the_power5_effect_ct
			}
		}
	}
}

seek_the_power6a_effect = {
	involved_activity = {
		add_activity_log_entry = {
			key = seek_the_power2_key
			#tags = { good major completed }
			#tags = { completed }
			show_in_conclusion = yes
			character = root
			prev = {
				custom_tooltip = ev4.88.0.a_ct
			}
		}
	}
}

artifacts_searching_completed_log_entry_effect = {
	involved_activity = {
		if = {
			limit = {
				var:activity_special_type_progression < 50
			}
			add_activity_log_entry = {
				key = artifacts_searching_studies_completed_log
				#tags = { completed }
				#score = 100
				show_in_conclusion = yes
				character = root
				#Effects
				root = {
					hidden_effect = {
						add_stress = medium_stress_gain
					}
					show_as_tooltip = {
						add_stress = medium_stress_gain
					}
				}
			}
		}
		else_if = {
			limit = {
				var:activity_special_type_progression < 75
			}
			add_activity_log_entry = {
				key = artifacts_searching_studies_completed_log2
				tags = { good major completed }
				show_in_conclusion = yes
				character = root
				root = {
					custom_tooltip = artifacts_searching_concluded
					custom_tooltip = artifacts_searching_concluded3
					complete_activity_intent = yes
				}
			}
		}
		else_if = {
			limit = {
				var:activity_special_type_progression < 100
			}
			add_activity_log_entry = {
				key = artifacts_searching_studies_completed_log2
				tags = { good major completed }
				show_in_conclusion = yes
				character = root
				root = {
					custom_tooltip = artifacts_searching_concluded
					if = {
						limit = {
							NOT = { has_personal_artifact_claim = scope:final_arti }
						}
						if = {
							limit = {
								has_character_flag = will_gain_claim_for_magic_item
							}
							hidden_effect = {
								add_personal_artifact_claim = scope:final_arti
							}
							show_as_tooltip = {
								add_personal_artifact_claim = scope:final_arti
							}
							#custom_tooltip = artifacts_searching_concluded4
						}
						else = {
							custom_tooltip = artifacts_searching_concluded3
						}
					}
					complete_activity_intent = yes
				}
			}
		}
		else_if = {
			limit = {
				var:activity_special_type_progression >99
			}
			add_activity_log_entry = {
				key = artifacts_searching_studies_completed_log2
				tags = { good major completed }
				show_in_conclusion = yes
				character = root
				root = {
					custom_tooltip = artifacts_searching_concluded
					if = {
						limit = {
							NOT = { has_personal_artifact_claim = scope:final_arti }
						}
						hidden_effect = {
							add_personal_artifact_claim = scope:final_arti
						}
						show_as_tooltip = {
							add_personal_artifact_claim = scope:final_arti
						}
						#custom_tooltip = artifacts_searching_concluded4
					}
					complete_activity_intent = yes
				}
			}
		}
	}
}

upgrade_arcana_legacy_effect = {
	if = {
		limit = {
			exists = dynasty
		}
		dynasty = {
			if = {
				limit = {
					NOT = {	has_dynasty_perk = witchcraft_legacy_1	}
				}
				hidden_effect = {
					add_dynasty_prestige = compensate_dynast_prest_value
				}
				add_dynasty_perk = witchcraft_legacy_1
			}
			else_if = {
				limit = {
					NOT = {	has_dynasty_perk = witchcraft_legacy_2	}
				}
				hidden_effect = {
					add_dynasty_prestige = compensate_dynast_prest_value
				}
				add_dynasty_perk = witchcraft_legacy_2
			}
			else_if = {
				limit = {
					NOT = {	has_dynasty_perk = witchcraft_legacy_3	}
				}
				hidden_effect = {
					add_dynasty_prestige = compensate_dynast_prest_value
				}
				add_dynasty_perk = witchcraft_legacy_3
			}
			else_if = {
				limit = {
					NOT = {	has_dynasty_perk = witchcraft_legacy_4	}
				}
				hidden_effect = {
					add_dynasty_prestige = compensate_dynast_prest_value
				}
				add_dynasty_perk = witchcraft_legacy_4
			}
			else_if = {
				limit = {
					NOT = {	has_dynasty_perk = witchcraft_legacy_5	}
				}
				hidden_effect = {
					add_dynasty_prestige = compensate_dynast_prest_value
				}
				add_dynasty_perk = witchcraft_legacy_5
			}
		}
	}
	
}

dark_blade_grows_stronger = {
	hidden_effect = {
		random_character_artifact = {
			limit = {	has_variable = dark_blade	}
			random_list = {
				2 = {	add_artifact_modifier = darkk_blade_1_modifier	}
				1 = {	add_artifact_modifier = darkk_blade_2_modifier	}
				1 = {	add_artifact_modifier = darkk_blade_3_modifier	}
				1 = {	add_artifact_modifier = darkk_blade_4_modifier	}
				#1 = {	add_artifact_modifier = darkk_blade_5_modifier	}
				1 = {	add_artifact_modifier = darkk_blade_6_modifier	}
			}
			add_durability = 100
		}
		if = {
			limit = {
				NOT = {
					has_character_flag = db_story_flag
				}
			}
			random = {
				chance = 50
				trigger_event = {
					id = magic_ev4.52
					months = { 12 24 }
				}
			}
		}
		if = {
			limit = {
				NOR = {
					any_secret = {
						secret_type = secret_witch
					}
					has_trait = witch
				}
			}
			give_witch_secret_or_trait_effect = yes
		}
	}
}

try_one_more_seek_power_effect1 = {
	random_list = {
		15 = {

		}
		10 = {
			trigger = {
				NOT = {	has_character_modifier = ancient_tomes_modifier	}
			}
			trigger_event = {
				id = magic_ev4.75
				days = 1
			}
		}
		2 = {
			trigger_event = {
				id = witch.3014
			}
		}
		5 = {
			trigger = {
				any_character_artifact = {
					has_variable = magic1
					count < 4
				}
			}
			trigger_event = {
				id = magic_ev4.78
				days = 1
			}
		}
	}
}
display_mage_duel_warnings_effect = {
	if = {
		limit = {
			has_trait = archmage
			has_trait_xp = {
				trait = archmage
				track = power_saturation
				value < 50
			}
		}
		custom_tooltip = mage_duel_duel_ct2
	}
	if = {
		limit = {
			has_full_magic_prot_trigger = yes
		}
		custom_tooltip = mage_duel_duel_ct4
	}
	if = {
		limit = {
			any_character_artifact = {
				OR = {
					#has_variable = catalyst
					has_variable = singularity
					has_variable = dark_blade
					has_variable = blackgrimoire
				}
			}
		}
		custom_tooltip = mage_duel_duel_ct7
	}
	scope:recipient = {
		if = {
			limit = {
				has_trait = demon
				scope:actor = {
					NOT = {	has_trait = demon	}
				}
			}
			custom_tooltip = mage_duel_duel_ct3
		}
		if = {
			limit = {
				has_full_magic_prot_trigger = yes
			}
			custom_tooltip = mage_duel_duel_ct5
		}
		if = {
			limit = {
				is_legendary_mage_trigger = yes
			}
			custom_tooltip = mage_duel_duel_ct6
		}
		if = {
			limit = {
				any_character_artifact = {
					OR = {
						#has_variable = catalyst
						has_variable = singularity
						has_variable = dark_blade
						has_variable = blackgrimoire
					}
				}
			}
			custom_tooltip = mage_duel_duel_ct8
		}
	}
}
configure_start_mage_duel_effect = {
	$MD_ATTACKER$ = { save_scope_as = md_attacker }
	$MD_DEFENDER$ = { save_scope_as = md_defender }
	hidden_effect = {
		scope:md_attacker = {
			set_spell_id = { ID = 27 }
			if = {
				limit = {
					is_ai = yes
					any_character_artifact = { has_variable = pot8 }
					NOT = {
						has_character_modifier = alchemical_enhancement
					}
				}
				add_character_modifier = {
					modifier = alchemical_enhancement
					months = 12
				}
				random_character_artifact = {
					limit = {
						has_variable = pot8
						}
					destroy_artifact = this
				}
			}
			set_variable = {
				name = pclash
				value = 9
			}
			set_variable = {
				name = dspell
				value = 0
			}
			if = {
				limit = {
					has_trait = archmage
					has_trait_xp = {
						trait = archmage
						track = secret_knowledge
						value > 74
					}
				}
				change_variable = {
					name = dspell
					add = 2
				}
			}
			else_if = {
				limit = {
					has_trait = archmage
					has_trait_xp = {
						trait = archmage
						track = secret_knowledge
						value > 24
					}
				}
				change_variable = {
					name = dspell
					add = 1
				}
			}
			if = {
				limit = {
					has_trait = archmage
					has_trait_xp = {
						trait = archmage
						track = combat_magic
						value > 64
					}
				}
				change_variable = {
					name = dspell
					add = 2
				}
			}
			else_if = {
				limit = {
					has_trait = archmage
					has_trait_xp = {
						trait = archmage
						track = combat_magic
						value > 34
					}
				}
				change_variable = {
					name = dspell
					add = 1
				}
			}
			#if = {
			#	limit = {
			#		has_trait = source3
			#	}
			#	change_variable = {
			#		name = dspell
			#		add = 2
			#	}
			#}
			if = {
				limit = {
					any_equipped_character_artifact = {
						has_variable = singularity
						has_artifact_modifier = singularity_modifier5
					}
				}
				change_variable = {
					name = dspell
					add = 1
				}
			}
			else_if = {
				limit = {
					any_equipped_character_artifact = {
						has_variable = singularity2
					}
				}
				change_variable = {
					name = dspell
					add = 1
				}
			}
			if = {
				limit = {
					any_equipped_character_artifact = {
						has_variable = catalyst
					}
				}
				change_variable = {
					name = dspell
					add = 1
				}
			}
			#if = {
			#	limit = {
			#		any_equipped_character_artifact = {
			#			has_variable = blackgrimoire
			#		}
			#	}
			#	change_variable = {
			#		name = dspell
			#		add = 1
			#	}
			#}
			if = {
				limit = {
					has_mage_academy_trigger = yes
				}
				change_variable = {
					name = dspell
					add = 1
				}
			}
			if = {
				limit = {
					has_character_modifier = magic_duelist_modifier
				}
				change_variable = {
					name = dspell
					add = 1
				}
			}
			if = {
				limit = {
					has_character_modifier = alchemical_enhancement
				}
				change_variable = {
					name = dspell
					add = 1
				}
			}
			#if = {
			#	limit = {
			#		OR = {
			#			has_character_modifier = hipercognition_modifier1
			#			has_character_modifier = hipercognition_modifier2
			#			has_character_modifier = hipercognition_modifier3
			#			has_character_modifier = hipercognition_modifier4
			#		}
			#	}
			#	change_variable = {
			#		name = dspell
			#		add = 1
			#	}
			#}
			if = {
				limit = {
					has_trait = necromancer
				}
				change_variable = {
					name = dspell
					add = 1
				}
			}
			if = {
				limit = {
					has_character_modifier = ultimate_spell_modifier
				}
				change_variable = {
					name = dspell
					add = 3
				}
			}
			set_variable = {
				name = pcprogress
				value = 0
			}
			set_variable = {
				name = nrround
				value = 1
			}
			set_variable = {
				name = mdmana
				value = 10
			}
			#add_character_flag = mage_duel_type1
			if = {
				limit = {
					has_full_magic_prot_trigger = yes
				}
				add_character_flag = md_has_full_magic_prot_flag
			}
			#md_select_strategy_for_ai_effect = yes
		}
		scope:md_defender = {
			set_spell_id = { ID = 27 }
			if = {
				limit = {
					is_ai = yes
					any_character_artifact = { has_variable = pot8 }
					NOT = {
						has_character_modifier = alchemical_enhancement
					}
				}
				add_character_modifier = {
					modifier = alchemical_enhancement
					months = 12
				}
				random_character_artifact = {
					limit = {
						has_variable = pot8
						}
					destroy_artifact = this
				}
			}
			set_variable = {
				name = pclash
				value = 9
			}
			set_variable = {
				name = dspell
				value = 0
			}
			if = {
				limit = {
					has_trait = archmage
					has_trait_xp = {
						trait = archmage
						track = secret_knowledge
						value > 74
					}
				}
				change_variable = {
					name = dspell
					add = 2
				}
			}
			else_if = {
				limit = {
					has_trait = archmage
					has_trait_xp = {
						trait = archmage
						track = secret_knowledge
						value > 24
					}
				}
				change_variable = {
					name = dspell
					add = 1
				}
			}
			if = {
				limit = {
					has_trait = archmage
					has_trait_xp = {
						trait = archmage
						track = combat_magic
						value > 64
					}
				}
				change_variable = {
					name = dspell
					add = 2
				}
			}
			else_if = {
				limit = {
					has_trait = archmage
					has_trait_xp = {
						trait = archmage
						track = combat_magic
						value > 34
					}
				}
				change_variable = {
					name = dspell
					add = 1
				}
			}
			#if = {
			#	limit = {
			#		has_trait = source3
			#	}
			#	change_variable = {
			#		name = dspell
			#		add = 2
			#	}
			#}
			if = {
				limit = {
					any_equipped_character_artifact = {
						has_variable = singularity
						has_artifact_modifier = singularity_modifier5
					}
				}
				change_variable = {
					name = dspell
					add = 1
				}
			}
			else_if = {
				limit = {
					any_equipped_character_artifact = {
						has_variable = singularity2
					}
				}
				change_variable = {
					name = dspell
					add = 1
				}
			}
			if = {
				limit = {
					any_equipped_character_artifact = {
						has_variable = catalyst
					}
				}
				change_variable = {
					name = dspell
					add = 1
				}
			}
			#if = {
			#	limit = {
			#		any_equipped_character_artifact = {
			#			has_variable = blackgrimoire
			#		}
			#	}
			#	change_variable = {
			#		name = dspell
			#		add = 1
			#	}
			#}
			if = {
				limit = {
					has_mage_academy_trigger = yes
				}
				change_variable = {
					name = dspell
					add = 1
				}
			}
			if = {
				limit = {
					has_character_modifier = magic_duelist_modifier
				}
				change_variable = {
					name = dspell
					add = 1
				}
			}
			if = {
				limit = {
					has_character_modifier = alchemical_enhancement
				}
				change_variable = {
					name = dspell
					add = 1
				}
			}
			#if = {
			#	limit = {
			#		OR = {
			#			has_character_modifier = hipercognition_modifier1
			#			has_character_modifier = hipercognition_modifier2
			#			has_character_modifier = hipercognition_modifier3
			#			has_character_modifier = hipercognition_modifier4
			#		}
			#	}
			#	change_variable = {
			#		name = dspell
			#		add = 1
			#	}
			#}
			if = {
				limit = {
					has_trait = necromancer
				}
				change_variable = {
					name = dspell
					add = 1
				}
			}
			if = {
				limit = {
					has_character_modifier = ultimate_spell_modifier
				}
				change_variable = {
					name = dspell
					add = 3
				}
			}
			set_variable = {
				name = pcprogress
				value = 0
			}
			set_variable = {
				name = nrround
				value = 1
			}
			set_variable = {
				name = mdmana
				value = 10
			}
			if = {
				limit = {
					has_full_magic_prot_trigger = yes
				}
				add_character_flag = md_has_full_magic_prot_flag
			}
			md_select_strategy_for_ai_effect = yes
		}
		scope:md_attacker = {
			md_select_strategy_for_ai_effect = yes
		}
		#save_scope_value_as = {
		#	name = follow_up_event1
		#	value = event_id:$OUTPUT_EVENT$
		#}
		#save_scope_value_as = {
		#	name = follow_up_event2
		#	value = event_id:$OUTPUT_EVENT2$
		#}
	}
	scope:md_attacker = {
		trigger_event = magic_ev5.28
	}
	
	#trigger_event = { saved_event_id = scope:follow_up_event }
}

md_select_strategy_for_ai_effect = {
	if = {
		limit = {	is_ai = yes	}
		random_list = {
			100 = {
				trigger = {
					OR = {
						has_trait = demon
						is_the_choosen_one_trigger = yes
					}
				}
				add_character_flag = md_ai_is_offensive
			}
			10 = {
				trigger = {
					OR = {
						has_full_magic_prot_trigger = yes
						AND = {
							has_trait = archmage
							has_trait_xp = {
								trait = archmage
								track = combat_magic
								value > 99
							}
						}
					}
				}
				add_character_flag = md_ai_is_offensive
			}
			15 = {
				add_character_flag = md_ai_is_offensive
			}
			5 = {
				trigger = {
					has_trait = yaga
				}
				add_character_flag = md_ai_is_offensive
			}
			1 = {
				add_character_flag = md_ai_is_defensive
			}
			15 = {
				trigger = {
					has_trait = archmage
					OR = {
						AND = {
							has_trait_xp = {
								trait = archmage
								track = combat_magic
								value > 64
							}
							has_trait_xp = {
								trait = archmage
								track = combat_magic
								value < 100
							}
							has_trait_xp = {
								trait = archmage
								track = secret_knowledge
								value > 74
							}
						}
						AND = {
							OR = {
								AND = {
									has_trait_xp = {
										trait = archmage
										track = combat_magic
										value > 34
									}
									has_trait_xp = {
										trait = archmage
										track = secret_knowledge
										value > 74
									}
								}
								AND = {
									has_trait_xp = {
										trait = archmage
										track = combat_magic
										value > 64
									}
									has_trait_xp = {
										trait = archmage
										track = secret_knowledge
										value > 24
									}
								}
							}
							has_trait_xp = {
								trait = archmage
								track = combat_magic
								value < 100
							}
							OR = {
								any_character_artifact = {
									has_variable = catalyst
								}
								has_trait = necromancer
							}
						}
					}
					NOR = {
						AND = {
							this = scope:md_attacker
							scope:md_defender = {
								OR = {
									has_character_modifier = master_defence_modifier
									AND = {
										has_trait = archmage
										has_trait_xp = {
											trait = archmage
											track = combat_magic
											value > 99
										}
									}
								}
							}
						}
						AND = {
							this = scope:md_defender
							scope:md_attacker = {
								OR = {
									has_character_modifier = master_defence_modifier
									AND = {
										has_trait = archmage
										has_trait_xp = {
											trait = archmage
											track = combat_magic
											value > 99
										}
									}
								}
							}
						}
					}
				}
				add_character_flag = md_ai_is_defensive
			}
			5 = {
				trigger = {
					OR = {
						has_character_flag = hipercognition_flag
						any_character_artifact = { has_variable = blackgrimoire }
					}
					OR = {
						has_character_modifier = alchemical_enhancement
						has_trait_xp = {
							trait = archmage
							track = combat_magic
							value > 34
						}
						has_trait_xp = {
							trait = archmage
							track = secret_knowledge
							value > 34
						}
						has_trait = necromancer
					}
					NOR = {
						AND = {
							this = scope:md_attacker
							scope:md_defender = {
								OR = {
									has_character_modifier = master_defence_modifier
									AND = {
										has_trait = archmage
										has_trait_xp = {
											trait = archmage
											track = combat_magic
											value > 99
										}
									}
								}
							}
						}
						AND = {
							this = scope:md_defender
							scope:md_attacker = {
								OR = {
									has_character_modifier = master_defence_modifier
									AND = {
										has_trait = archmage
										has_trait_xp = {
											trait = archmage
											track = combat_magic
											value > 99
										}
									}
								}
							}
						}
					}
				}
				add_character_flag = md_ai_is_defensive
			}
			30 = {
				trigger = {
					has_character_modifier = ultimate_spell_modifier
				}
				add_character_flag = md_ai_is_defensive
			}
			10 = {
				trigger = {
					has_full_magic_prot_trigger = no
					is_legendary_mage_trigger = no
					OR = {
						AND = {
							this = scope:md_attacker
							scope:md_defender = {
								has_full_magic_prot_trigger = yes
							}
						}
						AND = {
							this = scope:md_defender
							scope:md_attacker = {
								has_full_magic_prot_trigger = yes
							}
						}
					}
				}
				add_character_flag = md_ai_is_defensive
			}
		}
	}
}

clear_mage_duel_variables_effect = {
	remove_variable = pclash
	remove_variable = dspell
	remove_variable = pcprogress
	remove_variable = nrround
	remove_variable = mdmana
	if = {
		limit = {
			has_character_flag = md_has_full_magic_prot_flag
		}
		remove_character_flag = md_has_full_magic_prot_flag
	}
	if = {
		limit = {
			has_character_flag = md_additional_power2
		}
		remove_character_flag = md_additional_power2
	}
	if = {
		limit = {
			has_character_flag = md_used_hipercog_flag
		}
		remove_character_flag = md_used_hipercog_flag
	}
	if = {
		limit = {
			has_character_flag = md_used_shadowstep_flag
		}
		remove_character_flag = md_used_shadowstep_flag
	}
	if = {
		limit = {
			has_character_flag = md_used_blackgrimoire_flag
		}
		remove_character_flag = md_used_blackgrimoire_flag
	}
	if = {
		limit = {
			has_character_flag = md_ai_is_offensive
		}
		remove_character_flag = md_ai_is_offensive
	}
	if = {
		limit = {
			has_character_flag = md_ai_is_defensive
		}
		remove_character_flag = md_ai_is_defensive
	}
}

select_mage_duel_moves = {
	#if = {
	#	limit = {
	#		NOR = {
	#			has_character_flag = mage_duel_type1
	#			has_character_flag = mage_duel_type2
	#			has_character_flag = mage_duel_type3
	#		}
	#	}
	#}
	random_list = {
		1 = {
			add_character_flag = mage_duel_type1
		}
		1 = {
			add_character_flag = mage_duel_type2
		}
		1 = {
			add_character_flag = mage_duel_type3
		}
		1 = {
			trigger = {	NOT = {	has_character_flag = md_additional_power2	}	}
			add_character_flag = mage_duel_type4
		}
		1 = {
			add_character_flag = mage_duel_type5
		}
		1 = {
			add_character_flag = mage_duel_type6
		}
		1 = {
			add_character_flag = mage_duel_type7
		}
		1 = {
			add_character_flag = mage_duel_type8
		}
	}
	clear_md_desc_flags_effect = yes
	random_list = {
		1 = {
			trigger = {
				scope:char2.var:pcprogress > 0
			}
			add_character_flag = md_desc1
		}
		1 = {
			trigger = {
				scope:char2.var:pcprogress = 0
			}
			add_character_flag = md_desc2
		}
		1 = {
			trigger = {
				var:pclash < 3
			}
			add_character_flag = md_desc3
		}
		1 = {
			trigger = {
				var:pclash > 12
			}
			add_character_flag = md_desc4
		}
		1 = {
			trigger = {
				scope:char2.var:dspell > 12
			}
			add_character_flag = md_desc5
		}
		1 = {
			add_character_flag = md_desc6
		}
		4 = {
			trigger = {
				scope:char2 = {
					has_trait = demon
				}
				has_character_flag = mage_duel_type3
			}
			add_character_flag = md_desc7
		}
	}
}

clear_mage_duel_moves = {
	if = {
		limit = {
			has_character_flag = mage_duel_type1
		}
		remove_character_flag = mage_duel_type1
	}
	if = {
		limit = {
			has_character_flag = mage_duel_type2
		}
		remove_character_flag = mage_duel_type2
	}
	if = {
		limit = {
			has_character_flag = mage_duel_type3
		}
		remove_character_flag = mage_duel_type3
	}
	if = {
		limit = {
			has_character_flag = mage_duel_type4
		}
		remove_character_flag = mage_duel_type4
	}
	if = {
		limit = {
			has_character_flag = mage_duel_type5
		}
		remove_character_flag = mage_duel_type5
	}
	if = {
		limit = {
			has_character_flag = mage_duel_type6
		}
		remove_character_flag = mage_duel_type6
	}
	if = {
		limit = {
			has_character_flag = mage_duel_type7
		}
		remove_character_flag = mage_duel_type7
	}
	if = {
		limit = {
			has_character_flag = mage_duel_type8
		}
		remove_character_flag = mage_duel_type8
	}
	clear_md_desc_flags_effect = yes
}

clear_md_desc_flags_effect = {
	if = {
		limit = {
			has_character_flag = md_desc1
		}
		remove_character_flag = md_desc1
	}
	if = {
		limit = {
			has_character_flag = md_desc2
		}
		remove_character_flag = md_desc2
	}
	if = {
		limit = {
			has_character_flag = md_desc3
		}
		remove_character_flag = md_desc3
	}
	if = {
		limit = {
			has_character_flag = md_desc4
		}
		remove_character_flag = md_desc4
	}
	if = {
		limit = {
			has_character_flag = md_desc5
		}
		remove_character_flag = md_desc5
	}
	if = {
		limit = {
			has_character_flag = md_desc6
		}
		remove_character_flag = md_desc6
	}
	if = {
		limit = {
			has_character_flag = md_desc7
		}
		remove_character_flag = md_desc7
	}
}

display_mage_duel_correctly = {
	if = {
		limit = {
			exists = scope:char1
		}
		clear_saved_scope = char1
	}
	if = {
		limit = {
			exists = scope:char2
		}
		clear_saved_scope = char2
	}
	if = {
		limit = {
			root = scope:md_attacker
		}
		save_scope_as = char1
		scope:md_defender = {
			save_scope_as = char2
		}
	}
	else = {
		save_scope_as = char1
		scope:md_attacker = {
			save_scope_as = char2
		}
	}
	if = {
		limit = {
			has_variable = pclash
			var:pclash > 18
		}
		set_variable = {
			name = pclash
			value = 18
		}
	}
	if = {
		limit = {
			has_variable = pclash
			var:pclash < 0
		}
		set_variable = {
			name = pclash
			value = 0
		}
	}
	if = {
		limit = {
			has_variable = dspell
			var:dspell > 18
		}
		set_variable = {
			name = dspell
			value = 18
		}
	}
	if = {
		limit = {
			has_variable = nrround
			var:nrround > 7
		}
		set_variable = {
			name = nrround
			value = 7
		}
	}
	scope:char2 = {
		if = {
			limit = {
				has_variable = pclash
				var:pclash > 18
			}
			set_variable = {
				name = pclash
				value = 18
			}
		}
		if = {
			limit = {
				has_variable = pclash
				var:pclash < 0
			}
			set_variable = {
				name = pclash
				value = 0
			}
		}
		if = {
			limit = {
				has_variable = dspell
				var:dspell > 18
			}
			set_variable = {
				name = dspell
				value = 18
			}
		}
		if = {
			limit = {
				has_variable = nrround
				var:nrround > 7
			}
			set_variable = {
				name = nrround
				value = 7
			}
		}
	}
}

display_previous_round_effect = {
	if = {
		limit = {
			this = scope:md_defender
		}
		scope:char2 = {
			custom_tooltip = opponent_pc_progress
		}
		
	}
	else_if = {
		limit = {
			var:nrround > 1
			this = scope:md_attacker
		}
		#custom_tooltip = last_round_custom_desc
		custom_description_no_bullet = {
			text = last_round_custom_effect
		}
		scope:char2 = {
			custom_tooltip = opponent_pc_progress
		}
		custom_tooltip = my_pc_progress
		if = {
			limit = {
				var:pcprogress > scope:char2.var:pcprogress
			}
			custom_label = md_pc_bar_adv_change
		}
		else_if = {
			limit = {
				var:pcprogress < scope:char2.var:pcprogress
			}
			custom_label = md_pc_bar_dis_change
		}
		else = {
			custom_label = md_pc_bar_not_change
		}
	}
}
md_no_pc_progress_effect = {
	set_variable = {
		name = pcprogress
		value = 0
	}
}
md_tiny_pc_progress_effect = {
	set_variable = {
		name = pcprogress
		value = 2
	}
	change_variable = {
		name = pclash
		add = 2
	}
	scope:char2 = {
		change_variable = {
			name = pclash
			subtract = 2
		}
	}
	custom_tooltip = my_pc_progress1
}
md_low_pc_progress_effect = {
	set_variable = {
		name = pcprogress
		value = md_small_pc_progress_value
	}
	#change_variable = {
	#	name = pcprogress
	#	multiply = 0
	#	add = md_small_pc_progress_value
	#}
	change_variable = {
		name = pclash
		add = md_small_pc_progress_value
	}
	scope:char2 = {
		change_variable = {
			name = pclash
			subtract = root.md_small_pc_progress_value
		}
	}
	if = {
		limit = {
			md_small_pc_progress_value <= 0
		}
		custom_tooltip = my_pc_progress0
	}
	else_if = {
		limit = {
			md_small_pc_progress_value = 1
		}
		custom_tooltip = my_pc_progress1
	}
	else_if = {
		limit = {
			md_small_pc_progress_value = 2
		}
		custom_tooltip = my_pc_progress2
	}
	else_if = {
		limit = {
			md_small_pc_progress_value = 3
		}
		custom_tooltip = my_pc_progress3
	}
	else_if = {
		limit = {
			md_small_pc_progress_value = 4
		}
		custom_tooltip = my_pc_progress4
	}
	else_if = {
		limit = {
			md_small_pc_progress_value = 5
		}
		custom_tooltip = my_pc_progress5
	}
	else_if = {
		limit = {
			md_small_pc_progress_value = 6
		}
		custom_tooltip = my_pc_progress6
	}
	else_if = {
		limit = {
			md_small_pc_progress_value = 7
		}
		custom_tooltip = my_pc_progress7
	}
	else_if = {
		limit = {
			md_small_pc_progress_value = 8
		}
		custom_tooltip = my_pc_progress8
	}
	else_if = {
		limit = {
			md_small_pc_progress_value = 9
		}
		custom_tooltip = my_pc_progress9
	}
	else_if = {
		limit = {
			md_small_pc_progress_value = 10
		}
		custom_tooltip = my_pc_progress10
	}
	else_if = {
		limit = {
			md_small_pc_progress_value = 11
		}
		custom_tooltip = my_pc_progress11
	}
	if = {
		limit = {
			scope:char2 = {	has_character_flag = md_has_full_magic_prot_flag	}
		}
		custom_tooltip = md_progress_lesser_ct2
	}
	else_if = {
		limit = {
			OR = {
				has_character_flag = md_weaken_spells_flag
				has_character_flag = md_weaken_spells2_flag
				has_character_flag = md_weaken_spells3_flag
			}
		}
		custom_tooltip = md_progress_lesser_ct
	}
	if = {
		limit = {
			has_character_flag = md_additional_power2
		}
		custom_tooltip = md_progress_greater_ct
	}
}

md_normal_pc_progress_effect = {
	set_variable = {
		name = pcprogress
		value = md_normal_pc_progress_value
	}
	#change_variable = {
	#	name = pcprogress
	#	multiply = 0
	#	add = md_normal_pc_progress_value
	#}
	change_variable = {
		name = pclash
		add = md_normal_pc_progress_value
	}
	scope:char2 = {
		change_variable = {
			name = pclash
			subtract = root.md_normal_pc_progress_value
		}
	}
	if = {
		limit = {
			md_normal_pc_progress_value <= 0
		}
		custom_tooltip = my_pc_progress0
	}
	else_if = {
		limit = {
			md_normal_pc_progress_value = 1
		}
		custom_tooltip = my_pc_progress1
	}
	else_if = {
		limit = {
			md_normal_pc_progress_value = 2
		}
		custom_tooltip = my_pc_progress2
	}
	else_if = {
		limit = {
			md_normal_pc_progress_value = 3
		}
		custom_tooltip = my_pc_progress3
	}
	else_if = {
		limit = {
			md_normal_pc_progress_value = 4
		}
		custom_tooltip = my_pc_progress4
	}
	else_if = {
		limit = {
			md_normal_pc_progress_value = 5
		}
		custom_tooltip = my_pc_progress5
	}
	else_if = {
		limit = {
			md_normal_pc_progress_value = 6
		}
		custom_tooltip = my_pc_progress6
	}
	else_if = {
		limit = {
			md_normal_pc_progress_value = 7
		}
		custom_tooltip = my_pc_progress7
	}
	else_if = {
		limit = {
			md_normal_pc_progress_value = 8
		}
		custom_tooltip = my_pc_progress8
	}
	else_if = {
		limit = {
			md_normal_pc_progress_value = 9
		}
		custom_tooltip = my_pc_progress9
	}
	else_if = {
		limit = {
			md_normal_pc_progress_value = 10
		}
		custom_tooltip = my_pc_progress10
	}
	else_if = {
		limit = {
			md_normal_pc_progress_value = 11
		}
		custom_tooltip = my_pc_progress11
	}
	if = {
		limit = {
			scope:char2 = {	has_character_flag = md_has_full_magic_prot_flag	}
		}
		custom_tooltip = md_progress_lesser_ct2
	}
	else_if = {
		limit = {
			OR = {
				has_character_flag = md_weaken_spells_flag
				has_character_flag = md_weaken_spells2_flag
				has_character_flag = md_weaken_spells3_flag
			}
		}
		custom_tooltip = md_progress_lesser_ct
	}
	if = {
		limit = {
			has_character_flag = md_additional_power2
		}
		custom_tooltip = md_progress_greater_ct
	}
}

md_high_pc_progress_effect = {
	set_variable = {
		name = pcprogress
		value = md_high_pc_progress_value
	}
	change_variable = {
		name = pclash
		add = md_high_pc_progress_value
	}
	scope:char2 = {
		change_variable = {
			name = pclash
			subtract = root.md_high_pc_progress_value
		}
	}
	#scope:char2 = {
	#	change_variable = {
	#		name = pclash
	#		multiply = -1
	#		add = root.md_high_pc_progress_value
	#		multiply = -1
	#	}
	#}
	if = {
		limit = {
			md_high_pc_progress_value <= 0
		}
		custom_tooltip = my_pc_progress0
	}
	else_if = {
		limit = {
			md_high_pc_progress_value = 1
		}
		custom_tooltip = my_pc_progress1
	}
	else_if = {
		limit = {
			md_high_pc_progress_value = 2
		}
		custom_tooltip = my_pc_progress2
	}
	else_if = {
		limit = {
			md_high_pc_progress_value = 3
		}
		custom_tooltip = my_pc_progress3
	}
	else_if = {
		limit = {
			md_high_pc_progress_value = 4
		}
		custom_tooltip = my_pc_progress4
	}
	else_if = {
		limit = {
			md_high_pc_progress_value = 5
		}
		custom_tooltip = my_pc_progress5
	}
	else_if = {
		limit = {
			md_high_pc_progress_value = 6
		}
		custom_tooltip = my_pc_progress6
	}
	else_if = {
		limit = {
			md_high_pc_progress_value = 7
		}
		custom_tooltip = my_pc_progress7
	}
	else_if = {
		limit = {
			md_high_pc_progress_value = 8
		}
		custom_tooltip = my_pc_progress8
	}
	else_if = {
		limit = {
			md_high_pc_progress_value = 9
		}
		custom_tooltip = my_pc_progress9
	}
	else_if = {
		limit = {
			md_high_pc_progress_value = 10
		}
		custom_tooltip = my_pc_progress10
	}
	else_if = {
		limit = {
			md_high_pc_progress_value = 11
		}
		custom_tooltip = my_pc_progress11
	}
	if = {
		limit = {
			scope:char2 = {	has_character_flag = md_has_full_magic_prot_flag	}
		}
		custom_tooltip = md_progress_lesser_ct2
	}
	else_if = {
		limit = {
			OR = {
				has_character_flag = md_weaken_spells_flag
				has_character_flag = md_weaken_spells2_flag
				has_character_flag = md_weaken_spells3_flag
			}
		}
		custom_tooltip = md_progress_lesser_ct
	}
	if = {
		limit = {
			has_character_flag = md_additional_power2
		}
		custom_tooltip = md_progress_greater_ct
	}
}

md_ultra_pc_progress_effect = {
	set_variable = {
		name = pcprogress
		value = md_ultra_pc_progress_value
	}
	change_variable = {
		name = pclash
		add = md_ultra_pc_progress_value
	}
	scope:char2 = {
		change_variable = {
			name = pclash
			subtract = root.md_ultra_pc_progress_value
		}
	}
	#scope:char2 = {
	#	change_variable = {
	#		name = pclash
	#		multiply = -1
	#		add = root.md_high_pc_progress_value
	#		multiply = -1
	#	}
	#}
	if = {
		limit = {
			md_ultra_pc_progress_value <= 0
		}
		custom_tooltip = my_pc_progress0
	}
	else_if = {
		limit = {
			md_ultra_pc_progress_value = 1
		}
		custom_tooltip = my_pc_progress1
	}
	else_if = {
		limit = {
			md_ultra_pc_progress_value = 2
		}
		custom_tooltip = my_pc_progress2
	}
	else_if = {
		limit = {
			md_ultra_pc_progress_value = 3
		}
		custom_tooltip = my_pc_progress3
	}
	else_if = {
		limit = {
			md_ultra_pc_progress_value = 4
		}
		custom_tooltip = my_pc_progress4
	}
	else_if = {
		limit = {
			md_ultra_pc_progress_value = 5
		}
		custom_tooltip = my_pc_progress5
	}
	else_if = {
		limit = {
			md_ultra_pc_progress_value = 6
		}
		custom_tooltip = my_pc_progress6
	}
	else_if = {
		limit = {
			md_ultra_pc_progress_value = 7
		}
		custom_tooltip = my_pc_progress7
	}
	else_if = {
		limit = {
			md_ultra_pc_progress_value = 8
		}
		custom_tooltip = my_pc_progress8
	}
	else_if = {
		limit = {
			md_ultra_pc_progress_value = 9
		}
		custom_tooltip = my_pc_progress9
	}
	else_if = {
		limit = {
			md_ultra_pc_progress_value = 10
		}
		custom_tooltip = my_pc_progress10
	}
	else_if = {
		limit = {
			md_ultra_pc_progress_value = 11
		}
		custom_tooltip = my_pc_progress11
	}
	if = {
		limit = {
			scope:char2 = {	has_character_flag = md_has_full_magic_prot_flag	}
		}
		custom_tooltip = md_progress_lesser_ct2
	}
	else_if = {
		limit = {
			OR = {
				has_character_flag = md_weaken_spells_flag
				has_character_flag = md_weaken_spells2_flag
				has_character_flag = md_weaken_spells3_flag
			}
		}
		custom_tooltip = md_progress_lesser_ct
	}
	if = {
		limit = {
			has_character_flag = md_additional_power2
		}
		custom_tooltip = md_progress_greater_ct
	}
}
md_tiny_doom_spell_progress_effect = {
	change_variable = {
		name = dspell
		add = md_tiny_doom_spell_value
	}
	if = {
		limit = {
			md_tiny_doom_spell_value = 0
		}
		custom_tooltip = my_doom_spell_progress0
	}
	else_if = {
		limit = {
			md_tiny_doom_spell_value = 1
		}
		custom_tooltip = my_doom_spell_progress1
	}
	else_if = {
		limit = {
			md_tiny_doom_spell_value = 2
		}
		custom_tooltip = my_doom_spell_progress2
	}
	else_if = {
		limit = {
			md_tiny_doom_spell_value = 3
		}
		custom_tooltip = my_doom_spell_progress3
	}
	else_if = {
		limit = {
			md_tiny_doom_spell_value = 4
		}
		custom_tooltip = my_doom_spell_progress4
	}
	else_if = {
		limit = {
			md_tiny_doom_spell_value = 5
		}
		custom_tooltip = my_doom_spell_progress5
	}
	else_if = {
		limit = {
			md_tiny_doom_spell_value = 6
		}
		custom_tooltip = my_doom_spell_progress6
	}
	if = {
		limit = {
			scope:char2 = {	has_character_flag = md_has_full_magic_prot_flag	}
		}
		custom_tooltip = my_doom_spell_lesser_progress2
	}
	else_if = {
		limit = {
			has_character_flag = md_weaken_doom_spell_flag
		}
		custom_tooltip = my_doom_spell_lesser_progress
	}
	if = {
		limit = {
			has_character_flag = md_additional_power2d
		}
		custom_tooltip = md_progress_greater_ct
	}
}
md_low_doom_spell_progress_effect = {
	change_variable = {
		name = dspell
		add = md_small_doom_spell_value
	}
	if = {
		limit = {
			md_small_doom_spell_value = 0
		}
		custom_tooltip = my_doom_spell_progress0
	}
	else_if = {
		limit = {
			md_small_doom_spell_value = 1
		}
		custom_tooltip = my_doom_spell_progress1
	}
	else_if = {
		limit = {
			md_small_doom_spell_value = 2
		}
		custom_tooltip = my_doom_spell_progress2
	}
	else_if = {
		limit = {
			md_small_doom_spell_value = 3
		}
		custom_tooltip = my_doom_spell_progress3
	}
	else_if = {
		limit = {
			md_small_doom_spell_value = 4
		}
		custom_tooltip = my_doom_spell_progress4
	}
	else_if = {
		limit = {
			md_small_doom_spell_value = 5
		}
		custom_tooltip = my_doom_spell_progress5
	}
	else_if = {
		limit = {
			md_small_doom_spell_value = 6
		}
		custom_tooltip = my_doom_spell_progress6
	}
	if = {
		limit = {
			scope:char2 = {	has_character_flag = md_has_full_magic_prot_flag	}
		}
		custom_tooltip = my_doom_spell_lesser_progress2
	}
	else_if = {
		limit = {
			has_character_flag = md_weaken_doom_spell_flag
		}
		custom_tooltip = my_doom_spell_lesser_progress
	}
	if = {
		limit = {
			has_character_flag = md_additional_power2d
		}
		custom_tooltip = md_progress_greater_ct
	}
}

md_normal_doom_spell_progress_effect = {
	change_variable = {
		name = dspell
		add = md_normal_doom_spell_value
	}
	if = {
		limit = {
			md_normal_doom_spell_value = 0
		}
		custom_tooltip = my_doom_spell_progress0
	}
	else_if = {
		limit = {
			md_normal_doom_spell_value = 1
		}
		custom_tooltip = my_doom_spell_progress1
	}
	else_if = {
		limit = {
			md_normal_doom_spell_value = 2
		}
		custom_tooltip = my_doom_spell_progress2
	}
	else_if = {
		limit = {
			md_normal_doom_spell_value = 3
		}
		custom_tooltip = my_doom_spell_progress3
	}
	else_if = {
		limit = {
			md_normal_doom_spell_value = 4
		}
		custom_tooltip = my_doom_spell_progress4
	}
	else_if = {
		limit = {
			md_normal_doom_spell_value = 5
		}
		custom_tooltip = my_doom_spell_progress5
	}
	else_if = {
		limit = {
			md_normal_doom_spell_value = 6
		}
		custom_tooltip = my_doom_spell_progress6
	}
	if = {
		limit = {
			scope:char2 = {	has_character_flag = md_has_full_magic_prot_flag	}
		}
		custom_tooltip = my_doom_spell_lesser_progress2
	}
	else_if = {
		limit = {
			has_character_flag = md_weaken_doom_spell_flag
		}
		custom_tooltip = my_doom_spell_lesser_progress
	}
	if = {
		limit = {
			has_character_flag = md_additional_power2d
		}
		custom_tooltip = md_progress_greater_ct
	}
}

md_high_doom_spell_progress_effect = {
	change_variable = {
		name = dspell
		add = md_high_doom_spell_value
	}
	if = {
		limit = {
			md_high_doom_spell_value = 0
		}
		custom_tooltip = my_doom_spell_progress0
	}
	else_if = {
		limit = {
			md_high_doom_spell_value = 1
		}
		custom_tooltip = my_doom_spell_progress1
	}
	else_if = {
		limit = {
			md_high_doom_spell_value = 2
		}
		custom_tooltip = my_doom_spell_progress2
	}
	else_if = {
		limit = {
			md_high_doom_spell_value = 3
		}
		custom_tooltip = my_doom_spell_progress3
	}
	else_if = {
		limit = {
			md_high_doom_spell_value = 4
		}
		custom_tooltip = my_doom_spell_progress4
	}
	else_if = {
		limit = {
			md_high_doom_spell_value = 5
		}
		custom_tooltip = my_doom_spell_progress5
	}
	else_if = {
		limit = {
			md_high_doom_spell_value = 6
		}
		custom_tooltip = my_doom_spell_progress6
	}
	if = {
		limit = {
			scope:char2 = {	has_character_flag = md_has_full_magic_prot_flag	}
		}
		custom_tooltip = my_doom_spell_lesser_progress2
	}
	else_if = {
		limit = {
			has_character_flag = md_weaken_doom_spell_flag
		}
		custom_tooltip = my_doom_spell_lesser_progress
	}
	if = {
		limit = {
			has_character_flag = md_additional_power2d
		}
		custom_tooltip = md_progress_greater_ct
	}
}
md_ultra_doom_spell_progress_effect = {
	change_variable = {
		name = dspell
		add = md_ultra_doom_spell_value
	}
	if = {
		limit = {
			md_ultra_doom_spell_value = 0
		}
		custom_tooltip = my_doom_spell_progress0
	}
	else_if = {
		limit = {
			md_ultra_doom_spell_value = 1
		}
		custom_tooltip = my_doom_spell_progress1
	}
	else_if = {
		limit = {
			md_ultra_doom_spell_value = 2
		}
		custom_tooltip = my_doom_spell_progress2
	}
	else_if = {
		limit = {
			md_ultra_doom_spell_value = 3
		}
		custom_tooltip = my_doom_spell_progress3
	}
	else_if = {
		limit = {
			md_ultra_doom_spell_value = 4
		}
		custom_tooltip = my_doom_spell_progress4
	}
	else_if = {
		limit = {
			md_ultra_doom_spell_value = 5
		}
		custom_tooltip = my_doom_spell_progress5
	}
	else_if = {
		limit = {
			md_ultra_doom_spell_value = 6
		}
		custom_tooltip = my_doom_spell_progress6
	}
	if = {
		limit = {
			scope:char2 = {	has_character_flag = md_has_full_magic_prot_flag	}
		}
		custom_tooltip = my_doom_spell_lesser_progress2
	}
	else_if = {
		limit = {
			has_character_flag = md_weaken_doom_spell_flag
		}
		custom_tooltip = my_doom_spell_lesser_progress
	}
	if = {
		limit = {
			has_character_flag = md_additional_power2d
		}
		custom_tooltip = md_progress_greater_ct
	}
}
md_increas_magic_injury_effect = {
	hidden_effect = {
		scope:char2 = {
			if = {
				limit = {
					NOR = {
						has_trait = wounded_1
						has_trait = wounded_2
						has_trait = wounded_3
					}
				}
				scope:char1 = {
					send_interface_toast = {
						title = mage_duel
						left_icon = scope:char2
						scope:char2 = {
							add_trait = wounded_1
						}
					}
				}
				send_interface_toast = {
					title = mage_duel
					show_as_tooltip = {
						add_trait_force_tooltip = wounded_1
					}
				}
			}
			else_if = {
				limit = {
					OR = {
						has_trait = wounded_1
						has_trait = wounded_2
					}
				}
				scope:char1 = {
					send_interface_toast = {
						title = mage_duel
						left_icon = scope:char2
						scope:char2 = {
							change_trait_rank = {
								trait = wounded
								rank = 1
								max = 3
							}
							if = {
								limit = {
									has_trait = wounded_3
								}
								custom_tooltip = md_one_more_injury
							}
						}
					}
				}
				if = {
					limit = {
						has_trait = wounded_3
					}
					send_interface_toast = {
						title = mage_duel
						left_icon = scope:char2
						custom_tooltip = md_one_more_injury
					}
				}
				
			}
			else_if = {
				limit = {
					has_trait = wounded_3
				}
				add_character_flag = md_this_is_my_end
			}
		}
	}
}
md_tiny_magic_injury = {
	if = {
		limit = {
			OR = {
				has_character_modifier = alchemical_enhancement
				has_trait = demon
			}
		}
		hidden_effect = {
			random = {
				chance = 10
				scope:char2 = {
					md_increas_magic_injury_effect = yes
				}
			}
		}
		custom_tooltip = md_chance_to_injury2
	}
	else_if = {
		limit = {
			has_character_flag = md_weaken_spells_flag
			scope:char2 = {
				NOT = {	has_character_flag = md_has_full_magic_prot_flag	}
			}
		}
		
	}
	else_if = {
		limit = {
			scope:char2 = {
				NOT = {	has_character_flag = md_has_full_magic_prot_flag	}
			}
		}
		hidden_effect = {
			random = {
				chance = 5
				scope:char2 = {
					md_increas_magic_injury_effect = yes
				}
			}
		}
		custom_tooltip = md_chance_to_injury1
	}
}
md_low_magic_injury = {
	if = {
		limit = {
			OR = {
				has_character_modifier = alchemical_enhancement
				has_trait = demon
			}
		}
		hidden_effect = {
			random = {
				chance = 30
				scope:char2 = {
					md_increas_magic_injury_effect = yes
				}
			}
		}
		custom_tooltip = md_chance_to_injury3
	}
	else_if = {
		limit = {
			has_character_flag = md_weaken_spells_flag
			scope:char2 = {
				NOT = {	has_character_flag = md_has_full_magic_prot_flag	}
			}
		}
		hidden_effect = {
			random = {
				chance = 5
				scope:char2 = {
					md_increas_magic_injury_effect = yes
				}
			}
		}
		custom_tooltip = md_chance_to_injury1
	}
	else_if = {
		limit = {
			scope:char2 = {
				NOT = {	has_character_flag = md_has_full_magic_prot_flag	}
			}
		}
		hidden_effect = {
			random = {
				chance = 10
				scope:char2 = {
					md_increas_magic_injury_effect = yes
				}
			}
		}
		custom_tooltip = md_chance_to_injury2
	}
}
md_medium_magic_injury = {
	if = {
		limit = {
			OR = {
				has_character_modifier = alchemical_enhancement
				has_trait = demon
			}
		}
		hidden_effect = {
			random = {
				chance = 50
				scope:char2 = {
					md_increas_magic_injury_effect = yes
				}
			}
		}
		custom_tooltip = md_chance_to_injury4
	}
	else_if = {
		limit = {
			has_character_flag = md_weaken_spells_flag
			scope:char2 = {
				NOT = {	has_character_flag = md_has_full_magic_prot_flag	}
			}
		}
		hidden_effect = {
			random = {
				chance = 10
				scope:char2 = {
					md_increas_magic_injury_effect = yes
				}
			}
		}
		custom_tooltip = md_chance_to_injury2
	}
	else_if = {
		limit = {
			scope:char2 = {
				NOT = {	has_character_flag = md_has_full_magic_prot_flag	}
			}
		}
		hidden_effect = {
			random = {
				chance = 30
				scope:char2 = {
					md_increas_magic_injury_effect = yes
				}
			}
		}
		custom_tooltip = md_chance_to_injury3
	}
}
md_high_magic_injury = {
	if = {
		limit = {
			OR = {
				has_character_modifier = alchemical_enhancement
				has_trait = demon
			}
		}
		hidden_effect = {
			random = {
				chance = 60
				scope:char2 = {
					md_increas_magic_injury_effect = yes
				}
			}
		}
		custom_tooltip = md_chance_to_injury5
	}
	else_if = {
		limit = {
			has_character_flag = md_weaken_spells_flag
			scope:char2 = {
				NOT = {	has_character_flag = md_has_full_magic_prot_flag	}
			}
		}
		hidden_effect = {
			random = {
				chance = 30
				scope:char2 = {
					md_increas_magic_injury_effect = yes
				}
			}
		}
		custom_tooltip = md_chance_to_injury3
	}
	else_if = {
		limit = {
			scope:char2 = {
				NOT = {	has_character_flag = md_has_full_magic_prot_flag	}
			}
		}
		hidden_effect = {
			random = {
				chance = 50
				scope:char2 = {
					md_increas_magic_injury_effect = yes
				}
			}
		}
		custom_tooltip = md_chance_to_injury4
	}
}
md_ultra_magic_injury = {
	if = {
		limit = {
			OR = {
				has_character_modifier = alchemical_enhancement
				has_trait = demon
			}
		}
		hidden_effect = {
			random = {
				chance = 70
				scope:char2 = {
					md_increas_magic_injury_effect = yes
				}
			}
		}
		custom_tooltip = md_chance_to_injury5
	}
	else_if = {
		limit = {
			has_character_flag = md_weaken_spells_flag
			scope:char2 = {
				NOT = {	has_character_flag = md_has_full_magic_prot_flag	}
			}
		}
		hidden_effect = {
			random = {
				chance = 40
				scope:char2 = {
					md_increas_magic_injury_effect = yes
				}
			}
		}
		custom_tooltip = md_chance_to_injury4
	}
	else_if = {
		limit = {
			scope:char2 = {
				NOT = {	has_character_flag = md_has_full_magic_prot_flag	}
			}
		}
		hidden_effect = {
			random = {
				chance = 60
				scope:char2 = {
					md_increas_magic_injury_effect = yes
				}
			}
		}
		custom_tooltip = md_chance_to_injury5
	}
}
md_low_critical_spell = {
	if = {
		limit = {
			scope:char2 = {
				NOT = {	has_character_flag = md_has_full_magic_prot_flag	}
			}
		}
		scope:char2 = {
			random = {
				chance = 5
				hidden_effect = {
					send_interface_toast = {
						title = critical_spell_it
						show_as_tooltip = {
							death = {
								death_reason = death_duel
								killer = root
							}
						}
					}
					scope:char1 = {
						send_interface_toast = {
							title = critical_spell_it
							scope:char2 = {
								show_as_tooltip = {
									death = {
										death_reason = death_duel
										killer = root
									}
								}
							}
						}
					}
					every_character_artifact = {
						limit = {
							has_variable = magic1
						}
						set_owner = {
							target = root
							history = {
								type = stolen
								actor = scope:char2
								recipient = root
								location = scope:char2.location
							}
						}
					}
				}
				death = {
					death_reason = death_duel
					killer = root
				}
			}
		}
	}
}

md_high_critical_spell = {
	if = {
		limit = {
			scope:char2 = {
				NOT = {	has_character_flag = md_has_full_magic_prot_flag	}
			}
		}
		scope:char2 = {
			random = {
				chance = 10
				hidden_effect = {
					send_interface_toast = {
						title = critical_spell_it
						show_as_tooltip = {
							death = {
								death_reason = death_duel
								killer = root
							}
						}
					}
					scope:char1 = {
						send_interface_toast = {
							title = critical_spell_it
							scope:char2 = {
								show_as_tooltip = {
									death = {
										death_reason = death_duel
										killer = root
									}
								}
							}
						}
					}
					every_character_artifact = {
						limit = {
							has_variable = magic1
						}
						set_owner = {
							target = root
							history = {
								type = stolen
								actor = scope:char2
								recipient = root
								location = scope:char2.location
							}
						}
					}
				}
				death = {
					death_reason = death_duel
					killer = root
				}
			}
		}
	}
}
md_ultra_critical_spell = {
	if = {
		limit = {
			scope:char2 = {
				NOT = {	has_character_flag = md_has_full_magic_prot_flag	}
			}
		}
		scope:char2 = {
			random = {
				chance = 15
				hidden_effect = {
					send_interface_toast = {
						title = critical_spell_it
						show_as_tooltip = {
							death = {
								death_reason = death_duel
								killer = root
							}
						}
					}
					scope:char1 = {
						send_interface_toast = {
							title = critical_spell_it
							scope:char2 = {
								show_as_tooltip = {
									death = {
										death_reason = death_duel
										killer = root
									}
								}
							}
						}
					}
					every_character_artifact = {
						limit = {
							has_variable = magic1
						}
						set_owner = {
							target = root
							history = {
								type = stolen
								actor = scope:char2
								recipient = root
								location = scope:char2.location
							}
						}
					}
				}
				death = {
					death_reason = death_duel
					killer = root
				}
			}
		}
	}
}

consider_end_of_duel = {
	if = {
		limit = {
			NOR = {
				has_character_flag = md_winner
				has_character_flag = md_loser
				has_character_flag = md_not_concluded
			}
		}
		if = {
			limit = {
				is_alive = no
			}
			#add_character_flag = md_loser
			scope:char2 = {
				add_character_flag = md_winner
			}
		}
		else_if = {
			limit = {
				scope:char2 = {
					is_alive = no
				}
			}
			add_character_flag = md_winner
			#scope:char2 = {
			#	add_character_flag = md_loser
			#}
		}
		else_if = {
			limit = {
				has_character_flag = md_this_is_my_end
			}
			add_character_flag = md_loser
			scope:char2 = {
				add_character_flag = md_winner
			}
		}
		else_if = {
			limit = {
				scope:char2 = {
					has_character_flag = md_this_is_my_end
				}
			}
			add_character_flag = md_winner
			scope:char2 = {
				add_character_flag = md_loser
			}
		}
		else_if = {
			limit = {
				var:pclash < 1
			}
			add_character_flag = md_loser
			scope:char2 = {
				add_character_flag = md_winner
			}
		}
		else_if = {
			limit = {
				var:pclash > 17
			}
			add_character_flag = md_winner
			scope:char2 = {
				add_character_flag = md_loser
			}
		}
		else_if = {
			limit = {
				var:dspell > 17
			}
			add_character_flag = md_winner
			scope:char2 = {
				add_character_flag = md_loser
			}
		}
		else_if = {
			limit = {
				scope:char2.var:dspell > 17
			}
			add_character_flag = md_loser
			scope:char2 = {
				add_character_flag = md_winner
			}
		}
		else_if = {
			limit = {
				var:nrround > 7
				this = scope:md_defender
			}
			if = {
				limit = {
					var:pclash > 9
				}
				add_character_flag = md_winner
				scope:char2 = {
					add_character_flag = md_loser
				}
			}
			else_if = {
				limit = {
					var:pclash < 9
				}
				add_character_flag = md_loser
				add_character_flag = md_loser2
				scope:char2 = {
					add_character_flag = md_winner
				}
			}
			else_if = {
				limit = {
					var:pclash = 9
				}
				add_character_flag = md_not_concluded
				scope:char2 = {
					add_character_flag = md_not_concluded
				}
			}
		}
	}
}
add_proper_prize_for_md_winner_effect = {
	add_prestige = massive_prestige_gain
	if = {
		limit = {
			has_character_flag = fight_against_blob_flag
		}
		gain_sc_xp5_effect = yes
		remove_character_flag = fight_against_blob_flag
	}
	else = {
		gain_sc_xp1_effect = yes
	}
	
	gain_cm_xp20_effect = yes
	if = {
		limit = {
			is_valid_for_legitimacy_change = yes
			culture = {
				has_cultural_tradition = mage_rulership_tradition
			}
		}
		add_legitimacy = medium_legitimacy_gain
	}
	if = {
		limit = {
			has_character_flag = blob_flag
			is_ruler = no
		}
		blob_becomes_ruler_effect = yes
	}
	if = {
		limit = {
			has_any_nickname = no
			has_trait = demon
			NOT = {
				has_trait = archmage
			}
			exists = scope:char2
			scope:char2 = {
				has_trait = archmage
			}
		}
		give_nickname = mageslayer_nickname
	}
}
remove_mana_after_md_effect = {
	if = {
		limit = {
			has_trait = archmage
		}
		if = {
			limit = {
				has_trait_xp = {
					trait = archmage
					track = power_saturation
					value < md_mana_cost_value
				}
			}
			hidden_effect = {
				add_trait_xp = {
					trait = archmage
					track = power_saturation
					value = -100
				}
			}
			custom_tooltip = remove_mana_after_md_ct
		}
		else = {
			#change_variable = {
			#	name = mdmana
			#	add = md_mana_cost_value
			#}
			hidden_effect = {
				add_trait_xp = {
					trait = archmage
					track = power_saturation
					value = md_mana_cost_rev_value
				}
			}
			custom_tooltip = remove_mana_after_md_ct2
		}
	}
	else_if = {
		limit = {
			has_character_modifier = power_saturated1
		}
		remove_character_modifier = power_saturated1
	}
	if = {
		limit = {
			has_character_modifier = ultimate_spell_modifier
		}
		remove_character_modifier = ultimate_spell_modifier
	}
}

create_mefisto_effect = {
	hidden_effect = {
		random_ruler = {
			limit = {
				is_landed_or_landless_administrative = yes
				is_independent_ruler = yes
				is_ai = yes
			}
			create_character = {
				name = mefisto_name
				#location = root.capital_province
				employer = this
				faith = this.faith
				template = mefisto_demon_character
				save_scope_as = demon
				after_creation = {
					give_witch_secret_or_trait_effect = yes
				}
			}
			save_scope_as = mruler
		}
		scope:demon = {
			add_character_modifier = infertile_modifier
			add_character_flag = mefisto_devil
			add_character_flag = special_magic_character
			add_character_modifier = mind_reader_modifier
			add_character_modifier = amp_modifier
			#give_witch_secret_or_trait_effect = yes
			add_trait_xp = {
				trait = demon
				value = 55
			}
			add_perk = truth_is_relative_perk
			add_perk = digging_for_dirt_perk
			add_perk = kidnapper_perk
			add_perk = court_of_shadows_perk
			add_perk = prepared_for_anything_perk
			add_perk = swift_execution_perk
			add_perk = a_job_done_right_perk
			add_perk = twice_schemed_perk 
			add_perk = schemer_perk
			add_perk = carefree_perk
			add_trait_xp = {
				trait = source
				track = magic_potential
				value = 45
			}
			add_hook = {
				type = magic_domination_hook
				target = scope:mruler
			}
			set_relation_mminion = scope:mruler
		}
	}
}

create_pandora_effect = {
	hidden_effect = {
		create_character = {
			name = pandora_name
			gender = female
			employer = this
			faith = this.faith
			template = pandora_demon_character
			save_scope_as = demon
		}
		scope:demon = {
			add_character_flag = pandora_flag
			add_character_flag = special_magic_character
			add_secret = {
				type = secret_witch
				target = this
			}
			add_trait_xp = {
				trait = demon
				value = 40
			}
			set_source4demon = yes
		}
	}
}

add_xp_2_grandmaster_inheriting = {
	hidden_effect = {
		if = {
			limit = {
				has_trait = grandmaster_coven
			}
			if = {
				limit = {
					OR = {
						AND = {
							exists = father
							father = {
								has_trait = grandmaster_coven
							}
						}
						AND = {
							exists = mother
							mother = {
								has_trait = grandmaster_coven
							}
						}
						AND = {
							exists = father.father
							father.father = {
								has_trait = grandmaster_coven
							}
						}
						AND = {
							exists = mother.father
							mother.father = {
								has_trait = grandmaster_coven
							}
						}
						AND = {
							exists = father.mother
							father.mother = {
								has_trait = grandmaster_coven
							}
						}
						AND = {
							exists = mother.mother
							mother.mother = {
								has_trait = grandmaster_coven
							}
						}
					}
				}
				add_trait_xp = {
					trait = grandmaster_coven
					value = 30
				}
			}
		}
	}
}

spawn_witch_hunter_low_chance_effect = {
	$EMPL$ = { save_scope_as = empl }
	hidden_effect = {
		if = {
			limit = {
				has_game_rule = high_whunters
			}
			random = {
				chance = 15
				create_character = {
					employer = scope:empl
					template = witch_hunter_character
					save_scope_as = whunter
					after_creation = {
						add_perk = protective_runes_perk
						add_perk = magical_senses_perk
						add_trait_xp = {
							trait = supernatural_hunter
							track = witch_hunting
							value = { 1 30 }
						}
					}
				}
			}
		}
		else = {
			random = {
				chance = 5
				create_character = {
					employer = scope:empl
					template = witch_hunter_character
					save_scope_as = whunter
					after_creation = {
						add_perk = protective_runes_perk
						add_perk = magical_senses_perk
						add_trait_xp = {
							trait = supernatural_hunter
							track = witch_hunting
							value = { 1 30 }
						}
					}
				}
			}
		}
	}
}
spawn_witch_hunter_med_chance_effect = {
	$EMPL$ = { save_scope_as = empl }
	hidden_effect = {
		if = {
			limit = {
				has_game_rule = high_whunters
			}
			random = {
				chance = 25
				create_character = {
					employer = scope:empl
					template = witch_hunter_character
					save_scope_as = whunter
					after_creation = {
						add_perk = protective_runes_perk
						add_perk = magical_senses_perk
						add_trait_xp = {
							trait = supernatural_hunter
							track = witch_hunting
							value = { 1 60 }
						}
					}
				}
			}
		}
		else = {
			random = {
				chance = 10
				create_character = {
					employer = scope:empl
					template = witch_hunter_character
					save_scope_as = whunter
					after_creation = {
						add_perk = protective_runes_perk
						add_perk = magical_senses_perk
						add_trait_xp = {
							trait = supernatural_hunter
							track = witch_hunting
							value = { 1 60 }
						}
					}
				}
			}
		}
	}
}
spawn_witch_hunter_full_chance_effect = {
	$EMPL$ = { save_scope_as = empl }
	hidden_effect = {
		create_character = {
			employer = scope:empl
			template = witch_hunter_character
			save_scope_as = whunter
			after_creation = {
				add_perk = protective_runes_perk
				add_perk = magical_senses_perk
				add_trait_xp = {
					trait = supernatural_hunter
					track = witch_hunting
					value = { 1 90 }
				}
			}
		}
		if = {
			limit = {
				has_game_rule = high_whunters
			}
			scope:whunter = {
				add_intrigue_skill = 3
				add_prowess_skill = 3
			}
		}
	}
}

massive_kill_player_dynasty = {
	random_ruler = {
		limit = {
			is_ai = no
		}
		dynasty = {
			save_scope_as = dyn0
		}
	}
	every_councillor = {
		limit = {
			is_ai = yes
			NOT = {
				any_scheme = {
					is_hostile = yes
				}
			}
		}
		add_gold = 50
		scope:dyn0 = {
			random_dynasty_member = {
				save_scope_as = tar
			}
		}
		start_scheme = {
			type = murder
			target_character = scope:tar
		}
	}
}

consider_demonslayer_nickname = {
	if = {
		limit = {
			has_trait = archmage
			is_ai = no
			NOR = {
				has_character_flag = special_magic_character
				has_nickname = mage_nickname
				has_nickname = mage2_nickname
				has_nickname = mage3_nickname
				has_nickname = mage4m_nickname
				has_nickname = mage5m_nickname
				has_nickname = mage6m_nickname
				has_nickname = mage6f_nickname
				has_nickname = mage4f_nickname
				has_nickname = mage5f_nickname
				has_nickname = demonslayer_nickname
			}
		}
		give_nickname = demonslayer_nickname
	}
}

select_responsible_person_effect = {
	if = {
		limit = {
			any_relation = {
				type = guardian
			}
		}
		random_relation = {
			type = guardian
			save_scope_as = resper
		}
	}
	else_if = {
		limit = {
			is_ruler = no
			exists = liege
		}
		liege = {
			if = {
				limit = {
					employs_court_position = mage_court_position
				}
				random_court_position_holder = {
					type = mage_court_position
					save_scope_as = resper
				}
			}
			else = {
				save_scope_as = resper
			}
		}
	}
	else_if = {
		limit = {
			is_ruler = yes
			is_landed_or_landless_administrative = yes
		}
		if = {
			limit = {
				employs_court_position = mage_court_position
			}
			random_court_position_holder = {
				type = mage_court_position
				save_scope_as = resper
			}
		}
		else = {
			random_councillor = {
				save_scope_as = resper
			}
		}
	}
	else_if = {
		limit = {
			is_pool_character = no
		}
		random_living_character = {
			limit = {
				location = root.location
				NOT = { THIS = ROOT }
			}
			save_scope_as = resper
		}
	}
}

heavy_wounds_effect = {
	if = {
		limit = {
			NOR = {
				has_trait = wounded_1
				has_trait = wounded_2
				has_trait = wounded_3
			}
		}
		add_trait = wounded_3
	}
	else = {
		death = natural
	}
}

clear_dc_mission_flags = {
	if = {
		limit = {
			has_character_flag = special_champion_mission1
		}
		remove_character_flag = special_champion_mission1
	}
	if = {
		limit = {
			has_character_flag = special_champion_mission2
		}
		remove_character_flag = special_champion_mission2
	}
	if = {
		limit = {
			has_character_flag = special_champion_mission3
		}
		remove_character_flag = special_champion_mission3
	}
	if = {
		limit = {
			has_character_flag = special_champion_mission4
		}
		remove_character_flag = special_champion_mission4
	}
	if = {
		limit = {
			has_character_flag = dc_duel_refused_flag
		}
		remove_character_flag = dc_duel_refused_flag
	}
	if = {
		limit = {
			has_character_flag = good_abduct_plan_dco
		}
		remove_character_flag = good_abduct_plan_dco
	}
	if = {
		limit = {
			has_character_flag = asked_for_gold_dco
		}
		remove_character_flag = asked_for_gold_dco
	}
	if = {
		limit = {
			has_variable = night_attack_q
		}
		remove_variable = night_attack_q
	}
}

#dark_champion_training_effect = {
#
#}

ms_load_intents_for_ai_effect = {
	random_list = {
		100 = {
			modifier = {
				add = 100
				OR = {
					has_trait = lifestyle_mystic
					has_trait = scholar
				}
				NOR = {
					has_trait = greedy
					has_trait = paranoid
				}
			}
			modifier = {
				add = 100
				can_unlock_arcane_focus_trigger = no
			}
			add_character_flag = ms_intent_flag1
		}
		100 = {
			modifier = {
				add = 100
				OR = {
					has_trait = diplomat
					has_trait = ambitious
					has_trait = greedy
				}
			}
			modifier = {
				add = -50
				has_trait = content
			}
			add_character_flag = ms_intent_flag2
		}
		100 = {
			trigger = {
				OR = {
					has_trait = archmage
					has_trait = yaga
					has_trait = demon
				}
			}
			modifier = {
				add = 50
				OR = {
					has_trait = arrogant
					has_trait = ambitious
				}
			}
			modifier = {
				add = 50
				OR = {
					any_relation = {
						type = rival
						OR = {
							has_trait = archmage
							has_focus = arcane_focus
						}
					}
					any_relation = {
						type = nemesis
						OR = {
							has_trait = archmage
							has_focus = arcane_focus
						}
					}
				}
			}
			modifier = {
				add = -70
				OR = {
					has_trait = humble
					has_trait = shy
				}
			}
			add_character_flag = ms_intent_flag3
		}
	}
}
ms_clear_flags_effect = {
	if = {
		limit = {
			has_character_flag = ms_intent_flag1
		}
		remove_character_flag = ms_intent_flag1
	}
	if = {
		limit = {
			has_character_flag = ms_intent_flag2
		}
		remove_character_flag = ms_intent_flag2
	}
	if = {
		limit = {
			has_character_flag = ms_intent_flag3
		}
		remove_character_flag = ms_intent_flag3
	}
}

pay_for_demon_head_effect = {
	hidden_effect = {
		send_interface_toast = {
			title = ev7.85.title
			add_gold = 300
		}
	}
}


assign_speaker_var = {
	if = {
		limit = {
			OR = {
				has_trait = archmage
				has_trait = true_witch
			}
		}
		set_variable = {
			name = speaker1
			value = 0
		}
		if = {
			limit = {
				is_legendary_mage_trigger = yes
			}
			change_variable = {
				name = speaker1
				add = 1
			}
		}
		if = {
			limit = {
				OR = {
					has_trait = archmage
					has_trait = yaga
					has_trait = grandmaster_coven
				}
			}
			change_variable = {
				name = speaker1
				add = 1
			}
		}
		if = {
			limit = {
				learning > 19
			}
			change_variable = {
				name = speaker1
				add = 1
			}
		}
		if = {
			limit = {
				prestige_level > 2
			}
			change_variable = {
				name = speaker1
				add = 1
			}
		}
		if = {
			limit = {
				this = scope:host
			}
			change_variable = {
				name = speaker1
				add = 1
			}
		}
		if = {
			limit = {
				has_nickname = archmage_nickname
			}
			change_variable = {
				name = speaker1
				add = 2
			}
		}
		if = {
			limit = {
				OR = {
					any_character_artifact = {
						has_variable = magic1
					}
					has_trait = source
					#has_trait = source2
					#has_trait = source3
					#has_trait = source4
				}
			}
			change_variable = {
				name = speaker1
				add = 1
			}
		}
	}
}

remove_speaker_var = {
	if = {
		limit = {
			has_variable = speaker1
		}
		remove_variable = speaker1
	}
	if = {
		limit = {
			has_variable = ms_vote_yes
		}
		remove_variable = ms_vote_yes
	}
	if = {
		limit = {
			has_variable = ms_vote_no
		}
		remove_variable = ms_vote_no
	}
	if = {
		limit = {
			has_character_flag = speaker_flag
		}
		remove_character_flag = speaker_flag
	}
	if = {
		limit = {
			has_character_flag = ms_research_cooperation_flag
		}
		remove_character_flag = ms_research_cooperation_flag
	}
	if = {
		limit = {
			has_character_flag = ms_magic_pact_flag
		}
		remove_character_flag = ms_magic_pact_flag
	}
	if = {
		limit = {
			has_character_flag = ms_want_be_archmage_flag
		}
		remove_character_flag = ms_want_be_archmage_flag
	}
	if = {
		limit = {
			has_character_flag = ms_archmage_tax_flag
		}
		remove_character_flag = ms_archmage_tax_flag
	}
	if = {
		limit = {
			has_character_flag = ms_black_magic_prohibited
		}
		remove_character_flag = ms_black_magic_prohibited
	}
	if = {
		limit = {
			has_character_flag = ms_schemer_flag
		}
		remove_character_flag = ms_schemer_flag
	}
	if = {
		limit = {
			has_character_flag = ms_against_target1_flag
		}
		remove_character_flag = ms_against_target1_flag
	}
	if = {
		limit = {
			has_character_flag = ms_against_target2_flag
		}
		remove_character_flag = ms_against_target2_flag
	}
	if = {
		limit = {
			has_character_flag = ms_grand_spell_flag
		}
		remove_character_flag = ms_grand_spell_flag
	}
	if = {
		limit = {
			has_character_flag = ms_may_lost_hooks_flag
		}
		remove_character_flag = ms_may_lost_hooks_flag
	}
	if = {
		limit = {
			has_character_flag = ms_additional_support_flag
		}
		remove_character_flag = ms_additional_support_flag
	}
}

select_speaker_effect = {
	scope:activity = {
		ordered_attending_character = {
			limit = {
				has_variable = speaker1
			}
			order_by = var:speaker1
			check_range_bounds = no
			position = 0
			add_character_flag = speaker_flag
			save_scope_as = speaker0
		}
	}
}

ms_resolve_voting_effects = {
	if = {
		limit = {
			has_character_flag = speaker_flag
		}
		save_scope_as = speaker0
		if = {
			limit = {
				var:ms_vote_yes > var:ms_vote_no
			}
			scope:activity = {
				add_activity_log_entry = {
					key = mage_summit_log_yes
					
					show_in_conclusion = yes
					character = scope:speaker0
					#scope:speaker0 = {
					#	custom_tooltip = mage_summit_log_yes_title
					#}
					#hidden_effect = {
					#	set_variable = {
					#		name = ms_vote_yes
					#		value = scope:speaker0.var:ms_vote_yes
					#	}
					#	set_variable = {
					#		name = ms_vote_no
					#		value = scope:speaker0.var:ms_vote_yes
					#	}
					#}
					custom_tooltip = mage_summit_log_yes_title
					custom_tooltip = mage_summit_log_yes_count
					custom_tooltip = mage_summit_log_no_count
					if = {
						limit = {
							scope:speaker0 = {
								has_character_flag = ms_research_cooperation_flag
							}
						}
						every_attending_character = {
							hidden_effect = {
								if = {
									limit = {
										has_character_modifier = research_cooperation
									}
									remove_character_modifier = research_cooperation
								}
							}
							add_character_modifier = {
								modifier = research_cooperation
								years = 10
							}
							gain_sc_xp2_effect = yes
						}
					}
					else_if = {
						limit = {
							scope:speaker0 = {
								has_character_flag = ms_magic_pact_flag
							}
						}
						custom_tooltip = ev7.105.b_ct2
						custom_tooltip = ev7.105.b_ct3
						every_attending_character = {
							limit = {
								is_landed_or_landless_administrative = yes
								NOT = {
									THIS = ROOT
								}
							}
							custom_tooltip = ev7.105.b_ct
							custom_description_no_bullet = {
								text = empty_description1
							}
							hidden_effect = {
								if = {
									limit = {
										NOT = {
											has_character_flag = ms_defence_pact_flag
										}
									}
									add_character_flag = ms_defence_pact_flag
								}
							}
						}
					}
					else_if = {
						limit = {
							scope:speaker0 = {
								has_character_flag = ms_want_be_archmage_flag
							}
						}
						scope:speaker0 = {
							give_nickname = archmage_nickname
							custom_tooltip = ev7.105.c_ct
							custom_tooltip = ev7.105.c_ct2
							add_prestige = massive_prestige_gain
							if = {
								limit = {
									is_valid_for_legitimacy_change = yes
									culture = {
										has_cultural_tradition = mage_rulership_tradition
									}
								}
								add_legitimacy = major_legitimacy_gain
							}
							hidden_effect = {
								add_character_flag = ms_is_archmage_flag
							}
						}
					}
					else_if = {
						limit = {
							scope:speaker0 = {
								has_character_flag = ms_archmage_tax_flag
							}
						}
						scope:activity = {
							every_attending_character = {
								limit = {
									NOT = {
										THIS = scope:speaker0
									}
								}
								pay_short_term_gold = {
									target = scope:speaker0
									gold = archmage_tax_value
								}
							}
						}
					}
					else_if = {
						limit = {
							scope:speaker0 = {
								has_character_flag = ms_black_magic_prohibited
							}
						}
						custom_tooltip = ev7.105.e_ct
						custom_tooltip = ev7.105.e_ct2
						hidden_effect = {
							scope:activity = {
								every_attending_character = {
									limit = {
										NOT = {
											has_character_flag = forbidden_black_magic_flag
										}
									}
									add_character_flag = forbidden_black_magic_flag
								}
							}
						}
					}
					else_if = {
						limit = {
							scope:speaker0 = {
								has_character_flag = ms_schemer_flag
							}
						}
						scope:speaker0 = {
							add_intrigue_skill = 1
						}
						scope:activity = {
							every_attending_character = {
								hidden_effect = {
									if = {
										limit = {
											has_character_modifier = joint_intrigues
										}
										remove_character_modifier = joint_intrigues
									}
								}
								add_character_modifier = {
									modifier = joint_intrigues
									years = 10
								}
							}
						}
					}
					else_if = {
						limit = {
							scope:speaker0 = {
								has_character_flag = ms_against_target1_flag
							}
						}
						random_living_character = {
							limit = {
								has_character_flag = ms_target1_flag
							}
							add_character_modifier = {
								modifier = death_sentence
								years = 10
							}
							save_scope_as = target1
							hidden_effect = {
								remove_character_flag = ms_target1_flag
							}
						}
						custom_tooltip = ev7.105.g_ct
						hidden_effect = {
							every_attending_character = {
								limit = {
									NOT = {
										THIS = scope:speaker0
									}
								}
								if = {
									limit = {
										is_ai = yes
										NOT = {
											THIS = scope:target1
										}
									}
									trigger_event = {
										id = magic_ev7.110
										days = { 7 14 }
									}
								}
								else = {
									trigger_event = {
										id = magic_ev7.110
										days = { 15 21 }
									}
								}
							}
						}
					}
					else_if = {
						limit = {
							scope:speaker0 = {
								has_character_flag = ms_against_target2_flag
							}
						}
						random_living_character = {
							limit = {
								has_character_flag = ms_target2_flag
							}
							add_character_modifier = {
								modifier = excluded_from_magic_community
								years = 50
							}
							hidden_effect = {
								remove_character_flag = ms_target2_flag
							}
						}
					}
					else_if = {
						limit = {
							scope:speaker0 = {
								has_character_flag = ms_grand_spell_flag
							}
						}
						custom_tooltip = ev7.105.i_ct
						custom_tooltip = ev7.105.i_ct2
						scope:speaker0 = {
							add_trait_xp = {
								trait = archmage
								track = power_saturation
								value = 100
							}
							hidden_effect = {
								add_character_flag = ready_for_grand_spell_flag
							}
						}
						hidden_effect = {
							scope:activity = {
								every_attending_character = {
									limit = {
										NOT = {
											THIS = scope:speaker0
										}
										OR = {
											has_trait = archmage
											has_trait = true_witch
											has_focus = arcane_focus
										}
									}
									if = {
										limit = {
											can_spend_standard_ps_trigger = yes
										}
										send_interface_toast = {
											title = ev7.105.i_ct
											spend_standard_ps_effect = yes
										}
									}
									else_if = {
										limit = {
											NOR = {
												has_trait = wounded_1
												has_trait = wounded_2
												has_trait = wounded_3
											}
										}
										add_trait = wounded_1
									}
								}
							}
						}
					}
				}
			}
		}
		else = {
			scope:activity = {
				add_activity_log_entry = {
					key = mage_summit_log_no
					
					show_in_conclusion = yes
					character = scope:speaker0
					#hidden_effect = {
					#	set_variable = {
					#		name = ms_vote_yes
					#		value = scope:speaker0.var:ms_vote_yes
					#	}
					#	set_variable = {
					#		name = ms_vote_no
					#		value = 4
					#	}
					#}
					custom_tooltip = mage_summit_log_no_title
					custom_tooltip = mage_summit_log_yes_count
					custom_tooltip = mage_summit_log_no_count
					scope:speaker0 = {
						add_prestige = minor_prestige_loss
					}
				}
			}
		}
	}
}

#mark_as_black_magic_caster = {
#	hidden_effect = {
#		add_character_flag = {
#			flag = black_magic_caster_flag
#			days = 14
#		}
#	}
#}

me_unlock_new_special_project_effect = {
	random_list = {
		10 = {
			trigger = {
				NOR = {
					has_character_flag = me_golem_project_done
					has_character_flag = me_golem_project
				}
			}
			add_character_flag = me_golem_project_proposal
		}
		6 = {
			trigger = {
				NOR = {
					has_character_flag = me_immortality_project_done
					has_character_flag = me_immortality_project
					is_legendary_mage_trigger = yes
				}
				learning > 49
			}
			add_character_flag = me_immortality_project_proposal
		}
		10 = {
			trigger = {
				NOR = {
					has_character_flag = me_death_project_done
					has_character_flag = me_death_project
				}
				OR = {
					is_cannibal_trigger = yes
					has_trait = necromancer
				}
			}
			add_character_flag = me_death_project_proposal
		}
		10 = {
			trigger = {
				NOR = {
					has_character_flag = me_ascendency_project_done
					has_character_flag = me_ascendency_project
					has_trait = demon
				}
				OR = {
					has_trait = source
					#has_trait = source2
					#has_trait = source3
					#has_trait = source4
					any_character_artifact = {
						has_variable = magic_scepter
					}
				}
			}
			add_character_flag = me_ascendency_project_proposal
		}
		10 = {
			trigger = {
				NOR = {
					has_character_flag = me_castle_project_done
					has_character_flag = me_castle_project
				}
				is_landed_or_landless_administrative = yes
			}
			add_character_flag = me_castle_project_proposal
		}
		10 = {
			trigger = {
				NOR = {
					has_character_flag = me_sing_project_done
					has_character_flag = me_sing_project
				}
				any_character_artifact = {
					has_variable = singularity
					NOR = {
						has_variable = singularity_sleeping
						has_variable = singularity2
					}
				}
			}
			add_character_flag = me_sing_project_proposal
		}
		10 = {
			trigger = {
				NOR = {
					has_character_flag = me_soul_project_done
					has_character_flag = me_soul_project
					has_character_flag = no_soul
				}
				#OR = {
				#	has_character_flag = me_sing_project_done
				#	has_character_flag = me_castle_project_done
				#	has_character_flag = me_ascendency_project_done
				#	has_character_flag = me_death_project_done
				#	has_character_flag = me_immortality_project_done
				#	has_character_flag = me_golem_project_done
				#}
				is_legendary_mage_trigger = yes
			}
			add_character_flag = me_soul_project_proposal
		}
		10 = {
			trigger = {
				may_unlock_time_travel_sp_trigger = yes
				is_ai = no
				NOR = {
					has_character_flag = me_time_travel_project_done
					has_character_flag = me_time_travel_project
				}
			}
			add_character_flag = me_time_travel_project_proposal
		}
	}
}

me_unlock_new_special_project_effect2 = {
	random_list = {
		10 = {
			trigger = {
				NOR = {
					has_character_flag = me_golem_project_done
					has_character_flag = me_golem_project
				}
			}
			add_character_flag = me_golem_project
			send_interface_toast = {
				title = game_concept_magic_special_project
				custom_tooltip = me_golem_project_ct
			}
		}
		6 = {
			trigger = {
				NOR = {
					has_character_flag = me_immortality_project_done
					has_character_flag = me_immortality_project
					is_legendary_mage_trigger = yes
				}
				learning > 49
			}
			add_character_flag = me_immortality_project
			send_interface_toast = {
				title = game_concept_magic_special_project
				custom_tooltip = me_immortality_project_ct
			}
		}
		10 = {
			trigger = {
				NOR = {
					has_character_flag = me_death_project_done
					has_character_flag = me_death_project
				}
				OR = {
					is_cannibal_trigger = yes
					has_trait = necromancer
				}
			}
			add_character_flag = me_death_project
			send_interface_toast = {
				title = game_concept_magic_special_project
				custom_tooltip = me_death_project_ct
			}
		}
		10 = {
			trigger = {
				NOR = {
					has_character_flag = me_ascendency_project_done
					has_character_flag = me_ascendency_project
					has_trait = demon
				}
				OR = {
					has_trait = source
					any_character_artifact = {
						has_variable = magic_scepter
					}
				}
			}
			add_character_flag = me_ascendency_project
			send_interface_toast = {
				title = game_concept_magic_special_project
				custom_tooltip = me_ascendency_project_ct
			}
		}
		10 = {
			trigger = {
				NOR = {
					has_character_flag = me_castle_project_done
					has_character_flag = me_castle_project
				}
				is_landed_or_landless_administrative = yes
			}
			add_character_flag = me_castle_project
			send_interface_toast = {
				title = game_concept_magic_special_project
				custom_tooltip = me_castle_project_ct
			}
		}
		10 = {
			trigger = {
				NOR = {
					has_character_flag = me_sing_project_done
					has_character_flag = me_sing_project
				}
				any_character_artifact = {
					has_variable = singularity
					NOR = {
						has_variable = singularity_sleeping
						has_variable = singularity2
					}
				}
			}
			add_character_flag = me_sing_project
			send_interface_toast = {
				title = game_concept_magic_special_project
				custom_tooltip = me_sing_project_ct
			}
		}
		10 = {
			trigger = {
				NOR = {
					has_character_flag = me_soul_project_done
					has_character_flag = me_soul_project
					has_character_flag = no_soul
				}
				is_legendary_mage_trigger = yes
			}
			add_character_flag = me_soul_project
			send_interface_toast = {
				title = game_concept_magic_special_project
				custom_tooltip = me_soul_project_ct
			}
		}
		10 = {
			trigger = {
				may_unlock_time_travel_sp_trigger = yes
				is_ai = no
				NOR = {
					has_character_flag = me_time_travel_project_done
					has_character_flag = me_time_travel_project
				}
			}
			add_character_flag = me_time_travel_project
			send_interface_toast = {
				title = game_concept_magic_special_project
				custom_tooltip = me_time_travel_project_ct
			}
		}
	}
}

me_clear_proposal_flags_effect = {
	if = {
		limit = {
			has_character_flag = me_golem_project_proposal
		}
		remove_character_flag = me_golem_project_proposal
	}
	if = {
		limit = {
			has_character_flag = me_immortality_project_proposal
		}
		remove_character_flag = me_immortality_project_proposal
	}
	if = {
		limit = {
			has_character_flag = me_death_project_proposal
		}
		remove_character_flag = me_death_project_proposal
	}
	if = {
		limit = {
			has_character_flag = me_ascendency_project_proposal
		}
		remove_character_flag = me_ascendency_project_proposal
	}
	if = {
		limit = {
			has_character_flag = me_castle_project_proposal
		}
		remove_character_flag = me_castle_project_proposal
	}
	if = {
		limit = {
			has_character_flag = me_sing_project_proposal
		}
		remove_character_flag = me_sing_project_proposal
	}
	if = {
		limit = {
			has_character_flag = me_soul_project_proposal
		}
		remove_character_flag = me_soul_project_proposal
	}
	if = {
		limit = {
			has_character_flag = me_time_travel_project_proposal
		}
		remove_character_flag = me_time_travel_project_proposal
	}
}

me_clear_progress_flags_effect = {
	if = {
		limit = {
			has_character_flag = magic_epic_book
		}
		remove_character_flag = magic_epic_book
	}
	if = {
		limit = {
			has_character_flag = magic_epic_magic
		}
		remove_character_flag = magic_epic_magic
	}
	if = {
		limit = {
			has_character_flag = magic_epic_project
		}
		remove_character_flag = magic_epic_project
	}
	if = {
		limit = {
			has_variable = magic_epic_q
		}
		remove_variable = magic_epic_q
	}
	if = {
		limit = {
			has_character_flag = me_golem_project_progress
		}
		remove_character_flag = me_golem_project_progress
	}
	if = {
		limit = {
			has_character_flag = me_immortality_project_progress
		}
		remove_character_flag = me_immortality_project_progress
	}
	if = {
		limit = {
			has_character_flag = me_death_project_progress
		}
		remove_character_flag = me_death_project_progress
	}
	if = {
		limit = {
			has_character_flag = me_ascendency_project_progress
		}
		remove_character_flag = me_ascendency_project_progress
	}
	if = {
		limit = {
			has_character_flag = me_castle_project_progress
		}
		remove_character_flag = me_castle_project_progress
	}
	if = {
		limit = {
			has_character_flag = me_sing_project_progress
		}
		remove_character_flag = me_sing_project_progress
	}
	if = {
		limit = {
			has_character_flag = me_golem_male
		}
		remove_character_flag = me_golem_male
	}
	if = {
		limit = {
			has_character_flag = me_golem_female
		}
		remove_character_flag = me_golem_female
	}
	if = {
		limit = {
			has_character_flag = me_soul_project_progress
		}
		remove_character_flag = me_soul_project_progress
	}
	if = {
		limit = {
			has_character_flag = me_time_travel_project_progress
		}
		remove_character_flag = me_time_travel_project_progress
	}
}
choose_blackgrimoire_chapter_effect = {
	#if = {
	#	limit = {
	#		NOT = {
	#			has_character_flag = necro_chapter1_flag
	#		}
	#	}
	#	add_character_flag = necro_chapter1_flag
	#}
	#else_
	if = {
		limit = {
			NOT = {
				has_character_flag = necro_chapter2_flag
			}
		}
		add_character_flag = necro_chapter2_flag
	}
	else_if = {
		limit = {
			NOT = {
				has_character_flag = necro_chapter3_flag
			}
		}
		add_character_flag = necro_chapter3_flag
	}
	else_if = {
		limit = {
			NOT = {
				has_character_flag = necro_chapter4_flag
			}
		}
		add_character_flag = necro_chapter4_flag
	}
	else_if = {
		limit = {
			NOT = {
				has_character_flag = necro_chapter5_flag
			}
		}
		add_character_flag = necro_chapter5_flag
	}
	else_if = {
		limit = {
			NOT = {
				has_character_flag = necro_chapter6_flag
			}
		}
		add_character_flag = necro_chapter6_flag
	}
}
choose_blackgrimoire_reward_effect = {
	if = {
		limit = {
			has_trait = witch_hunter
		}
		send_interface_toast = {
			title = study_blackgrimoire_decision
			random_list = {
				1 = {
					add_diplomacy_skill = 1
				}
				1 = {
					add_martial_skill = 1
				}
				1 = {
					add_stewardship_skill = 1
				}
				1 = {
					add_intrigue_skill = 1
				}
				1 = {
					add_learning_skill = 1
				}
			}
		}
	}
	else_if = {
		limit = {
			NOR = {
				has_trait = witch
				any_secret = { secret_type = secret_witch }
			}
		}
		
		send_interface_toast = {
			title = study_blackgrimoire_decision
			give_witch_secret_or_trait_effect = yes
		}
	}
	else_if = {
		limit = {
			OR = {
				has_focus = witch_focus
				has_focus = arcane_focus
			}
		}
		send_interface_toast = {
			title = study_blackgrimoire_decision
			custom_tooltip = ev2.47.a_ct
		}
		
		hidden_effect = {
			add_magic_lifestyle_perk_points = 1
		}
	}
	else_if = {
		limit = {
			has_trait = archmage
		}
		choose_blackgrimoire_reward_mages_effect = yes
	}
	else = {
		send_interface_toast = {
			title = study_blackgrimoire_decision
			random_list = {
				1 = {
					add_diplomacy_skill = 1
				}
				1 = {
					add_martial_skill = 1
				}
				1 = {
					add_stewardship_skill = 1
				}
				1 = {
					add_intrigue_skill = 1
				}
				1 = {
					add_learning_skill = 1
				}
				1 = {
					add_character_modifier = {
						modifier = secret_knowledge_modifier
						years = 1
					}
				}
			}
		}
	}
}
choose_blackgrimoire_reward_mages_effect = {
	random_list = {
		10 = {
			trigger = {
				NOT = {
					has_character_flag = bless_land_flag
				}
			}
			send_interface_toast = {
				title = study_blackgrimoire_decision
				custom_tooltip = ev5.1.0.a_ct
				gain_sc_xp2_effect = yes
			}
			add_character_flag = bless_land_flag
		}
		10 = {
			trigger = {
				NOT = {
					has_character_flag = healing_spell_flag
				}
			}
			send_interface_toast = {
				title = study_blackgrimoire_decision
				custom_tooltip = healer_p9_perk_eff
				gain_sc_xp2_effect = yes
			}
			add_character_flag = healing_spell_flag
		}
		10 = {
			trigger = {
				NOT = {
					has_character_flag = shadowstep_flag
				}
			}
			send_interface_toast = {
				title = study_blackgrimoire_decision
				custom_tooltip = ev5.1.0.e_ct
				gain_sc_xp2_effect = yes
			}
			add_character_flag = shadowstep_flag
		}
		10 = {
			trigger = {
				NOT = {
					has_character_flag = plague_spell_flag
				}
			}
			send_interface_toast = {
				title = study_blackgrimoire_decision
				custom_tooltip = ev5.1.0.f_ct
				gain_sc_xp2_effect = yes
			}
			add_character_flag = plague_spell_flag
		}
		10 = {
			trigger = {
				NOT = {
					has_character_flag = hipercognition_flag
				}
			}
			send_interface_toast = {
				title = study_blackgrimoire_decision
				custom_tooltip = ev5.1.0.h_ct
				gain_sc_xp2_effect = yes
			}
			add_character_flag = hipercognition_flag
		}
		10 = {
			trigger = {
				NOR = {
					has_character_flag = firestorm_spell_flag
					has_trait = demon
				}
			}
			send_interface_toast = {
				title = study_blackgrimoire_decision
				custom_tooltip = ev5.1.0.k_ct
				gain_sc_xp2_effect = yes
			}
			add_character_flag = firestorm_spell_flag
		}
		10 = {
			trigger = {
				NOT = {
					has_character_flag = aura_reading_spell
				}
			}
			send_interface_toast = {
				title = study_blackgrimoire_decision
				custom_tooltip = aura_reading_spell_got_it
				gain_sc_xp2_effect = yes
			}
			add_character_flag = aura_reading_spell
		}
		10 = {
			trigger = {
				NOR = {
					has_character_flag = banish_spell_flag
					AND = {
						has_trait = archmage
						has_trait_xp = {
							trait = archmage
							track = demonology
							value > 99
						}
					}
				}
			}
			send_interface_toast = {
				title = study_blackgrimoire_decision
				custom_tooltip = summoning_demonology3_terrain_cancel_negative_supply
				gain_sc_xp2_effect = yes
			}
			add_character_flag = banish_spell_flag
		}
		10 = {
			trigger = {
				has_trait = archmage
				has_trait_xp = {
					trait = archmage
					track = secret_knowledge
					value < 100
				}
			}
			send_interface_toast = {
				title = study_blackgrimoire_decision
				gain_sc_xp10_effect = yes
			}
		}
		10 = {
			trigger = {
				has_trait = archmage
				has_trait_xp = {
					trait = archmage
					track = demonology
					value < 100
				}
			}
			send_interface_toast = {
				title = study_blackgrimoire_decision
				gain_sc_xp1_effect = yes
				gain_demonology_standard_effect = yes
			}
		}
		10 = {
			trigger = {
				has_trait = archmage
				has_trait_xp = {
					trait = archmage
					track = combat_magic
					value < 100
				}
			}
			send_interface_toast = {
				title = study_blackgrimoire_decision
				gain_sc_xp1_effect = yes
				gain_cm_xp5_effect = yes
			}
		}
		5 = {
			trigger = {
				has_trait = archmage
				can_be_power_saturated_trigger = yes
			}
			send_interface_toast = {
				title = study_blackgrimoire_decision
				gain_sc_xp2_effect = yes
				gain_standard_ps_effect = yes
			}
		}
		5 = {
			trigger = {
				NOT = {
					has_character_modifier = mind_reader_modifier
				}
			}
			send_interface_toast = {
				title = study_blackgrimoire_decision
				gain_sc_xp1_effect = yes
				add_character_modifier = {
					modifier = mind_reader_modifier
				}
			}
		}
		1 = {
			trigger = {
				NOT = {
					has_character_modifier = secret_knowledge_modifier
				}
			}
			send_interface_toast = {
				title = study_blackgrimoire_decision
				add_character_modifier = {
					modifier = secret_knowledge_modifier
					years = 1
				}
				gain_sc_xp1_effect = yes
			}
		}
		1 = {
			send_interface_toast = {
				title = study_blackgrimoire_decision
				random_list = {
					1 = {
						add_diplomacy_skill = 1
					}
					1 = {
						add_martial_skill = 1
					}
					1 = {
						add_stewardship_skill = 1
					}
					1 = {
						add_intrigue_skill = 1
					}
					1 = {
						add_learning_skill = 1
					}
				}
				gain_sc_xp1_effect = yes
			}
		}
	}
}

samael_available_options_effect = {
	if = {
		limit = {
			has_character_flag = there_is_bael_flag
		}
		remove_character_flag = there_is_bael_flag
	}
	if = {
		limit = {
			has_character_flag = there_is_belial_flag
		}
		remove_character_flag = there_is_belial_flag
	}
	if = {
		limit = {
			has_character_flag = there_is_astaroth_flag
		}
		remove_character_flag = there_is_astaroth_flag
	}
	if = {
		limit = {
			has_character_flag = there_is_lilith_flag
		}
		remove_character_flag = there_is_lilith_flag
	}
	if = {
		limit = {
			has_character_flag = there_is_moloch_flag
		}
		remove_character_flag = there_is_moloch_flag
	}
	if = {
		limit = {
			has_character_flag = there_is_inq_flag
		}
		remove_character_flag = there_is_inq_flag
	}
	if = {
		limit = {
			has_character_flag = there_is_abdul_flag
		}
		remove_character_flag = there_is_abdul_flag
	}
	if = {
		limit = {
			any_living_character = {
				has_character_flag = bael_flag
			}
		}
		add_character_flag = there_is_bael_flag
	}
	if = {
		limit = {
			any_living_character = {
				has_character_flag = belial
			}
		}
		add_character_flag = there_is_belial_flag
	}
	if = {
		limit = {
			any_living_character = {
				has_character_flag = astaroth_flag
			}
		}
		add_character_flag = there_is_astaroth_flag
	}
	if = {
		limit = {
			any_living_character = {
				has_character_flag = lilith
			}
		}
		add_character_flag = there_is_lilith_flag
	}
	if = {
		limit = {
			any_living_character = {
				has_character_flag = moloch
			}
		}
		add_character_flag = there_is_moloch_flag
	}
	if = {
		limit = {
			any_living_character = {
				has_character_modifier = inq_modifier
			}
		}
		add_character_flag = there_is_inq_flag
	}
	if = {
		limit = {
			any_living_character = {
				has_character_flag = abdul_dude
			}
		}
		add_character_flag = there_is_abdul_flag
	}
}

add_corrupt_trait = {
	if = {
		limit = {
			NOT = {
				has_trait = corrupted
			}
		}
		add_trait = corrupted
	}
	hidden_effect = {
		if = {
			limit = {
				has_character_modifier = novice_witch_hunter_modifier
			}
			remove_character_modifier = novice_witch_hunter_modifier
		}
		if = {
			limit = {
				has_character_modifier = inq_modifier
			}
			remove_character_modifier = inq_modifier
		}
	}
	
	#if = {
	#	limit = {
	#		has_trait = supernatural_hunter
	#	}
	#	hidden_effect = {
	#		remove_trait = supernatural_hunter
	#	}
	#	add_trait_force_tooltip = supernatural_hunter2
	#}
}

add_source4child = {
	if = {
		limit = {
			NOT = {
				has_trait = source
			}
		}
		add_trait = source
	}
	set_source4child = yes
}
set_source4child = {
	hidden_effect = {
		if = {
			limit = {
				has_trait = source
				has_trait_xp = {
					trait = source
					track = magic_potential
					value < 3
				}
			}
			random_list = {
				10 = {
					add_trait_xp = {
						trait = source
						track = magic_potential
						value = init_source_potential1
					}
				}
				10 = {
					add_trait_xp = {
						trait = source
						track = magic_potential
						value = init_source_potential2
					}
				}
				5 = {
					trigger = {
						#exists = this.mother
						#this.mother = {
						#	has_trait = source
						#}
						source_potential_from_mother >= source_potential_from_father
					}
					add_trait_xp = {
						trait = source
						track = magic_potential
						value = init_source_potential3
					}
				}
				5 = {
					trigger = {
						#exists = this.real_father
						#this.real_father = {
						#	has_trait = source
						#}
						source_potential_from_mother <= source_potential_from_father
					}
					add_trait_xp = {
						trait = source
						track = magic_potential
						value = init_source_potential4
					}
				}
			}

			add_trait_xp = {
				trait = source
				track = magic_potential
				value = { -15 15 }
			}
			random = {
				chance = 20
				add_trait_xp = {
					trait = source
					track = magic_potential
					value = { 0 20 }
				}
			}
			if = {
				limit = {
					exists = dynasty
					dynasty = {
						has_dynasty_perk = witchcraft_legacy_5
					}
				}
				add_trait_xp = {
					trait = source
					track = magic_potential
					value = 5
				}
			}
			if = {
				limit = {
					has_trait_xp = {
						trait = source
						track = magic_potential
						value < lower_smp_cap
					}
				}
				add_trait_xp = {
					trait = source
					track = magic_potential
					value = lower_smp_cap
				}
			}
			else_if = {
				limit = {
					has_trait_xp = {
						trait = source
						track = magic_potential
						value > upper_smp_cap
					}
				}
				add_trait_xp = {
					trait = source
					track = magic_potential
					value = { reduce_under_smp_cap_bottom reduce_under_smp_cap_top }
				}
			}
			
			if = {
				limit = {
					exists = this.mother
					this.mother = {
						has_character_flag = pandora_flag
					}
				}
				random = {
					chance = 3
					add_trait_xp = {
						trait = source
						track = magic_potential
						value = 100
					}
				}
			}
		}
	}
}
set_source4child_old = {
	hidden_effect = {
		if = {
			limit = {
				has_trait = source
				has_trait_xp = {
					trait = source
					track = magic_potential
					value < 10
				}
			}
			add_trait_xp = {
				trait = source
				track = magic_potential
				value = { 0 50 }
			}
			if = {
				limit = {
					exists = dynasty
					dynasty = {
						has_dynasty_perk = witchcraft_legacy_5
					}
				}
				add_trait_xp = {
					trait = source
					track = magic_potential
					value = 10
				}
			}
			if = {
				limit = {
					exists = this.mother
					exists = this.real_father
					this.mother = {
						has_trait = source
					}
					this.real_father = {
						has_trait = source
					}
				}
				add_trait_xp = {
					trait = source
					track = magic_potential
					value = { 0 10 }
				}
			}
			if = {
				limit = {
					exists = this.mother
				}
				if = {
					limit = {
						this.mother = {
							has_trait = source
							has_trait_xp = {
								trait = source
								track = magic_potential
								value > 79
							}
						}
					}
					add_trait_xp = {
						trait = source
						track = magic_potential
						value = 5
					}
				}
				if = {
					limit = {
						this.mother = {
							has_trait = yaga
						}
					}
					add_trait_xp = {
						trait = source
						track = magic_potential
						value = 5
					}
				}
				else_if = {
					limit = {
						this.mother = {
							has_trait = source2
						}
					}
					add_trait_xp = {
						trait = source
						track = magic_potential
						value = 5
					}
				}
				if = {
					limit = {
						this.mother = {
							has_character_flag = pandora_flag
						}
					}
					random = {
						chance = 3
						add_trait_xp = {
							trait = source
							track = magic_potential
							value = 50
						}
					}
				}
			}
			if = {
				limit = {
					exists = this.real_father
				}
				if = {
					limit = {
						this.real_father = {
							has_trait = source
							has_trait_xp = {
								trait = source
								track = magic_potential
								value > 79
							}
						}
					}
					add_trait_xp = {
						trait = source
						track = magic_potential
						value = 5
					}
				}
				if = {
					limit = {
						this.real_father = {
							has_trait = yaga
						}
					}
					add_trait_xp = {
						trait = source
						track = magic_potential
						value = 5
					}
				}
				else_if = {
					limit = {
						this.real_father = {
							has_trait = source2
						}
					}
					add_trait_xp = {
						trait = source
						track = magic_potential
						value = 5
					}
				}
			}
			if = {
				limit = {
					has_trait_xp = {
						trait = source
						track = magic_potential
						value < 50
					}
					any_parent = {
						OR = {
							AND = {
								has_trait = demon
								has_trait_xp = {
									trait = demon
									value > 50
								}
							}
							is_the_choosen_one_trigger = yes
							has_trait = yaga
						}
					}
				}
				add_trait_xp = {
					trait = source
					track = magic_potential
					value = 10
				}
			}
			if = {
				limit = {
					has_trait_xp = {
						trait = source
						track = magic_potential
						value < 70
					}
				}
				random = {
					chance = 20
					add_trait_xp = {
						trait = source
						track = magic_potential
						value = 20
					}
				}
			}
			random = {
				chance = 5
				add_trait_xp = {
					trait = source
					track = magic_potential
					value = 10
				}
			}
		}
	}
}
set_source4demon = {
	hidden_effect = {
		if = {
			limit = {
				has_trait = source
			}
			add_trait_xp = {
				trait = source
				track = magic_potential
				value = { 20 60 }
			}
			if = {
				limit = {
					exists = dynasty
					dynasty = {
						has_dynasty_perk = witchcraft_legacy_5
					}
				}
				add_trait_xp = {
					trait = source
					track = magic_potential
					value = 5
				}
			}
		}
	}
}

add_min_source_trait = {
	if = {
		limit = {
			NOT = {
				has_trait = source
			}
		}
		add_trait = source
	}
	hidden_effect = {
		add_trait_xp = {
			trait = source
			track = magic_potential
			value = 20
		}
		if = {
			limit = {
				exists = dynasty
				dynasty = {
					has_dynasty_perk = witchcraft_legacy_5
				}
			}
			add_trait_xp = {
				trait = source
				track = magic_potential
				value = 5
			}
		}
	}
}
add_20_magic_potential = {
	if = {
		limit = {
			has_trait = source
		}
		add_trait_xp = {
			trait = source
			track = magic_potential
			value = 20
		}
	}
}
add_10_magic_potential = {
	if = {
		limit = {
			has_trait = source
		}
		add_trait_xp = {
			trait = source
			track = magic_potential
			value = 10
		}
	}
}
add_5_magic_potential = {
	if = {
		limit = {
			has_trait = source
		}
		add_trait_xp = {
			trait = source
			track = magic_potential
			value = 5
		}
	}
}
add_2_magic_potential = {
	if = {
		limit = {
			has_trait = source
		}
		add_trait_xp = {
			trait = source
			track = magic_potential
			value = 2
		}
	}
}
add_1_magic_potential = {
	if = {
		limit = {
			has_trait = source
		}
		add_trait_xp = {
			trait = source
			track = magic_potential
			value = 1
		}
	}
}
make_source_unstable = {
	if = {
		limit = {
			has_trait = source
		}
		add_trait_xp = {
			trait = source
			track = instability
			value = 100
		}
		custom_tooltip = make_source_unstable_ct
	}
}
reduce_100_source_instability = {
	if = {
		limit = {
			has_trait = source
		}
		add_trait_xp = {
			trait = source
			track = instability
			value = -100
		}
		custom_tooltip = make_source_stable_ct
		add_trait_xp = {
			trait = source
			track = magic_potential
			value = 5
		}
	}
}
reduce_40_source_instability = {
	if = {
		limit = {
			has_trait = source
		}
		add_trait_xp = {
			trait = source
			track = instability
			value = -40
		}
		if = {
			limit = {
				has_trait_xp = {
					trait = source
					track = instability
					value < 30
				}
			}
			custom_tooltip = make_source_stable_ct
			add_trait_xp = {
				trait = source
				track = magic_potential
				value = 5
			}
		}
	}
}
reduce_20_source_instability = {
	if = {
		limit = {
			has_trait = source
		}
		add_trait_xp = {
			trait = source
			track = instability
			value = -20
		}
		if = {
			limit = {
				has_trait_xp = {
					trait = source
					track = instability
					value < 30
				}
			}
			custom_tooltip = make_source_stable_ct
			add_trait_xp = {
				trait = source
				track = magic_potential
				value = 5
			}
		}
	}
}
reduce_10_source_instability = {
	if = {
		limit = {
			has_trait = source
		}
		add_trait_xp = {
			trait = source
			track = instability
			value = -10
		}
		if = {
			limit = {
				has_trait_xp = {
					trait = source
					track = instability
					value < 30
				}
			}
			custom_tooltip = make_source_stable_ct
			add_trait_xp = {
				trait = source
				track = magic_potential
				value = 5
			}
		}
	}
}
set_spell_id = {
	hidden_effect = {
		set_variable = {
			name = spell_id
			value = $ID$
		}
	}
}
set_random_spell_id = {
	hidden_effect = {
		random_list = {
			1 = { set_spell_id = { ID = 2} }
			1 = { set_spell_id = { ID = 3} }
			1 = { set_spell_id = { ID = 5} }
			1 = { set_spell_id = { ID = 9} }
			1 = { set_spell_id = { ID = 10} }
		}
	}
}

cyro_common_offer_effect = {
	if = {
		limit = {
			scope:recipient = {
				is_witch_trigger = no
			}
		}
		scope:recipient = {
			give_witch_secret_or_trait_effect = yes
		}
	}
	if = {
		limit = {
			scope:actor = {
				has_trait = demon
				has_trait_xp = {
					trait = demon
					value < 50
				}
			}
		}
		scope:recipient = {
			if = {
				limit = {
					can_unlock_arcane_focus_trigger = no
				}
				if = {
					limit = {
						is_ai = yes
					}
					custom_tooltip = arcane_focus_unlocked_ct
					add_character_flag = arcane_unlocked_flag
				}
				else = {
					if = {
						limit = {
							has_character_flag = select_better_offer_cyro_flag
						}
						add_trait = source
					}
					else = {
						add_perk = magical_experiments_p1_perk
					}
				}
			}
			else_if = {
				limit = {
					NOT = {
						has_trait = source
					}
				}
				add_min_source_trait = yes
				#hidden_effect = {
				#	if = {
				#		limit = {
				#			exists = dynasty
				#			dynasty = {
				#				has_dynasty_perk = witchcraft_legacy_5
				#			}
				#		}
				#		add_trait_xp = {
				#			trait = source
				#			track = magic_potential
				#			value = 10
				#		}
				#	}
				#}
			}
			else = {
				add_5_magic_potential = yes
			}
			if = {
				limit = {
					NOT = {
						has_character_modifier = magic_resonance
					}
				}
				add_character_modifier = {
					modifier = magic_resonance
					years = 10
				}
			}
		}
	}
	else_if = {
		limit = {
			scope:actor = {
				has_trait = demon
				has_trait_xp = {
					trait = demon
					value < 75
				}
			}
		}
		scope:recipient = {
			if = {
				limit = {
					can_unlock_arcane_focus_trigger = no
				}
				if = {
					limit = {
						is_ai = yes
					}
					custom_tooltip = arcane_focus_unlocked_ct
					add_character_flag = arcane_unlocked_flag
				}
				else = {
					add_perk = magical_experiments_p1_perk
				}
				
			}
			else_if = {
				limit = {
					NOT = {
						has_trait = source
					}
				}
				add_min_source_trait = yes
				gain_sc_xp2_effect = yes
			}
			else = {
				gain_sc_xp5_effect = yes
				add_10_magic_potential = yes
			}
			add_learning_skill = 2
			add_diplomacy_skill = 2
			add_martial_skill = 2
			add_stewardship_skill = 2
			add_intrigue_skill = 2
			if = {
				limit = {
					NOT = {
						has_character_modifier = magic_resonance
					}
				}
				add_character_modifier = {
					modifier = magic_resonance
					years = 10
				}
			}
		}
	}
	else_if = {
		limit = {
			scope:actor = {
				has_trait = demon
				has_trait_xp = {
					trait = demon
					value < 100
				}
			}
		}
		scope:recipient = {
			if = {
				limit = {
					can_unlock_arcane_focus_trigger = no
				}
				if = {
					limit = {
						is_ai = yes
					}
					custom_tooltip = arcane_focus_unlocked_ct
					add_character_flag = arcane_unlocked_flag
				}
				else = {
					add_perk = magical_experiments_p1_perk
				}
				
			}
			else_if = {
				limit = {
					NOT = {
						has_trait = source
					}
				}
				add_trait = source
				hidden_effect = {
					add_trait_xp = {
						trait = source
						track = magic_potential
						value = 40
					}
				}
				gain_sc_xp5_effect = yes
			}
			else = {
				gain_sc_xp5_effect = yes
				add_10_magic_potential = yes
			}
			add_learning_skill = 3
			add_diplomacy_skill = 3
			add_martial_skill = 3
			add_stewardship_skill = 3
			add_intrigue_skill = 3
			if = {
				limit = {
					NOT = {
						has_character_modifier = magic_resonance
					}
				}
				add_character_modifier = {
					modifier = magic_resonance
					years = 10
				}
			}
			if = {
				limit = {
					NOT = {
						has_character_modifier = gift_from_hell_modifier
					}
				}
				add_character_modifier = {
					modifier = gift_from_hell_modifier
				}
			}
		}
	}
	else = {
		scope:recipient = {
			if = {
				limit = {
					NOT = {
						has_trait = source
					}
				}
				add_trait = source
				hidden_effect = {
					add_trait_xp = {
						trait = source
						track = magic_potential
						value = 50
					}
				}
				gain_sc_xp5_effect = yes
			}
			else = {
				gain_sc_xp5_effect = yes
				if = {
					limit = {
						has_trait_xp = {
							trait = source
							track = magic_potential
							value < 70
						}
					}
					add_20_magic_potential = yes
				}
				else = {
					add_10_magic_potential = yes
				}
				
			}
			add_learning_skill = 5
			add_diplomacy_skill = 5
			add_martial_skill = 5
			add_stewardship_skill = 5
			add_intrigue_skill = 5
			if = {
				limit = {
					NOT = {
						has_character_modifier = magic_resonance
					}
				}
				add_character_modifier = {
					modifier = magic_resonance
					years = 10
				}
			}
			if = {
				limit = {
					NOT = {
						has_character_modifier = amp_modifier
					}
				}
				add_character_modifier = {
					modifier = amp_modifier
					years = 9
				}
			}
			if = {
				limit = {
					NOT = {
						has_character_modifier = gift_from_hell_modifier
					}
				}
				add_character_modifier = {
					modifier = gift_from_hell_modifier
				}
			}
			#if = {
			#	limit = {
			#		has_character_flag = select_better_offer_cyro_flag
			#		NOT = {
			#			has_trait = immortal1
			#		}
			#	}
			#	add_trait = immortal1
			#}
		}
	}
	
}

cyro_better_offer_effect = {
	cyro_common_offer_effect = yes
	scope:recipient = {
		add_gold = 2000
		gain_cm_xp20_effect = yes
		if = {
			limit = {
				NOT = {
					has_character_modifier = mind_reader_modifier
				}
			}
			add_character_modifier = {
				modifier = mind_reader_modifier
			}
		}
	}
}

start_magic_cyro_effect = {
	hidden_effect = {
		scope:recipient = {
			add_character_flag = no_soul
			set_variable = {
				name = my_soul_owner
				value = scope:actor
			}
		}
		scope:actor = {
			if = {
				limit = {
					has_character_flag = magic_cyroo_o3_flag
				}
				
				scope:recipient = {
					trigger_event = {
						id = magic_ev8.18
						years = 10
					}
					hidden_effect = {
						add_character_flag = {
							flag = cyro_is_still_not_over_flag
							years = 9
						}
					}
				}
				remove_character_flag = magic_cyroo_o3_flag
			}
			else_if = {
				limit = {
					has_character_flag = magic_cyroo_o2_flag
				}
				scope:recipient = {
					trigger_event = {
						id = magic_ev8.18
						years = 20
					}
					hidden_effect = {
						add_character_flag = {
							flag = cyro_is_still_not_over_flag
							years = 19
						}
					}
				}
				remove_character_flag = magic_cyroo_o2_flag
			}
			else = {
				scope:recipient = {
					trigger_event = {
						id = magic_ev8.18
						years = 30
					}
					hidden_effect = {
						add_character_flag = {
							flag = cyro_is_still_not_over_flag
							years = 29
						}
					}
				}
				remove_character_flag = magic_cyroo_o3_flag
			}
			if = {
				limit = {
					has_character_flag = mefisto_devil
					scope:recipient = {
						is_ai = yes
					}
				}
				scope:recipient = {
					trigger_event = {
						id = magic_ev7.130
						years = { 1 2 }
					}
				}
			}
		}
	}
}

auto_cyro_4_mefito_effect = {
	random = {
		chance = 20
		if = {
			limit = {
				any_living_character = {
					has_trait = archmage
					count < 7
				}
				any_living_character = {
					has_character_flag = mefisto_devil
					is_landed_or_landless_administrative = no
					NOR = {
						has_character_flag = sign_cyrograph_recently
					}
				}
			}
			random_living_character = {
				limit = {
					has_character_flag = mefisto_devil
					is_landed_or_landless_administrative = no
					is_ai = yes
				}
				save_scope_as = actor
			}
			random_living_character = {
				limit = {
					is_immortal = no
					is_adult = yes
					is_imprisoned = no
					NOR =  {
						has_character_flag = no_soul
						has_character_flag = special_magic_character
						has_trait = demon
						any_parent = {
							is_ai = no
						}
					}
					OR = {
						has_trait = true_witch
						has_trait = archmage
						#has_focus = witch_focus
						has_focus = arcane_focus
						has_trait = grandmaster_coven
					}
				}
				save_scope_as = recipient
			}
			scope:actor = {
				add_character_flag = {
					flag = sign_cyrograph_recently
					years = 20
				}
				random_list = {
					1 = {
						add_character_flag = {
							flag = magic_cyroo_o1_flag
							years = 1
						}
					}
					1 = {
						add_character_flag = {
							flag = magic_cyroo_o2_flag
							years = 1
						}
					}
				}
			}
			scope:recipient = {
				trigger_event = magic_ev8.15
			}
		}
	}
}

give_magic_artifacts_claims_from_dynasty_perks_effect = {
	hidden_effect = {
		if = {
			limit = {
				exists = dynasty
				dynasty = {
					NOT = {
						any_dynasty_member = {
							OR = {
								is_ai = no
								has_character_flag = abdul_dude
							}
						}
					}
				}
			}
			random_artifact = {
				limit = {
					OR = {
						has_variable = magic1
						has_variable = singularity
					}
					ROOT.house = {
						NOT = {
							has_house_artifact_claim = PREV
						}
					}
				}
				save_scope_as = tmp_art
				ROOT.house = {
					add_house_artifact_claim = scope:tmp_art
				}
			}
		}
	}
}

blob_joins_you_effect = {
	hidden_effect = {
		culture = {
			set_variable = blob_exists
		}
		trigger_event = {
			id = magic_ev8.26
			months = { 1 2 }
		}
	}
}
blob_transformation_effect = {
	scope:blob = {
		change_first_name = blob_name2
		set_age = 60
		remove_trait = dwarf
		remove_trait = loyal
		add_trait = giant
		remove_trait = education_diplomacy_1
		add_trait = education_intrigue_5
		add_trait = cyrographer
		add_intrigue_skill = 20
		add_diplomacy_skill = 20
		add_martial_skill = 10
		add_stewardship_skill = 15
		add_learning_skill = 15
		add_prowess_skill = 20
		if = {
			limit = {
				ROOT = {
					has_full_magic_prot_trigger = yes
				}
			}
			add_trait_xp = {
				trait = demon
				value = 100
			}
		}
		else = {
			add_trait_xp = {
				trait = demon
				value = 90
			}
		}
		add_trait = source
		add_trait_xp = {
			trait = source
			track = magic_potential
			value = 75
		}
		add_character_modifier = {
			modifier = demonic_charm_modifier
		}
		#add_character_modifier = {
		#	modifier = master_magic_modifier
		#}
		add_character_modifier = {
			modifier = master_alteration_modifier
		}
		add_character_modifier = {
			modifier = mind_reader_modifier
		}
		add_character_modifier = {
			modifier = master_metamagic_modifier
		}
		turn_into_mage_effect = yes
		add_trait_xp = {
			trait = archmage
			track = power_saturation
			value = 100
		}
		add_trait_xp = {
			trait = archmage
			track = demonology
			value = 60
		}
		add_trait_xp = {
			trait = archmage
			track = secret_knowledge
			value = 90
		}
		add_trait_xp = {
			trait = archmage
			track = combat_magic
			value = 70
		}
	}
}

give_me_more_wounds_effect = {
	if = {
		limit = {
			NOR = {
				has_trait = wounded_1
				has_trait = wounded_2
				has_trait = wounded_3
			}
		}
		add_trait = wounded_1
	}
	else_if = {
		limit = {
			has_trait = wounded_1
		}
		hidden_effect = {
			remove_trait = wounded_1
		}
		add_trait = wounded_2
	}
	else_if = {
		limit = {
			has_trait = wounded_2
		}
		hidden_effect = {
			remove_trait = wounded_2
		}
		add_trait = wounded_3
	}
}
blob_becomes_ruler_effect = {
	hidden_effect = {
		random_ruler = {
			limit = {
				is_landed_or_landless_administrative = yes
				is_ai = yes
				primary_title = { is_mercenary_company = no }	
				is_witch_trigger = no
				NOT = {
					has_trait = source
				}
				is_clergy = no
			}
			save_scope_as = unlucky_guy
		}
		random_living_character = {
			limit = {
				has_character_flag = blob_flag
			}
			save_scope_as = leviathan_demon
		}
		if = {
			limit = {
				exists = scope:leviathan_demon
				scope:leviathan_demon = {
					is_ruler = no
				}
			}
			scope:unlucky_guy = {
				create_title_and_vassal_change = {
					type = conquest
					save_scope_as = change
					add_claim_on_loss = no
				}
				every_held_title = {
					change_title_holder_include_vassals = {
						holder = scope:leviathan_demon
						change = scope:change
					}
				}
				resolve_title_and_vassal_change = scope:change
			}
			if = {
				limit = {
					exists = scope:demon2
					scope:demon2 = {
						is_alive = yes
					}
				}
				scope:leviathan_demon = {
					add_courtier = scope:demon2
				}
			}
			if = {
				limit = {
					exists = scope:demon3
					scope:demon3 = {
						is_alive = yes
					}
				}
				scope:leviathan_demon = {
					add_courtier = scope:demon3
				}
			}
			scope:leviathan_demon = {
				set_culture_same_as = scope:unlucky_guy
				set_character_faith = scope:unlucky_guy.faith
				if = {
					limit = {
						has_character_flag = special_magic_character
					}
					remove_character_flag = special_magic_character
				}
			}
			scope:unlucky_guy = {
				death = natural
			}
		}
	}
}

create_astaroth_effect = {
	if = {
		limit = {
			exists = scope:tttarget
		}
		random_vassal = {
			save_scope_as = vvasal
		}
	}
	else = {
		random_ruler = {
			save_scope_as = vvasal
		}
	}
	create_character = {
		employer = scope:vvasal
		name = astaroth_name
		template = astaroth_demon_character
		save_scope_as = asta
	}
	scope:asta = {
		#add_secret = {
		#	type = secret_witch
		#	target = scope:demon
		#}
		give_witch_secret_or_trait_effect = yes
		add_character_flag = astaroth_flag
		give_nickname = astaroth_nickname
		add_perk = protective_runes_perk
		add_perk = magical_senses_perk
		add_perk = combat_spells_p3_perk
		add_perk = truth_is_relative_perk
		add_perk = digging_for_dirt_perk
		add_perk = kidnapper_perk
		add_perk = court_of_shadows_perk
		add_perk = prepared_for_anything_perk
		add_perk = swift_execution_perk
		add_perk = a_job_done_right_perk
		add_perk = twice_schemed_perk
		add_perk = schemer_perk
		add_character_modifier = master_psionic_modifier
		add_character_modifier = mind_reader_modifier
		add_character_modifier = demonic_charm_modifier
		add_character_modifier = strength_ohm_modifier
		gain_standard_ps_effect = yes
		add_character_modifier = looked_to_the_future
		add_character_modifier = preparation_for_strike_modifier
		add_character_modifier = witch_poison_modifier
		add_character_modifier = touched_divinity_modifier
		add_character_flag = special_magic_character
		add_gold = 5000
		create_dead_ring_artifact_effect = {
			OWNER = scope:asta
		}
		add_trait_xp = {
			trait = demon
			value = 100
		}
		add_trait_xp = {
			trait = witch_hunter
			value = 100
		}
		add_trait_xp = {
			trait = source
			track = magic_potential
			value = 84
		}
		random_character_artifact = {
			limit = {
				has_variable = magic_ring
			}
			equip_artifact_to_owner_replace = yes
		}
		
	}
}

run_bael_effect = {
	
	random_ruler = {
		limit = {
			has_trait = archmage
			is_ai = no
			is_landed_or_landless_administrative = yes
			highest_held_title_tier = tier_empire
			any_character_artifact = { has_variable = magic1 }
		}
		#send_interface_toast = {
		#	title = test
		#	show_as_tooltip = {
		#		add_diplomacy_skill = 1
		#	}
		#}
		trigger_event = {
			id = magic_ev2.48
			days = { 1 360 }
		}
	}
}
run_abdul_alhazred_effect = {
	random_ruler = {
		limit = {
			is_legendary_mage_trigger = yes
			is_ai = no
			any_character_artifact = {
				has_variable = magic1
				count > 1
			}
		}
		trigger_event = {
			id = magic_ev6.42
			days = { 1 360 }
		}
	}
}

run_grand_coalition_effect = {
	if = {
		limit = {
			any_ruler = {
				has_trait = witch_hunter
				has_character_modifier = inq_modifier
				is_ai = yes
				is_imprisoned = no
			}
		}
		random_ruler = {
			limit = {
				has_trait = witch_hunter
				has_character_modifier = inq_modifier
				is_ai = yes
				is_imprisoned = no
			}
			if = {
				limit = {
					has_trait = incapable
				}
				remove_trait = incapable
			}
			save_scope_as = actor
		}
		random_ruler = {
			limit = {
				has_trait = archmage
				is_ai = no
				dread > 20
				is_imprisoned = no
				NOR = {
					has_strong_hook = scope:actor
					has_relation_mmaster = scope:actor
					has_relation_mminion = scope:actor
				}
				any_held_title = {
					tier = tier_empire
				}
			}
			save_scope_as = recipient
		}
		if = {
			limit = {
				exists = scope:actor
				exists = scope:recipient
			}
			scope:actor = {
				trigger_event = {
					id = magic_ev8.42
					days = { 1 61 }
				}
			}
		}
		else = {
			#debug_log = test_test_decision_desc
		}
	}
	else = {
		#debug_log = test_test_decision_tooltip
	}
}

display_extended_duration_spell_catalyst = {
	if = {
		limit = {
			scope:actor = {
				any_character_artifact = {
					has_variable = catalyst
				}
			}
		}
		scope:actor = {
			custom_tooltip = magic_catalyst_spells_duration_ct
		}
	}
}
#normal
show_duel_conclusion_effect = {
	hidden_effect = {
		every_living_character = {
			limit = {
				is_ai = no
				NOT = {	has_variable = pclash	}
			}
			#send_interface_toast = {
			#	title = mage_duel
			#	left_icon = scope:char2
			#	right_icon = ROOT
			#	show_as_tooltip = {
			#		scope:char2 = {
			#			add_prestige = massive_prestige_gain
			#		}
			#	}
			#}
			send_interface_message = {
				type = event_toast_effect_neutral
				title = mage_duel
				desc = mage_duel
				left_icon = scope:char2
				right_icon = ROOT
				show_as_tooltip = {
					scope:char2 = {
						add_prestige = massive_prestige_gain
					}
				}
			}
		}
	}
}
#no resolution
show_duel_conclusion_effect2 = {
	hidden_effect = {
		every_living_character = {
			limit = {
				is_ai = no
				NOT = {	has_variable = pclash	}
			}
			#send_interface_toast = {
			#	title = mage_duel
			#	left_icon = scope:char2
			#	right_icon = ROOT
			#	custom_tooltip = ev5.29.title
			#}
			send_interface_message = {
				type = event_toast_effect_neutral
				title = mage_duel
				desc = mage_duel
				left_icon = scope:char2
				right_icon = ROOT
				custom_tooltip = ev5.29.title
			}
		}
	}
}
#died durin combat
#normal
show_duel_conclusion_effect3 = {
	hidden_effect = {
		every_living_character = {
			limit = {
				is_ai = no
				NOT = {	has_variable = pclash	}
			}
			#send_interface_toast = {
			#	title = mage_duel
			#	left_icon = ROOT
			#	right_icon = scope:char2
			#	show_as_tooltip = {
			#		ROOT = {
			#			add_prestige = massive_prestige_gain
			#		}
			#	}
			#}
			send_interface_message = {
				type = event_toast_effect_neutral
				title = mage_duel
				desc = mage_duel
				left_icon = ROOT
				right_icon = scope:char2
				show_as_tooltip = {
					ROOT = {
						add_prestige = massive_prestige_gain
					}
				}
			}
		}
	}
}

lilith_find_new_owner_effect = {
	if = {
		limit = {
			is_married = no
		}
		if = {
			limit = {
				any_relation = {
					type = lover
					is_landed_or_landless_administrative = yes
					NOT = {
						has_character_flag = failed_lilith_flag
					}
				}
			}
			if = {
				limit = {
					exists = scope:owner
				}
				clear_saved_scope = owner
			}
			random_relation = {
				type = lover
				limit = {
					NOT = {
						has_character_flag = failed_lilith_flag
					}
					is_landed_or_landless_administrative = yes
				}
				save_scope_as = owner
			}
		}
		else_if = {
			limit = {
				any_relation = {
					type = soulmate
					is_landed_or_landless_administrative = yes
					NOT = {
						has_character_flag = failed_lilith_flag
					}
				}
			}
			if = {
				limit = {
					exists = scope:owner
				}
				clear_saved_scope = owner
			}
			random_relation = {
				type = soulmate
				limit = {
					NOT = {
						has_character_flag = failed_lilith_flag
					}
					is_landed_or_landless_administrative = yes
				}
				save_scope_as = owner
			}
		}
		else = {
			random_ruler = {
				limit = {
					is_landed_or_landless_administrative = yes
					is_adult = yes
					is_imprisoned = no
					is_attracted_to_gender_of = ROOT
					in_diplomatic_range = ROOT
				}
				save_scope_as = owner
			}
		}
		if = {
			limit = {
				NOT = {
					is_courtier_of = scope:owner
				}
			}
			scope:owner = {
				add_courtier = ROOT
			}
		}
		
		if = {
			limit = {
				NOR = {
					has_relation_lover = scope:owner
					has_relation_soulmate = scope:owner
				}
			}
			if = {
				limit = {
					scope:owner = {
						is_ai = yes
					}
				}
				random_list = {
					1 = {
						start_scheme = {
							type = seduce
							target_character = scope:owner
						}
					}
					1 = {
						set_relation_lover = scope:owner
					}
				}
			}
			else = {
				start_scheme = {
					type = seduce
					target_character = scope:owner
				}
			}
		}
	}
	else = {
		if = {
			limit = {
				exists = primary_partner
				NOT = {
					any_scheme = {
						scheme_type = murder
					}
				}
			}
			start_scheme = {
				type = murder
				target_character = primary_partner
			}
		}
	}
}
run_lilith_events_effect = {
	scope:owner = {
		if = {
			limit = {
				has_character_modifier = joy_with_lilith_modifier
			}
			random_list = {
				12 = {
					trigger = {
						#is_ai = no
						NOT = { has_character_flag = feast4lilith }
						NOT = { exists = involved_activity }
					}
					#feast please!
					trigger_event = magic_ev.46
				}
				10 = {
					trigger = {
						OR = {
							any_relation ={
								is_ruler = yes
								NOT = { has_trait = demon }
								type = rival
							}
							any_relation ={
								is_ruler = yes
								NOT = { has_trait = demon }
								type = nemesis
							}
						}
					}
					#I will spy 4u
					trigger_event = magic_ev.48
				}
				5 = {
					trigger = {
						is_male = yes
						NOR = {
							is_consort_of = root
							is_spouse_of = root
						}
						any_spouse = {
							count > 0
						}
						root = {
							is_married = no
						}
					}
					#I wanna be your queen
					trigger_event = magic_ev.54
				}
				8 = {
					#I'll kill my husband
					trigger = {
						root = {
							is_married = yes
							exists = primary_partner
							NOR = {
								has_relation_lover = primary_partner
								has_relation_soulmate = primary_partner
							}
						}
					}
					root = {
						start_scheme = {
							type = murder
							target_character = scope:target.primary_partner
						}
					}
				}
				5 = {
					#I'll seduce someone
					trigger = {
						root = {
							any_scheme = {
								scheme_type = seduce
								count = 0
							}
						}
					}
					random_relation = {
						type = rival
						limit = {
							NOR = {
								has_relation_lover = root
								has_relation_soulmate = root
							}
							is_attracted_to_gender_of = root
							in_diplomatic_range = root
							#type = rival
							is_adult = yes
						}
						add_to_list = potential_targs
					}
					random_relation = {
						type = friend
						limit = {
							#type = friend
							NOR = {
								has_relation_lover = root
								has_relation_soulmate = root
							}
							is_attracted_to_gender_of = root
							in_diplomatic_range = root
							is_adult = yes
						}
						add_to_list = potential_targs
					}
					random_neighboring_realm_same_rank_owner = {
						limit = {
							NOR = {
								has_relation_lover = root
								has_relation_soulmate = root
							}
							is_attracted_to_gender_of = root
							in_diplomatic_range = root
							is_adult = yes
						}
						add_to_list = potential_targs
						
					}
					random_courtier_or_guest = {
						limit = {
							NOR = {
								has_relation_lover = root
								has_relation_soulmate = root
							}
							is_attracted_to_gender_of = root
							in_diplomatic_range = root
							is_adult = yes
						}
						add_to_list = potential_targs
						
					}
					random_vassal = {
						limit = {
							NOR = {
								has_relation_lover = root
								has_relation_soulmate = root
							}
							is_powerful_vassal = yes
							is_attracted_to_gender_of = root
							in_diplomatic_range = root
							is_adult = yes
						}
						add_to_list = potential_targs
					}
					liege = {
						if = {
							limit = {
								NOT = { this = scope:owner }
								NOR = {
									has_relation_lover = root
									has_relation_soulmate = root
								}
								is_attracted_to_gender_of = root
								in_diplomatic_range = root
								is_adult = yes
							}
							add_to_list = potential_targs
						}
					}
					random_in_list = {
						list = potential_targs
						save_scope_as = potential_targ
					}
					root = {
						if = {
							limit = {
								exists = scope:potential_targ
							}
							start_scheme = {
								type = seduce
								target_character = scope:potential_targ
							}
						}
					}
				}
				5 = {
					#I kill your councilor...
					trigger = {
						any_councillor = {
							count > 3
						}
					}
					trigger_event = magic_ev.55
				}
				5 = {
					#give me some money
					#trigger = {
					#	gold > 100
					#}
					trigger_event = magic_ev.56
				}
				3 = {
					#I do nothing...
				}
			}
		}
		else = {
			send_interface_toast = {
				title = lilith_name
				left_icon = scope:owner
				right_icon = root
				add_character_modifier = {
					modifier = joy_with_lilith_modifier
				}
			}
		}
	}
}