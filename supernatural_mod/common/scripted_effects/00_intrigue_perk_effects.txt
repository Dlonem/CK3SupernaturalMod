
### Effects for handling Intrigue Lifestyle Perks

# dark_insights_skill_gain_roll_effect: Randomly rolls for whether the character should get a bonus Intrigue or Prowess point

dark_insights_skill_gain_roll_effect = {
	#Backup check in case something has gone wrong
	if = {
		limit = {
			OR = {
				has_perk = dark_insights_perk
				has_perk = bloodthirsty_perk
			}
		}

		# Backup for the variables
		if = {
			limit = {
				NOT = { has_variable = dark_insights_prowess_increases }
			}
			set_variable = {
				name = dark_insights_prowess_increases
				value = 0
			}
		}
		if = {
			limit = {
				NOT = { has_variable = dark_insights_intrigue_increases }
			}
			set_variable = {
				name = dark_insights_intrigue_increases
				value = 0
			}
		}
		
		# Roll to see if we get a skill increase.
		if = {
			# For tooltip generation, we need to check if we have the variable yet (the backups above won't create the variables until after the effect is actually run).
			limit = {
				NOR = {
					has_variable = dark_insights_prowess_increases
					has_variable = dark_insights_intrigue_increases
				}
			}
			custom_tooltip = dark_insight_gain_stats_tt
		}
		else_if = {
			limit = {
				
				OR = {
					var:dark_insights_prowess_increases < dark_insights_prowess_increase_maximum
					var:dark_insights_intrigue_increases < dark_insights_intrigue_increase_maximum
				}
			}

			custom_tooltip = dark_insight_gain_stats_tt

			hidden_effect = {
				random = {
					chance = dark_insights_stat_increase_chance
					scope:actor = {
						
					}
					random_list = {
						50 = {
							trigger = {
								var:dark_insights_prowess_increases < dark_insights_prowess_increase_maximum
							}

							send_interface_toast = {
								title = dark_insights_gain_message
								left_icon = scope:actor
								right_icon = scope:recipient

								add_character_modifier = {
									modifier = dark_insights_prowess_modifier
								}
							}

							change_variable = {
								name = dark_insights_prowess_increases
								add = 1
							}
						}
						50 = {
							trigger = {
								var:dark_insights_intrigue_increases < dark_insights_intrigue_increase_maximum
							}

							send_interface_toast = {
								title = dark_insights_gain_message
								left_icon = scope:actor
								right_icon = scope:recipient

								add_character_modifier = {
									modifier = dark_insights_intrigue_modifier
								}
							}

							change_variable = {
								name = dark_insights_intrigue_increases
								add = 1
							}
						}
					}
				}
			}
		}
		else_if = {
			limit = {
				var:dark_insights_prowess_increases >= dark_insights_prowess_increase_maximum
				var:dark_insights_intrigue_increases >= dark_insights_intrigue_increase_maximum
			}
			custom_tooltip = dark_insights_maximum_insight_tt
		}
	}
}
