create_ancient_singularity_effect = {
	# Get the character the artifact is being made for.
	$OWNER$ = { save_scope_as = owner }

			create_artifact = {	
				name = singularity_name
				description = singularity_desc
				template=general_unique_template
				type = miscellaneous
				visuals = fp2_armillary_sphere
				modifier = singularity_modifier1
				rarity=illustrious
				decaying = no
				history = {
					type = created_before_history
				}
				save_scope_as = newly_created_artifact
				#set_variable=magic1
			}
			scope:newly_created_artifact={
				set_variable=magic1
				set_variable=singularity
				set_variable=singularity_sleeping
			}
			#clear_saved_scope = newly_created_artifact
			#set_global_variable=adin1
			#set_global_variable=magic_exists	
}

create_ancient_singularity_v2_effect = {
	# Get the character the artifact is being made for.
	$OWNER$ = { save_scope_as = owner }

			create_artifact = {	
				name = singularity2_name
				description = singularity2_desc
				template=general_unique_template
				type = miscellaneous
				visuals = fp2_armillary_sphere
				modifier = singularity_modifierX
				rarity=illustrious
				decaying = no
				history = {
					type = created_before_history
				}
				save_scope_as = newly_created_artifact
				#set_variable=magic1
			}
			scope:newly_created_artifact={
				set_variable=singularity2
			}
			#clear_saved_scope = newly_created_artifact
			#set_global_variable=adin1
			#set_global_variable=magic_exists	
}
create_ancient_singularity_v3_effect = {
	$OWNER$ = { save_scope_as = owner }

			create_artifact = {	
				name = singularity2_name
				description = singularity2_desc
				template=general_unique_template
				type = miscellaneous
				visuals = fp2_armillary_sphere
				modifier = singularity_modifierX
				rarity=illustrious
				decaying = no
				creator = scope:owner
				save_scope_as = newly_created_artifact
				#set_variable=magic1
			}
			scope:newly_created_artifact={
				set_variable=singularity2
				set_variable=singularity
			}
}

create_immortality_ring_artifact_effect = {
	# Get the character the artifact is being made for.
	$OWNER$ = { save_scope_as = owner }

			create_artifact = {	
				name = immortality_ring
				description = immortality_ring_desc
				template=general_unique_template
				type = miscellaneous
				visuals = ring
				modifier = artifact_ring_of_life_modifier
				#wealth = scope:wealth
				#quality = scope:quality
				rarity=illustrious
				decaying = no
				history = {
					type = created_before_history
				}
				save_scope_as = newly_created_artifact
				#set_variable=magic1
			}
			scope:newly_created_artifact={
				set_variable=magic1
				set_variable=magic_ring
				set_variable=magic_ring0
			}
			#clear_saved_scope = newly_created_artifact
			#set_global_variable=adin1
			#set_global_variable=magic_exists	
}

create_dead_ring_artifact_effect = {
	# Get the character the artifact is being made for.
	$OWNER$ = { save_scope_as = owner }

			create_artifact = {	
				name = dead_ring
				description = dead_ring_desc
				template=general_unique_template
				type = miscellaneous
				visuals = ring
				modifier = artifact_ring_of_dead_modifier

				rarity=illustrious
				decaying = no
				history = {
					type = created_before_history
				}
				save_scope_as = newly_created_artifact
				#set_variable=magic1
			}
			scope:newly_created_artifact={
				#set_variable=magic1
				set_variable=magic_ring
			}
				
}

create_blackgrimoire_artifact_effect = {
	# Get the character the artifact is being made for.
	$OWNER$ = { save_scope_as = owner }

			create_artifact = {	
				name = blackgrimoire
				description = blackgrimoire_desc
				template=general_unique_template
				type = miscellaneous
				visuals = book
				modifier = blackgrimoire_modifier
				#wealth = scope:wealth
				#quality = scope:quality
				rarity=illustrious
				decaying = no
				history = {
					type = created_before_history
				}
				#custom_tooltip = blackgrimoire_tooltip
				save_scope_as = newly_created_artifact
			}
			scope:newly_created_artifact={
				set_variable=magic1
				set_variable=blackgrimoire
			}
			#clear_saved_scope = newly_created_artifact
			#set_global_variable=adin2
			#set_global_variable=magic_exists	
}

create_dark_blade_artifact_effect = {
	$OWNER$ = { save_scope_as = owner }
			create_artifact = {	
				name = dark_blade
				description = dark_blade_desc
				template=general_unique_template
				type = sword
				visuals = darkblade
				modifier = darkk_blade_base_modifier
				rarity=illustrious
				decaying = no
				history = {
					type = created_before_history
				}
				save_scope_as = newly_created_artifact
			}
			scope:newly_created_artifact={
				set_variable=magic1
				set_variable=dark_blade
			}
}

create_crown_shadows_artifact_effect = {
	$OWNER$ = { save_scope_as = owner }
	set_artifact_rarity_illustrious = yes
			create_artifact = {	
				name = crown_shadows
				description = crown_shadows_desc
				template=general_unique_template
				type = helmet
				visuals = shadow_crown
				modifier = magic_crown_modifier
				rarity=illustrious
				decaying = no
				wealth = scope:wealth
				quality = scope:quality
				history = {
					type = created_before_history
				}
				save_scope_as = newly_created_artifact
			}
			scope:newly_created_artifact={
				set_variable=magic1
				set_variable=magic_crown
			}
}



create_magic_catalyst_artifact_effect = {
	# Get the character the artifact is being made for.
	$OWNER$ = { save_scope_as = owner }

			create_artifact = {	
				name = magic_catalyst
				description = magic_catalyst_desc
				template=general_unique_template
				type = miscellaneous
				visuals = rock
				modifier = artifact_magic_catalyst_modifier
				#wealth = scope:wealth
				#quality = scope:quality
				rarity=illustrious
				decaying = no
				history = {
					type = created_before_history
				}
				save_scope_as = newly_created_artifact
				#custom_tooltip = magic_catalyst_tooltip
			}
			scope:newly_created_artifact={
				set_variable=magic1
				set_variable=catalyst
			}
			#clear_saved_scope = newly_created_artifact
			#set_global_variable=adin3
			#set_global_variable=magic_exists	
}

create_dragon_scales_artifact_effect = {
	# Get the character the artifact is being made for.
	$OWNER$ = { save_scope_as = owner }
	set_artifact_rarity_illustrious = yes
			create_artifact = {	
				name = dragon_scales
				description = dragon_scales_desc
				#template = general_unique_template
				template=general_unique_template
				type = armor_plate
				visuals = armor
				modifier = artifact_dragon_scales_modifier
				wealth = scope:wealth
				quality = scope:quality
				rarity=illustrious
				decaying = no
				history = {
					type = created_before_history
				}
				save_scope_as = newly_created_artifact
			}
			#create_artifact_armor_effect = {
			#	OWNER = root
			#	CREATOR = scope:dummy_gender
			#	SET_ARMOR_TYPE = flag:armor_type_plate
			#}
			scope:newly_created_artifact={
			#	set_artifact_rarity = illustrious
			#	set_artifact_name = dragon_scales
			#	set_artifact_description = dragon_scales_desc
			#	clear_artifact_modifiers = yes
			#	add_artifact_modifier = artifact_dragon_scales_modifier
				#set_artifact_feature_group = armor_decoration
				#set_artifact_feature_group = armor_property
				#set_artifact_feature_group = decoration_pattern
				#set_artifact_rarity_illustrious = yes
				set_variable=magic1
				set_variable=dragon_scales
			}
}

create_hells_scepter_artifact_effect = {
	$OWNER$ = { save_scope_as = owner }
			set_artifact_rarity_illustrious = yes
			create_artifact = {	
				name = hells_scepter
				description = hells_scepter_desc
				template=general_unique_template
				type = regalia
				visuals = regalia
				modifier = hells_scepter_base_modifier
				rarity=illustrious
				wealth = scope:wealth
				quality = scope:quality
				decaying = no
				history = {
					type = created_before_history
				}
				save_scope_as = newly_created_artifact
			}
			scope:newly_created_artifact={
				set_variable=magic1
				set_variable=magic_scepter
			}
}

create_fake_magic_artifact_effect = {
	$OWNER$ = { save_scope_as = owner }
	$GIVER$ = { save_scope_as = giver }

			create_artifact = {	
				name = fake_magic_artifact
				description = fake_magic_artifact_desc
				template=general_unique_template
				type = sword
				visuals = sword
				modifier = artifact_prowess_1_modifier
				#wealth = scope:wealth
				#quality = scope:quality
				rarity=common
				history = {
					type = created_before_history
				}
				#save_scope_as = newly_created_artifact
			}	
}

create_magic_book_artifact_effect = {
	save_scope_as = owner
	set_artifact_rarity_illustrious = yes
			create_artifact = {	
				name = placeholder
				description = placeholder
				template = general_unique_template
				visuals = book
				type = book
				modifier = elixir_modifier
				rarity = famed
				creator = root
				wealth = scope:wealth
				quality = scope:quality
				save_scope_as = new_book
			}
	clear_saved_scope = owner
}

create_rare_potion_effect = {
	# Get the character the artifact is being made for.
	$OWNER$ = { save_scope_as = owner }
	random_list = {
		10 = {
			create_artifact = {	
				name = pot1
				description = pot1_desc
				template=general_unique_template
				type = miscellaneous
				#type = elixir
				visuals = flask
				#visuals = fp2_armillary_sphere
				modifier = elixir_modifier
				#wealth = scope:wealth
				#quality = scope:quality
				rarity=illustrious
				decaying = no
				save_scope_as = newly_created_artifact
				#custom_tooltip = magic_catalyst_tooltip
			}
			scope:newly_created_artifact={
				set_variable=pot1
			}
			send_interface_toast = {
				title = ev2.41.dt
				custom_tooltip = gain_pot1_ct
			}
		}
		10 = {
			create_artifact = {	
				name = pot2
				description = pot2_desc
				template=general_unique_template
				type = miscellaneous
				#type = elixir
				visuals = flask
				#visuals = fp2_armillary_sphere
				modifier = elixir_modifier
				#wealth = scope:wealth
				#quality = scope:quality
				rarity=illustrious
				decaying = no
				save_scope_as = newly_created_artifact
				#custom_tooltip = magic_catalyst_tooltip
			}
			scope:newly_created_artifact={
				set_variable=pot2
			}
			send_interface_toast = {
				title = ev2.41.dt
				custom_tooltip = gain_pot2_ct
			}
		}
		10 = {
			create_artifact = {	
				name = pot3
				description = pot3_desc
				template=general_unique_template
				type = miscellaneous
				#type = elixir
				visuals = flask
				#visuals = fp2_armillary_sphere
				modifier = elixir_modifier
				#wealth = scope:wealth
				#quality = scope:quality
				rarity=illustrious
				decaying = no
				save_scope_as = newly_created_artifact
				#custom_tooltip = magic_catalyst_tooltip
			}
			scope:newly_created_artifact={
				set_variable=pot3
			}
			send_interface_toast = {
				title = ev2.41.dt
				custom_tooltip = gain_pot3_ct
			}
		}
		10 = {
			create_artifact = {	
				name = pot4
				description = pot4_desc
				template=general_unique_template
				type = miscellaneous
				#type = elixir
				visuals = flask
				#visuals = fp2_armillary_sphere
				modifier = elixir_modifier
				#wealth = scope:wealth
				#quality = scope:quality
				rarity=illustrious
				decaying = no
				save_scope_as = newly_created_artifact
				#custom_tooltip = magic_catalyst_tooltip
			}
			scope:newly_created_artifact={
				set_variable=pot4
			}
			send_interface_toast = {
				title = ev2.41.dt
				custom_tooltip = gain_pot4_ct
			}
		}
		9 = {
			create_artifact = {	
				name = pot5
				description = pot5_desc
				template=general_unique_template
				type = miscellaneous
				#type = elixir
				visuals = flask
				#visuals = fp2_armillary_sphere
				modifier = elixir_modifier
				#wealth = scope:wealth
				#quality = scope:quality
				rarity=illustrious
				decaying = no
				save_scope_as = newly_created_artifact
				#custom_tooltip = magic_catalyst_tooltip
			}
			scope:newly_created_artifact={
				set_variable=pot5
			}
			send_interface_toast = {
				title = ev2.41.dt
				custom_tooltip = gain_pot5_ct
			}
		}
	}
}

create_witch_potion_effect = {
	$OWNER$ = { save_scope_as = owner } # Get the character the artifact is being made for.
	create_artifact = {
		name = witchpotion
		description = witchpotion_desc
		template=general_unique_template
		type = miscellaneous
		#type = elixir
		visuals = flask
		#visuals = fp2_armillary_sphere
		modifier = elixir_modifier
		#wealth = scope:wealth
		#quality = scope:quality
		rarity=famed
		decaying = no
		save_scope_as = newly_created_artifact
		#custom_tooltip = magic_catalyst_tooltip
	}
	scope:newly_created_artifact = {
		set_variable = witchpotion
	}
	send_interface_toast = {
		title = potion_creation.dt
		custom_tooltip = gain_witchpotion_ct
	}
}

create_love_potion_effect = {
	$OWNER$ = { save_scope_as = owner } # Get the character the artifact is being made for.
	create_artifact = {
		name = lovepotion
		description = lovepotion_desc
		template=general_unique_template
		type = miscellaneous
		#type = elixir
		visuals = flask
		#visuals = fp2_armillary_sphere
		modifier = elixir_modifier
		#wealth = scope:wealth
		#quality = scope:quality
		rarity=famed
		decaying = no
		save_scope_as = newly_created_artifact
		#custom_tooltip = magic_catalyst_tooltip
	}
	scope:newly_created_artifact = {
		set_variable = lovepotion
	}
	send_interface_toast = {
		title = potion_creation.dt
		custom_tooltip = gain_lovepotion_ct
	}
}

create_mutagen_potion_effect = {
	$OWNER$ = { save_scope_as = owner } # Get the character the artifact is being made for.
	create_artifact = {
		name = mutagenpotion
		description = mutagenpotion_desc
		template=general_unique_template
		type = miscellaneous
		#type = elixir
		visuals = flask
		#visuals = fp2_armillary_sphere
		modifier = elixir_modifier
		#wealth = scope:wealth
		#quality = scope:quality
		rarity=famed
		decaying = no
		save_scope_as = newly_created_artifact
		#custom_tooltip = magic_catalyst_tooltip
	}
	scope:newly_created_artifact = {
		set_variable = mutagenpotion
	}
	send_interface_toast = {
		title = potion_creation.dt
		custom_tooltip = gain_mutagenpotion_ct
	}
}
