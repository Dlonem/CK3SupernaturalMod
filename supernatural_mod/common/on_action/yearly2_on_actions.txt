yearly_global_pulse = {
	events = {
		magic_ev.99
		magic_ev2.1
		magic_ev2.15
		magic_ev2.43
		magic_ev2.71
		#magic_ev5.25 #Yearly Demon XP, Removed in 2.05 as I don't want Demons leveling up
		spn_xp_sys.1000
		#magic_ev.95
		#delay = { days = { 1 36 } }
	}
}

on_imprison = {
	events = {
		magic_ev2.18
	}
	on_actions = {
		on_action_magic_item_intercept
		on_action_achoris
	}
}
on_action_achoris = {
	trigger = {
		has_character_flag = achoris
		scope:imprisoner = {
			any_character_artifact = {
				has_variable = magic_ring0
				has_artifact_modifier = artifact_ring_of_life_modifier0
			}
		}
	}
	effect = {
		save_scope_as = achoriss
		scope:imprisoner = {
			trigger_event = {
				id = magic_ev6.30
				days = 1
			}
		}
	}
}
on_action_magic_item_intercept = {
	trigger = {
		scope:imprisoner = {
			exists = dynasty
			dynasty = {
				has_dynasty_perk = witchcraft_legacy_1
			}
		}
		#scope:prisoner = {
		#	any_character_artifact = {
		#		has_variable = magic1
		#	}
		#}
		any_character_artifact = {
			has_variable = magic1
		}
	}
	effect = {
		every_character_artifact = {
			limit = {
				has_variable = magic1
			}
			save_scope_as = smitem
			set_owner = {
				target = scope:imprisoner
				history = {
					type = stolen
					actor = root
					recipient = scope:imprisoner
					location = scope:imprisoner.location
				}
			}
			if = {
				limit = {
					NOT = {
						root = {
							has_personal_artifact_claim = prev
						}
					}
				}
				root = {
					add_personal_artifact_claim = prev
				}
			}
		}
		scope:imprisoner = {
			send_interface_toast = {
				title=smitem_intercepted
				show_as_tooltip = {
					scope:smitem = {
						set_owner = {
							target = scope:imprisoner
							history = {
								type = stolen
								actor = root
								recipient = scope:imprisoner
								location = scope:imprisoner.location
							}
						}
					}
				}
			}
		}
		root = {
			send_interface_toast = {
				title=smitem_intercepted
				show_as_tooltip = {
					scope:smitem = {
						set_owner = {
							target = scope:imprisoner
							history = {
								type = stolen
								actor = root
								recipient = scope:imprisoner
								location = scope:imprisoner.location
							}
						}
					}
				}
			}
		}
	}
}

on_birth_child = {
	on_actions = {
		#on_action_enchanted_blood
		on_action_demon_inherited
		on_action_unholy
		on_action_yagas_blood
		on_action_source_from_s3
		on_action_pandora_s3
		on_action_source
	}
}

#on_action_enchanted_blood = { 
#	trigger = {
#		scope:child = {
#			exists = dynasty
#			dynasty = {
#				has_dynasty_perk = witchcraft_legacy_5
#			}
#			NOR = {
#				has_trait = source
#				has_trait = source2
#			}
#		}
#	}
#	effect = {
#		random = {
#			chance = 12
#			scope:child = {
#				add_trait = source
#			}
#		}
#	}
#}

on_action_unholy = { 
	trigger = {
		scope:child.mother = {
			has_character_modifier = touched_magic_modifier
		}
	}
	effect = {
		scope:child = {
			add_trait = source
			add_trait = beauty_bad_3
			add_trait = scaly
			#random = {
			#	chance = 25
			#	trigger_event = {
			#		id = magic_ev3.75
			#		years = { 20 21 }
			#	}
			#}
		}
	}
}

on_action_demon_inherited = { 
	trigger = {
		AND = {
			scope:mother = {
				has_trait = demon
			}
			scope:real_father = {
				has_trait = demon
			}
		}
	}
	effect = {
		scope:child = {
			if = {
				limit = {
					NOR = {
						has_trait = source
						has_trait = source2
						has_trait = source3
					}
				}
			}
			if = {
				limit = {
					has_inactive_trait = source
					NOR = {
						has_trait = source2
						has_trait = source3
					}
				}
				make_trait_active = source
			}
			else = {
				add_trait = source
			}
			trigger_event = {
				id = magic_ev3.75
				years = { 20 21 }
			}
		}
	}
}
on_action_source = {
	trigger = {
		scope:child = {
			NOR = {
				has_trait = source2
				has_trait = source3
			}
		}
		OR = {
			AND = {
				exists = scope:mother
				scope:mother = {
					has_trait = source
				}
			}
			AND = {
				exists = scope:real_father
				scope:real_father = {
					has_trait = source
				}
			}
		}
	}
	effect = {
		if = {
			limit = {
				scope:child = {
					has_inactive_trait = source
					NOR = {
						has_trait = source2
						has_trait = source3
					}
				}
			}
			if = {
				limit = {
					exists = scope:mother
					scope:mother = {
						has_trait = source
					}
					exists = scope:real_father
					scope:real_father = {
						has_trait = source
					}
				}
				scope:child = {
					make_trait_active = source
				}
				
			}
			else = {
				random = {
					chance = 50
					scope:child = {
						make_trait_active = source
					}
				}
			}
		}
		else_if = {
			limit = {
				scope:child = {
					NOR = {
						has_trait = source
						has_trait = source2
						has_trait = source3
					}
				}
			}
			if = {
				limit = {
					exists = scope:mother
					scope:mother = {
						has_trait = source
					}
					exists = scope:real_father
					scope:real_father = {
						has_trait = source
					}
				}
				random = {
					chance = 90
					scope:child = {
						add_trait = source
					}
				}
			}
			else = {
				random = {
					chance = 40
					scope:child = {
						add_trait = source
					}
				}
			}
		}
	}
}


on_action_yagas_blood = { 
	trigger = {
		OR = {
			scope:mother = {
				has_trait = source2
			}
			scope:real_father = {
				has_trait = source2
			}
			scope:mother = {
				has_trait = yaga
			}
			scope:real_father = {
				has_trait = yaga
			}
		}
	}
	effect = {
		scope:child = {
			if = {
				limit = {
					OR = {
						has_trait = source
						AND = {
							scope:mother = {
								has_trait = source2
							}
							scope:real_father = {
								has_trait = source2
							}
						}
						scope:mother = {
							has_trait = yaga
						}
						scope:real_father = {
							has_trait = yaga
						}
					}
				}
				hidden_effect = {
					if = {
						limit = {
							has_trait = source
						}
						remove_trait = source
					}
				}
				if = {
					limit = {
						NOR = {
							has_trait = source2
							has_trait = source3
						}
					}
					add_trait = source2
				}
			}
			else_if = {
				limit = {
					OR = {
						AND = {
							scope:mother = {
								has_trait = source
							}
							scope:real_father = {
								has_trait = source2
							}
						}
						AND = {
							scope:mother = {
								has_trait = source2
							}
							scope:real_father = {
								has_trait = source
							}
						}
					}
				}
				if = {
					limit = {
						NOR = {
							has_trait = source2
							has_trait = source3
						}
					}
					random_list = {
						4 = {
							if = {
								limit = {
									has_inactive_trait = source
									NOR = {
										has_trait = source2
										has_trait = source3
									}
								}
								make_trait_active = source
							}
							else = {
								add_trait = source
							}
						}
						4 = {
							add_trait = source2
						}
						2 = {
							
						}
					}
				}
			}
		}
	}
}

on_action_source_from_s3 = { 
	trigger = {
		OR = {
			scope:mother = {
				has_trait = source3
			}
			scope:real_father = {
				has_trait = source3
			}
		}
	}
	effect = {
		scope:child = {
			if = {
				limit = {
					NOR = {
						has_trait = source
						has_trait = source2
						has_trait = source3
					}
				}
				if = {
					limit = {
						has_inactive_trait = source
						NOR = {
							has_trait = source2
							has_trait = source3
						}
					}
					make_trait_active = source
				}
				else = {
					add_trait = source
				}
			}
		}
	}
}

on_action_pandora_s3 = {
	trigger = {
		OR = {
			scope:mother = {
				has_character_flag = pandora_flag
			}
			scope:real_father = {
				has_character_flag = pandora_flag
			}
		}
	}
	effect = {
		random = {
			chance = 2
			if = {
				limit = {
					has_trait = source
				}
				remove_trait = source
			}
			if = {
				limit = {
					has_trait = source2
				}
				remove_trait = source2
			}
			if = {
				limit = {
					NOT = {	has_trait = source3	}
				}
				add_trait = source3
			}
		}
	}
}

on_death = {
	on_actions = {
		on_action_death_witch
		on_action_death_witch_hunter
		pandoras_protector_dies_on_action
		#on_action_death_dark_blade
	}
	events = {
		magic_ev4.47	#Darkblade upgrade
		magic_ev6.34
		magic_ev6.75	#Al-Hazred died
	}
}

on_action_death_witch = {
	trigger = {
		OR = {
			has_trait = witch
			any_secret = { secret_type = secret_witch }
		}
	}
	effect = {
		if = {
			limit = {
				exists = scope:killer
				scope:killer = {
					has_trait=witch_hunter
				}
			}
			if = {
				limit = {
					OR = {
						has_trait = archmage
						has_trait = grandmaster_coven
						has_trait = demon
					}
				}
				scope:killer = {
					send_interface_toast = {
						title = one_less_witch_title
						add_trait_xp = {
							trait = supernatural_hunter
							track = witch_hunting
							value = 60
						}
					}
				}
			}
			else_if = {
				limit = {
					OR = {
						has_trait = true_witch
						has_trait = source
					}
				}
				scope:killer = {
					send_interface_toast = {
						title = one_less_witch_title
						add_trait_xp = {
							trait = supernatural_hunter
							track = witch_hunting
							value = 30
						}
					}
				}
			}
			else_if = {
				limit = {
					is_ruler = yes
				}
				scope:killer = {
					send_interface_toast = {
						title = one_less_witch_title
						add_trait_xp = {
							trait = supernatural_hunter
							track = witch_hunting
							value = 20
						}
					}
				}
			}
			else = {
				scope:killer = {
					send_interface_toast = {
						title = one_less_witch_title
						add_trait_xp = {
							trait = supernatural_hunter
							track = witch_hunting
							value = 10
						}
					}
				}
			}
		}
	}
}

on_action_death_witch_hunter = {
	trigger = {
		has_trait = witch_hunter
		has_trait_xp = {
			trait = supernatural_hunter
			track = witch_hunting
			value > 99
		}
		NOT = {
			has_character_modifier = inq_modifier
		}
	}
	effect = {
		if = {
			limit = {
				exists = this.player_heir
				this.player_heir = {
					NOR = {
						has_trait = witch
						any_secret = { secret_type = secret_witch }
					}
				}
			}
			player_heir = {
				add_trait = witch_hunter
				if = {
					limit = {
						NOT = {
							has_perk = protective_runes_perk
						}
					}
					add_perk = protective_runes_perk
				}
				if = {
					limit = {
						NOT = {
							has_perk = magical_senses_perk
						}
					}
					add_perk = magical_senses_perk
				}
				#add_perk = protective_runes_perk
				#add_perk = magical_senses_perk
				hidden_effect = {
					random = {
						chance = 50
						trigger_event = {
							id = magic_ev4.1
							years = {	6	12	}
						}
					}
					random = {
						chance = 20
						create_true_witch_effect = yes
					}
					trigger_event = {
						id = magic_ev2.58
						years = {	10	15	}
					}
				}
				
			}
		}
	}
}

on_game_start_after_lobby = {
	events = {
		magic_ev4.50
	}
}

on_travel_plan_movement = {
	on_actions = {
		witch_hunter_trap_on_action
		delay = { days = 1 }
	}
}
witch_hunter_trap_on_action = {
	trigger = {
		is_landed = yes
		is_adult = yes
		has_character_modifier = tracked_by_witch_hunter_modifier
	}
	random_events = {
		chance_of_no_event = {
			value = {
				add = 100
				subtract = root.current_travel_plan.current_danger_value
				add = root.current_travel_plan.travel_safety
			}
			max = {
				value = 100
				subtract = define:NTravel|TRAVEL_DANGER_MINIMUM
			}
		}
		80 = 0
		20 = magic_ev5.31
	}
}

on_county_occupied = {
	on_actions = {
		pandora_capture_on_action
		delay = { days = 1 }
	}
}

pandora_capture_on_action = {
	trigger = {
		has_character_flag = pandora_stage1
		scope:county = {
			has_variable = pandoras_hideout
		}
	}
	effect = {
		add_character_flag = pandora_from_castle
		scope:county = {
			remove_variable = pandoras_hideout
		}
	}
	events = {
		magic_ev5.47
	}
}
pandoras_protector_dies_on_action = {
	trigger = {
		has_character_flag = pandoras_protector
		#exists = scope:killer
		any_living_character = {
			has_character_flag = pandora_stage1
			#this = scope:killer
		}
	}
	events = {
		magic_ev5.48
	}
}

on_war_started = {
	on_actions = {
		mage_war_on_action
	}
}
mage_war_on_action = {
	trigger = {
		OR = {
			scope:attacker = {
				has_trait = archmage
				is_ai = yes
			}
			scope:defender = {
				has_trait = archmage
				is_ai = yes
			}
		}
	}
	effect = {
		if = {
			limit = {
				scope:attacker = {
					has_trait = archmage
					is_ai = yes
					any_relation ={
						type = mminion
						count < 4
					}
				}
			}
			scope:attacker = {
				if = {
					limit = {
						any_neighboring_and_across_water_realm_same_rank_owner = {
							is_ai = yes
							is_at_war = no
							NOR = {
								has_perk = protective_runes_perk
								has_perk = mage_p4_perk
								has_character_modifier = aura_boost1_modifier
								has_character_modifier = aura_boost2_modifier
								has_trait = demon
							}
						}
					}
					random_neighboring_and_across_water_realm_same_rank_owner = {
						limit = {
							is_ai = yes
							is_at_war = no
							NOR = {
								has_perk = protective_runes_perk
								has_perk = mage_p4_perk
								has_character_modifier = aura_boost1_modifier
								has_character_modifier = aura_boost2_modifier
								has_trait = demon
							}
						}
						save_scope_as = neig0
					}
					set_relation_mminion = scope:neig0
					add_hook = {
						type = magic_domination_hook
						target = scope:neig0
					}
					scope:war = {
						add_attacker = scope:neig0
					}
				}
			}
		}
		else_if = {
			limit = {
				scope:defender = {
					has_trait = archmage
					is_ai = yes
					any_relation ={
						type = mminion
						count < 4
					}
				}
			}
			scope:defender = {
				if = {
					limit = {
						any_neighboring_and_across_water_realm_same_rank_owner = {
							is_ai = yes
							is_at_war = no
							NOR = {
								has_perk = protective_runes_perk
								has_perk = mage_p4_perk
								has_character_modifier = aura_boost1_modifier
								has_character_modifier = aura_boost2_modifier
								has_trait = demon
							}
						}
					}
					random_neighboring_and_across_water_realm_same_rank_owner = {
						limit = {
							is_ai = yes
							is_at_war = no
							NOR = {
								has_perk = protective_runes_perk
								has_perk = mage_p4_perk
								has_character_modifier = aura_boost1_modifier
								has_character_modifier = aura_boost2_modifier
								has_trait = demon
							}
						}
						save_scope_as = neig0
					}
					set_relation_mminion = scope:neig0
					add_hook = {
						type = magic_domination_hook
						target = scope:neig0
					}
					scope:war = {
						add_defender = scope:neig0
					}
				}
			}
		}
	}
}